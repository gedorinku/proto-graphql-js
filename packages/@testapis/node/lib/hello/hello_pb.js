// source: hello/hello.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.testapi.hello.Hello', null, global);
goog.exportSymbol('proto.testapi.hello.Primitives', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.hello.Hello = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.testapi.hello.Hello.repeatedFields_, null);
};
goog.inherits(proto.testapi.hello.Hello, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.hello.Hello.displayName = 'proto.testapi.hello.Hello';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.hello.Primitives = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.hello.Primitives, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.hello.Primitives.displayName = 'proto.testapi.hello.Primitives';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.testapi.hello.Hello.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.hello.Hello.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.hello.Hello.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.hello.Hello} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.hello.Hello.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredPrimitives: (f = msg.getRequiredPrimitives()) && proto.testapi.hello.Primitives.toObject(includeInstance, f),
    optionalPrimitives: (f = msg.getOptionalPrimitives()) && proto.testapi.hello.Primitives.toObject(includeInstance, f),
    requiredPrimitivesListList: jspb.Message.toObjectList(msg.getRequiredPrimitivesListList(),
    proto.testapi.hello.Primitives.toObject, includeInstance),
    optionalPrimitivesList: (f = msg.getOptionalPrimitivesList()) && proto.testapi.hello.Primitives.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.hello.Hello}
 */
proto.testapi.hello.Hello.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.hello.Hello;
  return proto.testapi.hello.Hello.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.hello.Hello} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.hello.Hello}
 */
proto.testapi.hello.Hello.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.testapi.hello.Primitives;
      reader.readMessage(value,proto.testapi.hello.Primitives.deserializeBinaryFromReader);
      msg.setRequiredPrimitives(value);
      break;
    case 2:
      var value = new proto.testapi.hello.Primitives;
      reader.readMessage(value,proto.testapi.hello.Primitives.deserializeBinaryFromReader);
      msg.setOptionalPrimitives(value);
      break;
    case 3:
      var value = new proto.testapi.hello.Primitives;
      reader.readMessage(value,proto.testapi.hello.Primitives.deserializeBinaryFromReader);
      msg.addRequiredPrimitivesList(value);
      break;
    case 4:
      var value = new proto.testapi.hello.Primitives;
      reader.readMessage(value,proto.testapi.hello.Primitives.deserializeBinaryFromReader);
      msg.setOptionalPrimitivesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.hello.Hello.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.hello.Hello.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.hello.Hello} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.hello.Hello.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredPrimitives();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.testapi.hello.Primitives.serializeBinaryToWriter
    );
  }
  f = message.getOptionalPrimitives();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.testapi.hello.Primitives.serializeBinaryToWriter
    );
  }
  f = message.getRequiredPrimitivesListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.testapi.hello.Primitives.serializeBinaryToWriter
    );
  }
  f = message.getOptionalPrimitivesList();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.testapi.hello.Primitives.serializeBinaryToWriter
    );
  }
};


/**
 * optional Primitives required_primitives = 1;
 * @return {?proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Hello.prototype.getRequiredPrimitives = function() {
  return /** @type{?proto.testapi.hello.Primitives} */ (
    jspb.Message.getWrapperField(this, proto.testapi.hello.Primitives, 1));
};


/**
 * @param {?proto.testapi.hello.Primitives|undefined} value
 * @return {!proto.testapi.hello.Hello} returns this
*/
proto.testapi.hello.Hello.prototype.setRequiredPrimitives = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.hello.Hello} returns this
 */
proto.testapi.hello.Hello.prototype.clearRequiredPrimitives = function() {
  return this.setRequiredPrimitives(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.hello.Hello.prototype.hasRequiredPrimitives = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Primitives optional_primitives = 2;
 * @return {?proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Hello.prototype.getOptionalPrimitives = function() {
  return /** @type{?proto.testapi.hello.Primitives} */ (
    jspb.Message.getWrapperField(this, proto.testapi.hello.Primitives, 2));
};


/**
 * @param {?proto.testapi.hello.Primitives|undefined} value
 * @return {!proto.testapi.hello.Hello} returns this
*/
proto.testapi.hello.Hello.prototype.setOptionalPrimitives = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.hello.Hello} returns this
 */
proto.testapi.hello.Hello.prototype.clearOptionalPrimitives = function() {
  return this.setOptionalPrimitives(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.hello.Hello.prototype.hasOptionalPrimitives = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Primitives required_primitives_list = 3;
 * @return {!Array<!proto.testapi.hello.Primitives>}
 */
proto.testapi.hello.Hello.prototype.getRequiredPrimitivesListList = function() {
  return /** @type{!Array<!proto.testapi.hello.Primitives>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.testapi.hello.Primitives, 3));
};


/**
 * @param {!Array<!proto.testapi.hello.Primitives>} value
 * @return {!proto.testapi.hello.Hello} returns this
*/
proto.testapi.hello.Hello.prototype.setRequiredPrimitivesListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.testapi.hello.Primitives=} opt_value
 * @param {number=} opt_index
 * @return {!proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Hello.prototype.addRequiredPrimitivesList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.testapi.hello.Primitives, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.testapi.hello.Hello} returns this
 */
proto.testapi.hello.Hello.prototype.clearRequiredPrimitivesListList = function() {
  return this.setRequiredPrimitivesListList([]);
};


/**
 * optional Primitives optional_primitives_list = 4;
 * @return {?proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Hello.prototype.getOptionalPrimitivesList = function() {
  return /** @type{?proto.testapi.hello.Primitives} */ (
    jspb.Message.getWrapperField(this, proto.testapi.hello.Primitives, 4));
};


/**
 * @param {?proto.testapi.hello.Primitives|undefined} value
 * @return {!proto.testapi.hello.Hello} returns this
*/
proto.testapi.hello.Hello.prototype.setOptionalPrimitivesList = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.hello.Hello} returns this
 */
proto.testapi.hello.Hello.prototype.clearOptionalPrimitivesList = function() {
  return this.setOptionalPrimitivesList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.hello.Hello.prototype.hasOptionalPrimitivesList = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.hello.Primitives.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.hello.Primitives.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.hello.Primitives} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.hello.Primitives.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredDoubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    requiredFloatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    requiredInt32Value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    requiredInt64Value: jspb.Message.getFieldWithDefault(msg, 4, 0),
    requiredUint32Value: jspb.Message.getFieldWithDefault(msg, 5, 0),
    requiredUint64Value: jspb.Message.getFieldWithDefault(msg, 6, 0),
    requiredSint32Value: jspb.Message.getFieldWithDefault(msg, 7, 0),
    requiredSint64Value: jspb.Message.getFieldWithDefault(msg, 8, 0),
    requiredFixed32Value: jspb.Message.getFieldWithDefault(msg, 9, 0),
    requiredFixed64Value: jspb.Message.getFieldWithDefault(msg, 10, 0),
    requiredSfixed32Value: jspb.Message.getFieldWithDefault(msg, 11, 0),
    requiredSfixed64Value: jspb.Message.getFieldWithDefault(msg, 12, 0),
    requiredBoolValue: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    requiredStringValue: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Primitives.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.hello.Primitives;
  return proto.testapi.hello.Primitives.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.hello.Primitives} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.hello.Primitives}
 */
proto.testapi.hello.Primitives.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredDoubleValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRequiredFloatValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredInt32Value(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequiredInt64Value(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredUint32Value(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequiredUint64Value(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setRequiredSint32Value(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRequiredSint64Value(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setRequiredFixed32Value(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setRequiredFixed64Value(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setRequiredSfixed32Value(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setRequiredSfixed64Value(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequiredBoolValue(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequiredStringValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.hello.Primitives.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.hello.Primitives.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.hello.Primitives} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.hello.Primitives.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredDoubleValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getRequiredFloatValue();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getRequiredInt32Value();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRequiredInt64Value();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRequiredUint32Value();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getRequiredUint64Value();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getRequiredSint32Value();
  if (f !== 0) {
    writer.writeSint32(
      7,
      f
    );
  }
  f = message.getRequiredSint64Value();
  if (f !== 0) {
    writer.writeSint64(
      8,
      f
    );
  }
  f = message.getRequiredFixed32Value();
  if (f !== 0) {
    writer.writeFixed32(
      9,
      f
    );
  }
  f = message.getRequiredFixed64Value();
  if (f !== 0) {
    writer.writeFixed64(
      10,
      f
    );
  }
  f = message.getRequiredSfixed32Value();
  if (f !== 0) {
    writer.writeSfixed32(
      11,
      f
    );
  }
  f = message.getRequiredSfixed64Value();
  if (f !== 0) {
    writer.writeSfixed64(
      12,
      f
    );
  }
  f = message.getRequiredBoolValue();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getRequiredStringValue();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional double required_double_value = 1;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredDoubleValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float required_float_value = 2;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredFloatValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 required_int32_value = 3;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredInt32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredInt32Value = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 required_int64_value = 4;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredInt64Value = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 required_uint32_value = 5;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredUint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredUint32Value = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 required_uint64_value = 6;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredUint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredUint64Value = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sint32 required_sint32_value = 7;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredSint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredSint32Value = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional sint64 required_sint64_value = 8;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredSint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredSint64Value = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional fixed32 required_fixed32_value = 9;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredFixed32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredFixed32Value = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional fixed64 required_fixed64_value = 10;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredFixed64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredFixed64Value = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional sfixed32 required_sfixed32_value = 11;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredSfixed32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredSfixed32Value = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional sfixed64 required_sfixed64_value = 12;
 * @return {number}
 */
proto.testapi.hello.Primitives.prototype.getRequiredSfixed64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredSfixed64Value = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool required_bool_value = 13;
 * @return {boolean}
 */
proto.testapi.hello.Primitives.prototype.getRequiredBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredBoolValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string required_string_value = 14;
 * @return {string}
 */
proto.testapi.hello.Primitives.prototype.getRequiredStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.hello.Primitives} returns this
 */
proto.testapi.hello.Primitives.prototype.setRequiredStringValue = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


goog.object.extend(exports, proto.testapi.hello);
