// source: deprecation/deprecation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.testapi.deprecation.DeprecatedEnum', null, global);
goog.exportSymbol('proto.testapi.deprecation.DeprecatedMessage', null, global);
goog.exportSymbol('proto.testapi.deprecation.DeprecatedMessage.InnerMessage', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedEnum', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedMessage', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedMessage.DeprecatedOneofCase', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2', null, global);
goog.exportSymbol('proto.testapi.deprecation.NotDeprecatedMessage.NotDeprecatedOneofCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.deprecation.DeprecatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.deprecation.DeprecatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.deprecation.DeprecatedMessage.displayName = 'proto.testapi.deprecation.DeprecatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.deprecation.DeprecatedMessage.InnerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.deprecation.DeprecatedMessage.InnerMessage.displayName = 'proto.testapi.deprecation.DeprecatedMessage.InnerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.deprecation.NotDeprecatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_);
};
goog.inherits(proto.testapi.deprecation.NotDeprecatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.deprecation.NotDeprecatedMessage.displayName = 'proto.testapi.deprecation.NotDeprecatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.displayName = 'proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.displayName = 'proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.deprecation.DeprecatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.deprecation.DeprecatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.DeprecatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_enum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.deprecation.DeprecatedMessage}
 */
proto.testapi.deprecation.DeprecatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.deprecation.DeprecatedMessage;
  return proto.testapi.deprecation.DeprecatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.deprecation.DeprecatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.deprecation.DeprecatedMessage}
 */
proto.testapi.deprecation.DeprecatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 2:
      var value = /** @type {!proto.testapi.deprecation.NotDeprecatedEnum} */ (reader.readEnum());
      msg.setEnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.deprecation.DeprecatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.deprecation.DeprecatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.DeprecatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnum();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.deprecation.DeprecatedMessage.InnerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage}
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.deprecation.DeprecatedMessage.InnerMessage;
  return proto.testapi.deprecation.DeprecatedMessage.InnerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage}
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.deprecation.DeprecatedMessage.InnerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.deprecation.DeprecatedMessage.InnerMessage} returns this
 */
proto.testapi.deprecation.DeprecatedMessage.InnerMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.deprecation.DeprecatedMessage} returns this
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NotDeprecatedEnum enum = 2;
 * @return {!proto.testapi.deprecation.NotDeprecatedEnum}
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.getEnum = function() {
  return /** @type {!proto.testapi.deprecation.NotDeprecatedEnum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.testapi.deprecation.NotDeprecatedEnum} value
 * @return {!proto.testapi.deprecation.DeprecatedMessage} returns this
 */
proto.testapi.deprecation.DeprecatedMessage.prototype.setEnum = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_ = [[3,4],[5,6]];

/**
 * @enum {number}
 */
proto.testapi.deprecation.NotDeprecatedMessage.NotDeprecatedOneofCase = {
  NOT_DEPRECATED_ONEOF_NOT_SET: 0,
  MSG1: 3,
  MSG2: 4
};

/**
 * @return {proto.testapi.deprecation.NotDeprecatedMessage.NotDeprecatedOneofCase}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getNotDeprecatedOneofCase = function() {
  return /** @type {proto.testapi.deprecation.NotDeprecatedMessage.NotDeprecatedOneofCase} */(jspb.Message.computeOneofCase(this, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.testapi.deprecation.NotDeprecatedMessage.DeprecatedOneofCase = {
  DEPRECATED_ONEOF_NOT_SET: 0,
  MSG3: 5,
  MSG4: 6
};

/**
 * @return {proto.testapi.deprecation.NotDeprecatedMessage.DeprecatedOneofCase}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getDeprecatedOneofCase = function() {
  return /** @type {proto.testapi.deprecation.NotDeprecatedMessage.DeprecatedOneofCase} */(jspb.Message.computeOneofCase(this, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.deprecation.NotDeprecatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_enum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    msg1: (f = msg.getMsg1()) && proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.toObject(includeInstance, f),
    msg2: (f = msg.getMsg2()) && proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.toObject(includeInstance, f),
    msg3: (f = msg.getMsg3()) && proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.toObject(includeInstance, f),
    msg4: (f = msg.getMsg4()) && proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage}
 */
proto.testapi.deprecation.NotDeprecatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.deprecation.NotDeprecatedMessage;
  return proto.testapi.deprecation.NotDeprecatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage}
 */
proto.testapi.deprecation.NotDeprecatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 2:
      var value = /** @type {!proto.testapi.deprecation.DeprecatedEnum} */ (reader.readEnum());
      msg.setEnum(value);
      break;
    case 3:
      var value = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1;
      reader.readMessage(value,proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.deserializeBinaryFromReader);
      msg.setMsg1(value);
      break;
    case 4:
      var value = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2;
      reader.readMessage(value,proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.deserializeBinaryFromReader);
      msg.setMsg2(value);
      break;
    case 5:
      var value = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1;
      reader.readMessage(value,proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.deserializeBinaryFromReader);
      msg.setMsg3(value);
      break;
    case 6:
      var value = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2;
      reader.readMessage(value,proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.deserializeBinaryFromReader);
      msg.setMsg4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.deprecation.NotDeprecatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnum();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMsg1();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.serializeBinaryToWriter
    );
  }
  f = message.getMsg2();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.serializeBinaryToWriter
    );
  }
  f = message.getMsg3();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.serializeBinaryToWriter
    );
  }
  f = message.getMsg4();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1;
  return proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2;
  return proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeprecatedEnum enum = 2;
 * @return {!proto.testapi.deprecation.DeprecatedEnum}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getEnum = function() {
  return /** @type {!proto.testapi.deprecation.DeprecatedEnum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.testapi.deprecation.DeprecatedEnum} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setEnum = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional InnerMessage1 msg1 = 3;
 * @return {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getMsg1 = function() {
  return /** @type{?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} */ (
    jspb.Message.getWrapperField(this, proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1, 3));
};


/**
 * @param {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1|undefined} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
*/
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setMsg1 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.clearMsg1 = function() {
  return this.setMsg1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.hasMsg1 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InnerMessage2 msg2 = 4;
 * @return {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getMsg2 = function() {
  return /** @type{?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} */ (
    jspb.Message.getWrapperField(this, proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2, 4));
};


/**
 * @param {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2|undefined} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
*/
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setMsg2 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.clearMsg2 = function() {
  return this.setMsg2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.hasMsg2 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional InnerMessage1 msg3 = 5;
 * @return {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getMsg3 = function() {
  return /** @type{?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1} */ (
    jspb.Message.getWrapperField(this, proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1, 5));
};


/**
 * @param {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage1|undefined} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
*/
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setMsg3 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.clearMsg3 = function() {
  return this.setMsg3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.hasMsg3 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional InnerMessage2 msg4 = 6;
 * @return {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.getMsg4 = function() {
  return /** @type{?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2} */ (
    jspb.Message.getWrapperField(this, proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2, 6));
};


/**
 * @param {?proto.testapi.deprecation.NotDeprecatedMessage.InnerMessage2|undefined} value
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
*/
proto.testapi.deprecation.NotDeprecatedMessage.prototype.setMsg4 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.testapi.deprecation.NotDeprecatedMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.deprecation.NotDeprecatedMessage} returns this
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.clearMsg4 = function() {
  return this.setMsg4(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.deprecation.NotDeprecatedMessage.prototype.hasMsg4 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.testapi.deprecation.NotDeprecatedEnum = {
  NOT_DEPRECATED_ENUM_UNSPECIFIED: 0,
  NOT_DEPRECATED_FOO: 1,
  DEPRECATED_BAR: 2
};

/**
 * @enum {number}
 */
proto.testapi.deprecation.DeprecatedEnum = {
  DEPRECATED_ENUM_UNSPECIFIED: 0,
  DEPRECATED_BAZ: 1,
  DEPRECATED_QUX: 2
};

goog.object.extend(exports, proto.testapi.deprecation);
