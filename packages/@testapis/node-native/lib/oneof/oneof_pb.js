// source: oneof/oneof.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.testapi.oneof.OneofMemberMessage1', null, global);
goog.exportSymbol('proto.testapi.oneof.OneofMemberMessage2', null, global);
goog.exportSymbol('proto.testapi.oneof.OneofParent', null, global);
goog.exportSymbol('proto.testapi.oneof.OneofParent.OptionalOneofMembersCase', null, global);
goog.exportSymbol('proto.testapi.oneof.OneofParent.RequiredOneofMembersCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.oneof.OneofParent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.testapi.oneof.OneofParent.oneofGroups_);
};
goog.inherits(proto.testapi.oneof.OneofParent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.oneof.OneofParent.displayName = 'proto.testapi.oneof.OneofParent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.oneof.OneofMemberMessage1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.oneof.OneofMemberMessage1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.oneof.OneofMemberMessage1.displayName = 'proto.testapi.oneof.OneofMemberMessage1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testapi.oneof.OneofMemberMessage2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testapi.oneof.OneofMemberMessage2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testapi.oneof.OneofMemberMessage2.displayName = 'proto.testapi.oneof.OneofMemberMessage2';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.testapi.oneof.OneofParent.oneofGroups_ = [[2,3],[4,5]];

/**
 * @enum {number}
 */
proto.testapi.oneof.OneofParent.RequiredOneofMembersCase = {
  REQUIRED_ONEOF_MEMBERS_NOT_SET: 0,
  REQUIRED_MESSAGE1: 2,
  REQUIRED_MESSAGE2: 3
};

/**
 * @return {proto.testapi.oneof.OneofParent.RequiredOneofMembersCase}
 */
proto.testapi.oneof.OneofParent.prototype.getRequiredOneofMembersCase = function() {
  return /** @type {proto.testapi.oneof.OneofParent.RequiredOneofMembersCase} */(jspb.Message.computeOneofCase(this, proto.testapi.oneof.OneofParent.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.testapi.oneof.OneofParent.OptionalOneofMembersCase = {
  OPTIONAL_ONEOF_MEMBERS_NOT_SET: 0,
  OPTOINAL_MESSAGE1: 4,
  OPTOINAL_MESSAGE2: 5
};

/**
 * @return {proto.testapi.oneof.OneofParent.OptionalOneofMembersCase}
 */
proto.testapi.oneof.OneofParent.prototype.getOptionalOneofMembersCase = function() {
  return /** @type {proto.testapi.oneof.OneofParent.OptionalOneofMembersCase} */(jspb.Message.computeOneofCase(this, proto.testapi.oneof.OneofParent.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.oneof.OneofParent.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.oneof.OneofParent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.oneof.OneofParent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofParent.toObject = function(includeInstance, msg) {
  var f, obj = {
    normalField: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requiredMessage1: (f = msg.getRequiredMessage1()) && proto.testapi.oneof.OneofMemberMessage1.toObject(includeInstance, f),
    requiredMessage2: (f = msg.getRequiredMessage2()) && proto.testapi.oneof.OneofMemberMessage2.toObject(includeInstance, f),
    optoinalMessage1: (f = msg.getOptoinalMessage1()) && proto.testapi.oneof.OneofMemberMessage1.toObject(includeInstance, f),
    optoinalMessage2: (f = msg.getOptoinalMessage2()) && proto.testapi.oneof.OneofMemberMessage2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.oneof.OneofParent}
 */
proto.testapi.oneof.OneofParent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.oneof.OneofParent;
  return proto.testapi.oneof.OneofParent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.oneof.OneofParent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.oneof.OneofParent}
 */
proto.testapi.oneof.OneofParent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNormalField(value);
      break;
    case 2:
      var value = new proto.testapi.oneof.OneofMemberMessage1;
      reader.readMessage(value,proto.testapi.oneof.OneofMemberMessage1.deserializeBinaryFromReader);
      msg.setRequiredMessage1(value);
      break;
    case 3:
      var value = new proto.testapi.oneof.OneofMemberMessage2;
      reader.readMessage(value,proto.testapi.oneof.OneofMemberMessage2.deserializeBinaryFromReader);
      msg.setRequiredMessage2(value);
      break;
    case 4:
      var value = new proto.testapi.oneof.OneofMemberMessage1;
      reader.readMessage(value,proto.testapi.oneof.OneofMemberMessage1.deserializeBinaryFromReader);
      msg.setOptoinalMessage1(value);
      break;
    case 5:
      var value = new proto.testapi.oneof.OneofMemberMessage2;
      reader.readMessage(value,proto.testapi.oneof.OneofMemberMessage2.deserializeBinaryFromReader);
      msg.setOptoinalMessage2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.oneof.OneofParent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.oneof.OneofParent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.oneof.OneofParent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofParent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNormalField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequiredMessage1();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.testapi.oneof.OneofMemberMessage1.serializeBinaryToWriter
    );
  }
  f = message.getRequiredMessage2();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.testapi.oneof.OneofMemberMessage2.serializeBinaryToWriter
    );
  }
  f = message.getOptoinalMessage1();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.testapi.oneof.OneofMemberMessage1.serializeBinaryToWriter
    );
  }
  f = message.getOptoinalMessage2();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.testapi.oneof.OneofMemberMessage2.serializeBinaryToWriter
    );
  }
};


/**
 * optional string normal_field = 1;
 * @return {string}
 */
proto.testapi.oneof.OneofParent.prototype.getNormalField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.oneof.OneofParent} returns this
 */
proto.testapi.oneof.OneofParent.prototype.setNormalField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OneofMemberMessage1 required_message1 = 2;
 * @return {?proto.testapi.oneof.OneofMemberMessage1}
 */
proto.testapi.oneof.OneofParent.prototype.getRequiredMessage1 = function() {
  return /** @type{?proto.testapi.oneof.OneofMemberMessage1} */ (
    jspb.Message.getWrapperField(this, proto.testapi.oneof.OneofMemberMessage1, 2));
};


/**
 * @param {?proto.testapi.oneof.OneofMemberMessage1|undefined} value
 * @return {!proto.testapi.oneof.OneofParent} returns this
*/
proto.testapi.oneof.OneofParent.prototype.setRequiredMessage1 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.testapi.oneof.OneofParent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.oneof.OneofParent} returns this
 */
proto.testapi.oneof.OneofParent.prototype.clearRequiredMessage1 = function() {
  return this.setRequiredMessage1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.oneof.OneofParent.prototype.hasRequiredMessage1 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OneofMemberMessage2 required_message2 = 3;
 * @return {?proto.testapi.oneof.OneofMemberMessage2}
 */
proto.testapi.oneof.OneofParent.prototype.getRequiredMessage2 = function() {
  return /** @type{?proto.testapi.oneof.OneofMemberMessage2} */ (
    jspb.Message.getWrapperField(this, proto.testapi.oneof.OneofMemberMessage2, 3));
};


/**
 * @param {?proto.testapi.oneof.OneofMemberMessage2|undefined} value
 * @return {!proto.testapi.oneof.OneofParent} returns this
*/
proto.testapi.oneof.OneofParent.prototype.setRequiredMessage2 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.testapi.oneof.OneofParent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.oneof.OneofParent} returns this
 */
proto.testapi.oneof.OneofParent.prototype.clearRequiredMessage2 = function() {
  return this.setRequiredMessage2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.oneof.OneofParent.prototype.hasRequiredMessage2 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OneofMemberMessage1 optoinal_message1 = 4;
 * @return {?proto.testapi.oneof.OneofMemberMessage1}
 */
proto.testapi.oneof.OneofParent.prototype.getOptoinalMessage1 = function() {
  return /** @type{?proto.testapi.oneof.OneofMemberMessage1} */ (
    jspb.Message.getWrapperField(this, proto.testapi.oneof.OneofMemberMessage1, 4));
};


/**
 * @param {?proto.testapi.oneof.OneofMemberMessage1|undefined} value
 * @return {!proto.testapi.oneof.OneofParent} returns this
*/
proto.testapi.oneof.OneofParent.prototype.setOptoinalMessage1 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.testapi.oneof.OneofParent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.oneof.OneofParent} returns this
 */
proto.testapi.oneof.OneofParent.prototype.clearOptoinalMessage1 = function() {
  return this.setOptoinalMessage1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.oneof.OneofParent.prototype.hasOptoinalMessage1 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OneofMemberMessage2 optoinal_message2 = 5;
 * @return {?proto.testapi.oneof.OneofMemberMessage2}
 */
proto.testapi.oneof.OneofParent.prototype.getOptoinalMessage2 = function() {
  return /** @type{?proto.testapi.oneof.OneofMemberMessage2} */ (
    jspb.Message.getWrapperField(this, proto.testapi.oneof.OneofMemberMessage2, 5));
};


/**
 * @param {?proto.testapi.oneof.OneofMemberMessage2|undefined} value
 * @return {!proto.testapi.oneof.OneofParent} returns this
*/
proto.testapi.oneof.OneofParent.prototype.setOptoinalMessage2 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.testapi.oneof.OneofParent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.testapi.oneof.OneofParent} returns this
 */
proto.testapi.oneof.OneofParent.prototype.clearOptoinalMessage2 = function() {
  return this.setOptoinalMessage2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testapi.oneof.OneofParent.prototype.hasOptoinalMessage2 = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.oneof.OneofMemberMessage1.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.oneof.OneofMemberMessage1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.oneof.OneofMemberMessage1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofMemberMessage1.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.oneof.OneofMemberMessage1}
 */
proto.testapi.oneof.OneofMemberMessage1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.oneof.OneofMemberMessage1;
  return proto.testapi.oneof.OneofMemberMessage1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.oneof.OneofMemberMessage1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.oneof.OneofMemberMessage1}
 */
proto.testapi.oneof.OneofMemberMessage1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.oneof.OneofMemberMessage1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.oneof.OneofMemberMessage1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.oneof.OneofMemberMessage1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofMemberMessage1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.testapi.oneof.OneofMemberMessage1.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.oneof.OneofMemberMessage1} returns this
 */
proto.testapi.oneof.OneofMemberMessage1.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testapi.oneof.OneofMemberMessage2.prototype.toObject = function(opt_includeInstance) {
  return proto.testapi.oneof.OneofMemberMessage2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testapi.oneof.OneofMemberMessage2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofMemberMessage2.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageUrl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testapi.oneof.OneofMemberMessage2}
 */
proto.testapi.oneof.OneofMemberMessage2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testapi.oneof.OneofMemberMessage2;
  return proto.testapi.oneof.OneofMemberMessage2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testapi.oneof.OneofMemberMessage2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testapi.oneof.OneofMemberMessage2}
 */
proto.testapi.oneof.OneofMemberMessage2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testapi.oneof.OneofMemberMessage2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testapi.oneof.OneofMemberMessage2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testapi.oneof.OneofMemberMessage2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testapi.oneof.OneofMemberMessage2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string image_url = 1;
 * @return {string}
 */
proto.testapi.oneof.OneofMemberMessage2.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.testapi.oneof.OneofMemberMessage2} returns this
 */
proto.testapi.oneof.OneofMemberMessage2.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.testapi.oneof);
