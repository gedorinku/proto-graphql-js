// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/nested/nested.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from "nexus";
import * as $$testapis$node_native$lib$testapis$nested$nested_pb from "@testapis/node-native/lib/testapis/nested/nested_pb";
export type $$testapis$node_native$lib$testapis$nested$nested_pb$ParentMessage = $$testapis$node_native$lib$testapis$nested$nested_pb.ParentMessage;
export type $$testapis$node_native$lib$testapis$nested$nested_pb$ParentMessageNestedMessage = $$testapis$node_native$lib$testapis$nested$nested_pb.ParentMessage.NestedMessage;
export const ParentMessage = objectType({
    name: "ParentMessage",
    description: "",
    definition(t) {
        t.field("body", {
            type: nonNull("String"),
            description: "",
            resolve(root) { return root.getBody(); }
        });
        t.field("nested", {
            type: nullable("ParentMessageNestedMessage"),
            description: "",
            resolve(root) { return root.getNested() ?? null; }
        });
        t.field("nestedEnum", {
            type: nullable("ParentMessageNestedEnum"),
            description: "",
            resolve(root) { return root.getNestedEnum(); }
        });
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$testapis$nested$nested_pb$ParentMessage" }
});
export const ParentMessageNestedMessage = objectType({
    name: "ParentMessageNestedMessage",
    description: "",
    definition(t) {
        t.field("nestedBody", {
            type: nonNull("String"),
            description: "",
            resolve(root) { return root.getNestedBody(); }
        });
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$testapis$nested$nested_pb$ParentMessageNestedMessage" }
});
export const ParentMessageInput = inputObjectType({
    name: "ParentMessageInput",
    description: "",
    definition(t) {
        t.field("body", {
            type: nonNull("String"),
            description: ""
        });
        t.field("nested", {
            type: nullable("ParentMessageNestedMessageInput"),
            description: ""
        });
        t.field("nestedEnum", {
            type: nullable("ParentMessageNestedEnum"),
            description: ""
        });
    }
});
export const ParentMessageNestedMessageInput = inputObjectType({
    name: "ParentMessageNestedMessageInput",
    description: "",
    definition(t) {
        t.field("nestedBody", {
            type: nonNull("String"),
            description: ""
        });
    }
});
export const ParentMessageNestedEnum = enumType({
    name: "ParentMessageNestedEnum",
    description: "",
    members: [
        {
            name: "NESTED_ENUM_UNSPECIFIED",
            value: 0
        },
        {
            name: "FOO",
            value: 1
        },
        {
            name: "BAR",
            value: 2
        }
    ]
});
