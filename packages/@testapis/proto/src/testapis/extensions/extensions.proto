syntax = "proto3";

package testapis.extensions;

import "graphql/schema.proto";

option (graphql.schema) = {
  type_prefix: "TestPrefix"
  ignore_requests: true
  ignore_responses: true
};

service PrefixedMessageService {
  rpc BatchGetPrefixedMessages(BatchGetPrefixedMessagesRequest) returns (BatchGetPrefixedMessagesResponse);
  rpc CreatePrefixedMessage(CreatePrefixedMessageRequest) returns (PrefixedMessage);
}

message BatchGetPrefixedMessagesRequest {
  repeated uint64 id = 1;
}

message BatchGetPrefixedMessagesResponse {
  repeated PrefixedMessage prefixed_messages = 1;
}

message CreatePrefixedMessageRequest {
  PrefixedMessage prefixed_message = 1;
}

message PrefixedMessage {
  message InnerMessage {
    string body = 1;
  }

  message InnerMessage2 {
    string body = 1;
  }

  message SquashedMessage {
    option (graphql.object_type).squash_union = true;

    oneof squashed_message {
      InnerMessage oneof_ignored_field = 1;
      InnerMessage2 oneof_ignored_field_2 = 2;
    }
  }

  // Output only.
  uint64 id = 1;
  string body = 2;
  PrefixedEnum prefixed_enum = 3;
  InnerMessage ignored_field = 4 [(graphql.field).ignore = true];

  oneof ignored_oneof {
    option (graphql.oneof).ignore = true;

    PrefixedEnum oneof_prefixed_enum = 5;
    InnerMessage oneof_ignored_field = 6;
  }

  IgnoredMessage ignored_message = 7;
  OutputOnlyMessage output_only_message = 8;
  InputOnlyMessage input_only_message = 9;
  IgnoredEnum ignored_enum = 10;
  SquashedMessage squashed_message = 11;
  string this_field_will_be_renamed = 12 [(graphql.field).name = "thisFieldWasRenamed"];
}

enum PrefixedEnum {
  PREFIXED_ENUM_UNSPECIFIED = 0;
  PREFIXED_FOO = 1;
  PREFIXED_BAR = 2;
  PREFIXED_IGNORED = 3 [(graphql.enum_value).ignore = true];
}

message IgnoredMessage {
  option (graphql.object_type).ignore = true;
  option (graphql.input_type).ignore = true;

  string body = 1;
  PrefixedEnum prefixed_enum = 2;
}

message InputOnlyMessage {
  option (graphql.object_type).ignore = true;

  string body = 1;
  PrefixedEnum prefixed_enum = 2;
}

message OutputOnlyMessage {
  option (graphql.input_type).ignore = true;

  string body = 1;
  PrefixedEnum prefixed_enum = 2;
}

enum IgnoredEnum {
  option (graphql.enum_type).ignore = true;

  IGNORED_ENUM_UNSPECIFIED = 0;
  IGNORED_FOO = 1;
  IGNORED_BAR = 2;
}
