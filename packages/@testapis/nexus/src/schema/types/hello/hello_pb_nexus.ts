// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: hello/hello.proto

import { objectType } from "@nexus/schema";
import * as $$testapis$node$lib$hello$hello_pb from "@testapis/node/lib/hello/hello_pb";
export type $$testapis$node$lib$hello$hello_pb$Hello = $$testapis$node$lib$hello$hello_pb.Hello;
export type $$testapis$node$lib$hello$hello_pb$Primitives = $$testapis$node$lib$hello$hello_pb.Primitives;
export const Hello = objectType({
    name: "Hello",
    description: "",
    definition(t) {
        t.nullable.field("requiredPrimitives", {
            description: "Required.",
            type: "Primitives",
            resolve(root) { return root.getRequiredPrimitives(); }
        });
        t.nullable.field("optionalPrimitives", {
            description: "Optional.",
            type: "Primitives",
            resolve(root) { return root.getOptionalPrimitives(); }
        });
        t.nullable.list.field("requiredPrimitivesList", {
            description: "Required.",
            type: "Primitives",
            resolve(root) { return root.getRequiredPrimitivesListList(); }
        });
        t.nullable.field("optionalPrimitivesList", {
            description: "Optional.",
            type: "Primitives",
            resolve(root) { return root.getOptionalPrimitivesList(); }
        });
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$hello$hello_pb$Hello" }
});
export const Primitives = objectType({
    name: "Primitives",
    description: "",
    definition(t) {
        t.nullable.float("requiredDoubleValue", {
            description: "",
            resolve(root) { return root.getRequiredDoubleValue(); }
        });
        t.nullable.float("requiredFloatValue", {
            description: "",
            resolve(root) { return root.getRequiredFloatValue(); }
        });
        t.nullable.int("requiredInt32Value", {
            description: "",
            resolve(root) { return root.getRequiredInt32Value(); }
        });
        t.nullable.int("requiredInt64Value", {
            description: "",
            resolve(root) { return root.getRequiredInt64Value(); }
        });
        t.nullable.int("requiredUint32Value", {
            description: "",
            resolve(root) { return root.getRequiredUint32Value(); }
        });
        t.nullable.int("requiredUint64Value", {
            description: "",
            resolve(root) { return root.getRequiredUint64Value(); }
        });
        t.nullable.int("requiredSint32Value", {
            description: "",
            resolve(root) { return root.getRequiredSint32Value(); }
        });
        t.nullable.int("requiredSint64Value", {
            description: "",
            resolve(root) { return root.getRequiredSint64Value(); }
        });
        t.nullable.int("requiredFixed32Value", {
            description: "",
            resolve(root) { return root.getRequiredFixed32Value(); }
        });
        t.nullable.int("requiredFixed64Value", {
            description: "",
            resolve(root) { return root.getRequiredFixed64Value(); }
        });
        t.nullable.int("requiredSfixed32Value", {
            description: "",
            resolve(root) { return root.getRequiredSfixed32Value(); }
        });
        t.nullable.int("requiredSfixed64Value", {
            description: "",
            resolve(root) { return root.getRequiredSfixed64Value(); }
        });
        t.nullable.boolean("requiredBoolValue", {
            description: "",
            resolve(root) { return root.getRequiredBoolValue(); }
        });
        t.nullable.string("requiredStringValue", {
            description: "",
            resolve(root) { return root.getRequiredStringValue(); }
        });
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$hello$hello_pb$Primitives" }
});
