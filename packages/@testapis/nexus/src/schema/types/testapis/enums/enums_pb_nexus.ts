// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/enums/enums.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from "nexus";
import * as $$testapis$node$lib$testapis$enums from "@testapis/node/lib/testapis/enums";
export type $$testapis$node$lib$testapis$enums$testapi$enums$MessageWithEnums = $$testapis$node$lib$testapis$enums.testapi.enums.IMessageWithEnums;
export const MessageWithEnums = objectType({
    name: "MessageWithEnums",
    description: "",
    definition(t) {
        t.field("requiredMyEnum", {
            type: nonNull("MyEnum"),
            description: "Required.",
            resolve(root) {
                if (root.requiredMyEnum == null) {
                    throw new Error("MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.");
                }
                if (root.requiredMyEnum === $$testapis$node$lib$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    throw new Error("MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.");
                }
                return root.requiredMyEnum;
            }
        });
        t.field("optionalMyEnum", {
            type: nullable("MyEnum"),
            description: "Optional.",
            resolve(root) {
                if (root.optionalMyEnum == null) {
                    return null;
                }
                if (root.optionalMyEnum === $$testapis$node$lib$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    return null;
                }
                return root.optionalMyEnum;
            }
        });
        t.field("requiredMyEnumWithoutUnspecified", {
            type: nonNull("MyEnumWithoutUnspecified"),
            description: "Required.",
            resolve(root) {
                if (root.requiredMyEnumWithoutUnspecified == null) {
                    throw new Error("MessageWithEnums.requiredMyEnumWithoutUnspecified is required field. But got null or unspecified.");
                }
                return root.requiredMyEnumWithoutUnspecified;
            }
        });
        t.field("optionalMyEnumWithoutUnspecified", {
            type: nullable("MyEnumWithoutUnspecified"),
            description: "Optional.",
            resolve(root) {
                if (root.optionalMyEnumWithoutUnspecified == null) {
                    return null;
                }
                return root.optionalMyEnumWithoutUnspecified;
            }
        });
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$testapis$enums$testapi$enums$MessageWithEnums" }
});
export const MessageWithEnumsInput = inputObjectType({
    name: "MessageWithEnumsInput",
    description: "",
    definition(t) {
        t.field("requiredMyEnum", {
            type: nonNull("MyEnum"),
            description: "Required."
        });
        t.field("optionalMyEnum", {
            type: nullable("MyEnum"),
            description: "Optional."
        });
        t.field("requiredMyEnumWithoutUnspecified", {
            type: nonNull("MyEnumWithoutUnspecified"),
            description: "Required."
        });
        t.field("optionalMyEnumWithoutUnspecified", {
            type: nullable("MyEnumWithoutUnspecified"),
            description: "Optional."
        });
    }
});
export const MyEnum = enumType({
    name: "MyEnum",
    description: "",
    members: [
        {
            name: "MY_ENUM_FOO",
            value: 1
        },
        {
            name: "MY_ENUM_BAR",
            description: "This is Bar.",
            value: 2
        },
        {
            name: "MY_ENUM_BAZ",
            value: 3
        }
    ]
});
export const MyEnumWithoutUnspecified = enumType({
    name: "MyEnumWithoutUnspecified",
    description: "",
    members: [
        {
            name: "MY_ENUM_WITHOUT_UNSPECIFIED_FOO",
            value: 0
        },
        {
            name: "MY_ENUM_WITHOUT_UNSPECIFIED_BAR",
            value: 1
        },
        {
            name: "MY_ENUM_WITHOUT_UNSPECIFIED_BAZ",
            value: 2
        }
    ]
});
