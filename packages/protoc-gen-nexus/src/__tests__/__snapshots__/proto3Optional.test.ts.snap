// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`proto3 optional with native protobuf generates nexus DSLs: proto3_optional/proto3_optional_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/proto3_optional/proto3_optional.proto

/* eslint-disable */

import { inputObjectType, nonNull, nullable, objectType } from "nexus";
import { Message as Message1 } from "./testapis/proto3_optional/proto3_optional_pb";

export type testapis$proto3_optional$Message = Message1;
export const Message = objectType({
  name: "Message",
  definition: (t) => {
    t.field("requiredStringValue", {
      type: nonNull("String"),
      resolve: (source) => {
        const value = source.getRequiredStringValue();
        return value;
      },
      extensions: {
        protobufField: {
          name: "required_string_value",
          typeFullName: "string",
        },
      },
    });
    t.field("optionalStringValue", {
      type: nullable("String"),
      resolve: (source) => {
        const value = source.getOptionalStringValue();
        return value;
      },
      extensions: {
        protobufField: {
          name: "optional_string_value",
          typeFullName: "string",
        },
      },
    });
  },
  isTypeOf: (data: unknown) => {
    return data instanceof Message1;
  },
  sourceType: {
    module: __filename,
    export: "testapis$proto3_optional$Message",
  },
  extensions: {
    protobufMessage: {
      fullName: "testapis.proto3_optional.Message",
      name: "Message",
      package: "testapis.proto3_optional",
    },
  },
});

export const MessageInput = Object.assign(
  inputObjectType({
    name: "MessageInput",
    definition: (t) => {
      t.field("requiredStringValue", {
        type: nonNull("String"),
        extensions: {
          protobufField: {
            name: "required_string_value",
            typeFullName: "string",
          },
        },
      });
      t.field("optionalStringValue", {
        type: nullable("String"),
        extensions: {
          protobufField: {
            name: "optional_string_value",
            typeFullName: "string",
          },
        },
      });
    },
    extensions: {
      protobufMessage: {
        fullName: "testapis.proto3_optional.Message",
        name: "Message",
        package: "testapis.proto3_optional",
      },
    },
  }),
  {
    toProto: (input: NexusGen["inputTypes"]["MessageInput"]): Message1 => {
      const output = new Message1();
      output.setRequiredStringValue(input.requiredStringValue);
      if (input.optionalStringValue != null) {
        output.setOptionalStringValue(input.optionalStringValue);
      }
      return output;
    },
    _protoNexus: {
      fields: {
        requiredStringValue: {
          type: nonNull("String"),
          extensions: {
            protobufField: {
              name: "required_string_value",
              typeFullName: "string",
            },
          },
        },
        optionalStringValue: {
          type: nullable("String"),
          extensions: {
            protobufField: {
              name: "optional_string_value",
              typeFullName: "string",
            },
          },
        },
      },
    },
  },
);
"
`;

exports[`proto3 optional with protobufjs generates nexus DSLs: proto3_optional/proto3_optional_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/proto3_optional/proto3_optional.proto

/* eslint-disable */

import { inputObjectType, nonNull, nullable, objectType } from "nexus";
import { testapis } from "./testapis/proto3_optional";

export type testapis$proto3_optional$Message = testapis.proto3_optional.Message;
export const Message = objectType({
  name: "Message",
  definition: (t) => {
    t.field("requiredStringValue", {
      type: nonNull("String"),
      resolve: (source) => {
        const value = source.requiredStringValue;
        if (value == null) {
          throw new Error("Cannot return null for non-nullable field");
        }
        return value;
      },
      extensions: {
        protobufField: {
          name: "required_string_value",
          typeFullName: "string",
        },
      },
    });
    t.field("optionalStringValue", {
      type: nullable("String"),
      resolve: (source) => {
        const value = source.optionalStringValue;
        if (value == null) {
          return null;
        }
        return value;
      },
      extensions: {
        protobufField: {
          name: "optional_string_value",
          typeFullName: "string",
        },
      },
    });
  },
  isTypeOf: (data: unknown) => {
    return data instanceof testapis.proto3_optional.Message;
  },
  sourceType: {
    module: __filename,
    export: "testapis$proto3_optional$Message",
  },
  extensions: {
    protobufMessage: {
      fullName: "testapis.proto3_optional.Message",
      name: "Message",
      package: "testapis.proto3_optional",
    },
  },
});

export const MessageInput = Object.assign(
  inputObjectType({
    name: "MessageInput",
    definition: (t) => {
      t.field("requiredStringValue", {
        type: nonNull("String"),
        extensions: {
          protobufField: {
            name: "required_string_value",
            typeFullName: "string",
          },
        },
      });
      t.field("optionalStringValue", {
        type: nullable("String"),
        extensions: {
          protobufField: {
            name: "optional_string_value",
            typeFullName: "string",
          },
        },
      });
    },
    extensions: {
      protobufMessage: {
        fullName: "testapis.proto3_optional.Message",
        name: "Message",
        package: "testapis.proto3_optional",
      },
    },
  }),
  {
    toProto: (
      input: NexusGen["inputTypes"]["MessageInput"],
    ): testapis.proto3_optional.Message => {
      const output = new testapis.proto3_optional.Message();
      output.requiredStringValue = input.requiredStringValue;
      if (input.optionalStringValue != null) {
        output.optionalStringValue = input.optionalStringValue;
      }
      return output;
    },
    _protoNexus: {
      fields: {
        requiredStringValue: {
          type: nonNull("String"),
          extensions: {
            protobufField: {
              name: "required_string_value",
              typeFullName: "string",
            },
          },
        },
        optionalStringValue: {
          type: nullable("String"),
          extensions: {
            protobufField: {
              name: "optional_string_value",
              typeFullName: "string",
            },
          },
        },
      },
    },
  },
);
"
`;
