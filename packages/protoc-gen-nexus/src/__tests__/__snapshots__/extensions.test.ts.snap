// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no_partial generates nexus DSLs with partial inputs: extensions/no_partial/no_partial_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/no_partial/no_partial.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$extensions$no_partial$no_partial_pb from \\"./testapis/extensions/no_partial/no_partial_pb\\";
export type _$testapis$extensions$no_partial$no_partial_pb$ParentMessage = _$testapis$extensions$no_partial$no_partial_pb.ParentMessage;
export type _$testapis$extensions$no_partial$no_partial_pb$PartialableInputMessage = _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage;
export type _$testapis$extensions$no_partial$no_partial_pb$NoPartialInputMessage = _$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage;
export const ParentMessage = nexus.objectType({
    name: \\"ParentMessage\\",
    definition(t) {
        t.field(\\"partialableInputMessage\\", {
            type: nexus.nonNull(\\"PartialableInputMessage\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getPartialableInputMessage();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"noPartialInputMessage\\", {
            type: nexus.nonNull(\\"NoPartialInputMessage\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getNoPartialInputMessage();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$no_partial$no_partial_pb.ParentMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$no_partial$no_partial_pb$ParentMessage\\" }
});
export const PartialableInputMessage = nexus.objectType({
    name: \\"PartialableInputMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$no_partial$no_partial_pb$PartialableInputMessage\\" }
});
export const NoPartialInputMessage = nexus.objectType({
    name: \\"NoPartialInputMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$no_partial$no_partial_pb$NoPartialInputMessage\\" }
});
export const ParentMessageInput = Object.assign(nexus.inputObjectType({
    name: \\"ParentMessageInput\\",
    definition(t) {
        t.field(\\"partialableInputMessage\\", {
            type: nexus.nonNull(\\"PartialableInputMessageInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"noPartialInputMessage\\", {
            type: nexus.nonNull(\\"NoPartialInputMessageInput\\"),
            description: \\"Required.\\"
        });
    }
}), {
    toProto: (input: NexusGen[\\"inputTypes\\"][\\"ParentMessageInput\\"]): _$testapis$extensions$no_partial$no_partial_pb.ParentMessage => {
        const output = new _$testapis$extensions$no_partial$no_partial_pb.ParentMessage();
        output.setPartialableInputMessage(PartialableInputMessageInput.toProto(input.partialableInputMessage));
        output.setNoPartialInputMessage(NoPartialInputMessageInput.toProto(input.noPartialInputMessage));
        return output;
    },
    _protoNexus: {
        fields: {
            partialableInputMessage: {
                type: nexus.nonNull(\\"PartialableInputMessageInput\\"),
                description: \\"Required.\\"
            },
            noPartialInputMessage: {
                type: nexus.nonNull(\\"NoPartialInputMessageInput\\"),
                description: \\"Required.\\"
            }
        }
    }
});
export const ParentMessagePartialInput = Object.assign(nexus.inputObjectType({
    name: \\"ParentMessagePartialInput\\",
    definition(t) {
        t.field(\\"partialableInputMessage\\", {
            type: nexus.nullable(\\"PartialableInputMessagePartialInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"noPartialInputMessage\\", {
            type: nexus.nullable(\\"NoPartialInputMessageInput\\"),
            description: \\"Required.\\"
        });
    }
}), {
    toProto: (input: NexusGen[\\"inputTypes\\"][\\"ParentMessagePartialInput\\"]): _$testapis$extensions$no_partial$no_partial_pb.ParentMessage => {
        const output = new _$testapis$extensions$no_partial$no_partial_pb.ParentMessage();
        if (input.partialableInputMessage != null) {
            output.setPartialableInputMessage(PartialableInputMessagePartialInput.toProto(input.partialableInputMessage));
        }
        if (input.noPartialInputMessage != null) {
            output.setNoPartialInputMessage(NoPartialInputMessageInput.toProto(input.noPartialInputMessage));
        }
        return output;
    },
    _protoNexus: {
        fields: {
            partialableInputMessage: {
                type: nexus.nullable(\\"PartialableInputMessagePartialInput\\"),
                description: \\"Required.\\"
            },
            noPartialInputMessage: {
                type: nexus.nullable(\\"NoPartialInputMessageInput\\"),
                description: \\"Required.\\"
            }
        }
    }
});
export const PartialableInputMessageInput = Object.assign(nexus.inputObjectType({
    name: \\"PartialableInputMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\"
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\"
        });
    }
}), {
    toProto: (input: NexusGen[\\"inputTypes\\"][\\"PartialableInputMessageInput\\"]): _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage => {
        const output = new _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage();
        output.setId(parseInt(input.id));
        output.setBody(input.body);
        return output;
    },
    _protoNexus: {
        fields: {
            id: {
                type: nexus.nonNull(\\"String\\"),
                description: \\"Required.\\"
            },
            body: {
                type: nexus.nonNull(\\"String\\"),
                description: \\"Required.\\"
            }
        }
    }
});
export const PartialableInputMessagePartialInput = Object.assign(nexus.inputObjectType({
    name: \\"PartialableInputMessagePartialInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nullable(\\"String\\"),
            description: \\"Required.\\"
        });
        t.field(\\"body\\", {
            type: nexus.nullable(\\"String\\"),
            description: \\"Required.\\"
        });
    }
}), {
    toProto: (input: NexusGen[\\"inputTypes\\"][\\"PartialableInputMessagePartialInput\\"]): _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage => {
        const output = new _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage();
        if (input.id != null) {
            output.setId(parseInt(input.id));
        }
        if (input.body != null) {
            output.setBody(input.body);
        }
        return output;
    },
    _protoNexus: {
        fields: {
            id: {
                type: nexus.nullable(\\"String\\"),
                description: \\"Required.\\"
            },
            body: {
                type: nexus.nullable(\\"String\\"),
                description: \\"Required.\\"
            }
        }
    }
});
export const NoPartialInputMessageInput = Object.assign(nexus.inputObjectType({
    name: \\"NoPartialInputMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\"
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Required.\\"
        });
    }
}), {
    toProto: (input: NexusGen[\\"inputTypes\\"][\\"NoPartialInputMessageInput\\"]): _$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage => {
        const output = new _$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage();
        output.setId(parseInt(input.id));
        output.setBody(input.body);
        return output;
    },
    _protoNexus: {
        fields: {
            id: {
                type: nexus.nonNull(\\"String\\"),
                description: \\"Required.\\"
            },
            body: {
                type: nexus.nonNull(\\"String\\"),
                description: \\"Required.\\"
            }
        }
    }
});
"
`;
