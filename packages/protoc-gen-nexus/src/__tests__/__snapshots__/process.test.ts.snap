// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deprecation with native protobuf generates nexus DSLs: deprecation/deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/deprecation.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$deprecation$deprecation_pb from \\"./testapis/deprecation/deprecation_pb\\";
export type _$testapis$deprecation$deprecation_pb$DeprecatedMessage = _$testapis$deprecation$deprecation_pb.DeprecatedMessage;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessage = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage;
export type _$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage = _$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1 = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2 = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2;
export const DeprecatedMessage = nexus.objectType({
    name: \\"DeprecatedMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"NotDeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$deprecation_pb.NotDeprecatedEnum.NOT_DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$deprecation_pb.DeprecatedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$DeprecatedMessage\\" }
});
export const NotDeprecatedMessage = nexus.objectType({
    name: \\"NotDeprecatedMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$deprecation_pb.DeprecatedEnum.DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"notDeprecatedOneof\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageNotDeprecatedOneof\\"),
            resolve(root) {
                switch (root.getNotDeprecatedOneofCase()) {
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.NOT_DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_1: {
                        return root.getMsg1()!;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_2: {
                        return root.getMsg2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
        t.field(\\"deprecatedOneof\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageDeprecatedOneof\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.deprecated_oneof is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                switch (root.getDeprecatedOneofCase()) {
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_3: {
                        return root.getMsg3()!;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_4: {
                        return root.getMsg4()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessage\\" }
});
export const DeprecatedMessageInnerMessage = nexus.objectType({
    name: \\"DeprecatedMessageInnerMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage\\" }
});
export const NotDeprecatedMessageInnerMessage1 = nexus.objectType({
    name: \\"NotDeprecatedMessageInnerMessage1\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1\\" }
});
export const NotDeprecatedMessageInnerMessage2 = nexus.objectType({
    name: \\"NotDeprecatedMessageInnerMessage2\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2\\" }
});
export const DeprecatedMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"NotDeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInput = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg1\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg2\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage2Input\\")
        });
        t.field(\\"msg3\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg4\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const DeprecatedMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage1Input = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage1Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const NotDeprecatedMessageInnerMessage2Input = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage2Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const NotDeprecatedMessageNotDeprecatedOneof = nexus.unionType({
    name: \\"NotDeprecatedMessageNotDeprecatedOneof\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    }
});
export const NotDeprecatedMessageDeprecatedOneof = nexus.unionType({
    name: \\"NotDeprecatedMessageDeprecatedOneof\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    }
});
export const NotDeprecatedEnum = nexus.enumType({
    name: \\"NotDeprecatedEnum\\",
    members: [
        {
            name: \\"NOT_DEPRECATED_FOO\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_BAR\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedEnum.DEPRECATED_BAR is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
export const DeprecatedEnum = nexus.enumType({
    name: \\"DeprecatedEnum\\",
    members: [
        {
            name: \\"DEPRECATED_BAZ\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_QUX\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with native protobuf generates nexus DSLs: deprecation/file_deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/file_deprecation.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$deprecation$file_deprecation_pb from \\"./testapis/deprecation/file_deprecation_pb\\";
export type _$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessage = _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage;
export type _$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessageInnerMessage = _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage.InnerMessage;
export const DeprecatedFileMessage = nexus.objectType({
    name: \\"DeprecatedFileMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedFileEnum\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$file_deprecation_pb.DeprecatedFileEnum.DEPRECATED_FILE_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessage\\" }
});
export const DeprecatedFileMessageInnerMessage = nexus.objectType({
    name: \\"DeprecatedFileMessageInnerMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessageInnerMessage\\" }
});
export const DeprecatedFileMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedFileMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedFileEnum\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedFileMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileEnum = nexus.enumType({
    name: \\"DeprecatedFileEnum\\",
    members: [
        {
            name: \\"DEPRECATED_FILE_FOO\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_FILE_BAR\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with protobufjs generates nexus DSLs: deprecation/deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/deprecation.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$deprecation from \\"./testapis/deprecation\\";
export type _$testapis$deprecation$testapis$deprecation$DeprecatedMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedMessage;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage = _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage;
export type _$testapis$deprecation$testapis$deprecation$DeprecatedMessageInnerMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedMessage.InnerMessage;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage1 = _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.InnerMessage1;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage2 = _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.InnerMessage2;
export const DeprecatedMessage = nexus.objectType({
    name: \\"DeprecatedMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"NotDeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.NotDeprecatedEnum.NOT_DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.DeprecatedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedMessage\\" }
});
export const NotDeprecatedMessage = nexus.objectType({
    name: \\"NotDeprecatedMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.DeprecatedEnum.DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"notDeprecatedOneof\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageNotDeprecatedOneof\\"),
            resolve(root) {
                if (root.msg1) {
                    return root.msg1;
                }
                if (root.msg2) {
                    return root.msg2;
                }
                return null;
            }
        });
        t.field(\\"deprecatedOneof\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageDeprecatedOneof\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.deprecated_oneof is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                if (root.msg3) {
                    return root.msg3;
                }
                if (root.msg4) {
                    return root.msg4;
                }
                return null;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage\\" }
});
export const DeprecatedMessageInnerMessage = nexus.objectType({
    name: \\"DeprecatedMessageInnerMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.DeprecatedMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedMessageInnerMessage\\" }
});
export const NotDeprecatedMessageInnerMessage1 = nexus.objectType({
    name: \\"NotDeprecatedMessageInnerMessage1\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.InnerMessage1;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage1\\" }
});
export const NotDeprecatedMessageInnerMessage2 = nexus.objectType({
    name: \\"NotDeprecatedMessageInnerMessage2\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.InnerMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage2\\" }
});
export const DeprecatedMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"NotDeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInput = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedEnum\\"),
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg1\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg2\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage2Input\\")
        });
        t.field(\\"msg3\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg4\\", {
            type: nexus.nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const DeprecatedMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage1Input = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage1Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const NotDeprecatedMessageInnerMessage2Input = nexus.inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage2Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const NotDeprecatedMessageNotDeprecatedOneof = nexus.unionType({
    name: \\"NotDeprecatedMessageNotDeprecatedOneof\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    }
});
export const NotDeprecatedMessageDeprecatedOneof = nexus.unionType({
    name: \\"NotDeprecatedMessageDeprecatedOneof\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    }
});
export const NotDeprecatedEnum = nexus.enumType({
    name: \\"NotDeprecatedEnum\\",
    members: [
        {
            name: \\"NOT_DEPRECATED_FOO\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_BAR\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedEnum.DEPRECATED_BAR is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
export const DeprecatedEnum = nexus.enumType({
    name: \\"DeprecatedEnum\\",
    members: [
        {
            name: \\"DEPRECATED_BAZ\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_QUX\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with protobufjs generates nexus DSLs: deprecation/file_deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/file_deprecation.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$deprecation from \\"./testapis/deprecation\\";
export type _$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage;
export type _$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage;
export const DeprecatedFileMessage = nexus.objectType({
    name: \\"DeprecatedFileMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedFileEnum\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.DeprecatedFileEnum.DEPRECATED_FILE_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage\\" }
});
export const DeprecatedFileMessageInnerMessage = nexus.objectType({
    name: \\"DeprecatedFileMessageInnerMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage\\" }
});
export const DeprecatedFileMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedFileMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"DeprecatedFileEnum\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"DeprecatedFileMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileEnum = nexus.enumType({
    name: \\"DeprecatedFileEnum\\",
    members: [
        {
            name: \\"DEPRECATED_FILE_FOO\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_FILE_BAR\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 2
        }
    ]
});
"
`;

exports[`field_behavior with native protobuf generates nexus DSLs: field_behavior/comments_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/field_behavior/comments.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$field_behavior$comments_pb from \\"./testapis/field_behavior/comments_pb\\";
export type _$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessage = _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage;
export type _$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessagePost = _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage.Post;
export const FieldBehaviorComentsMessage = nexus.objectType({
    name: \\"FieldBehaviorComentsMessage\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredField();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredOutputOnlyField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required. Output only.\\",
            resolve(root) {
                const value = root.getRequiredOutputOnlyField();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"outputOnlyRequiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only. Required.\\",
            resolve(root) {
                const value = root.getOutputOnlyRequiredField();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"outputOnlyField\\", {
            type: nexus.nullable(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only.\\",
            resolve(root) {
                const value = root.getOutputOnlyField();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessage\\" }
});
export const FieldBehaviorComentsMessagePost = nexus.objectType({
    name: \\"FieldBehaviorComentsMessagePost\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage.Post;
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessagePost\\" }
});
export const FieldBehaviorComentsMessageInput = nexus.inputObjectType({
    name: \\"FieldBehaviorComentsMessageInput\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"requiredInputOnlyField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required. Input only.\\"
        });
        t.field(\\"inputOnlyRequiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only. Required.\\"
        });
        t.field(\\"inputOnlyField\\", {
            type: nexus.nullable(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only.\\"
        });
    }
});
export const FieldBehaviorComentsMessagePostInput = nexus.inputObjectType({
    name: \\"FieldBehaviorComentsMessagePostInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
"
`;

exports[`field_behavior with protobufjs generates nexus DSLs: field_behavior/comments_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/field_behavior/comments.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$field_behavior from \\"./testapis/field_behavior\\";
export type _$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessage = _$testapis$field_behavior.testapis.deprecation.FieldBehaviorComentsMessage;
export type _$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessagePost = _$testapis$field_behavior.testapis.deprecation.FieldBehaviorComentsMessage.Post;
export const FieldBehaviorComentsMessage = nexus.objectType({
    name: \\"FieldBehaviorComentsMessage\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredField;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredOutputOnlyField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required. Output only.\\",
            resolve(root) {
                const value = root.requiredOutputOnlyField;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"outputOnlyRequiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only. Required.\\",
            resolve(root) {
                const value = root.outputOnlyRequiredField;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"outputOnlyField\\", {
            type: nexus.nullable(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only.\\",
            resolve(root) {
                const value = root.outputOnlyField;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$field_behavior.testapis.deprecation.FieldBehaviorComentsMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessage\\" }
});
export const FieldBehaviorComentsMessagePost = nexus.objectType({
    name: \\"FieldBehaviorComentsMessagePost\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$field_behavior.testapis.deprecation.FieldBehaviorComentsMessage.Post;
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessagePost\\" }
});
export const FieldBehaviorComentsMessageInput = nexus.inputObjectType({
    name: \\"FieldBehaviorComentsMessageInput\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"requiredInputOnlyField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required. Input only.\\"
        });
        t.field(\\"inputOnlyRequiredField\\", {
            type: nexus.nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only. Required.\\"
        });
        t.field(\\"inputOnlyField\\", {
            type: nexus.nullable(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only.\\"
        });
    }
});
export const FieldBehaviorComentsMessagePostInput = nexus.inputObjectType({
    name: \\"FieldBehaviorComentsMessagePostInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
"
`;

exports[`multipkgs with native protobuf generates nexus DSLs: multipkgs/subpkg1/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg1/types.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1$types_pb from \\"./testapis/multipkgs/subpkg1/types_pb\\";
export type _$testapis$multipkgs$subpkg1$types_pb$SubpkgMessage = _$testapis$multipkgs$subpkg1$types_pb.SubpkgMessage;
export const SubpkgMessage = nexus.objectType({
    name: \\"SubpkgMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$multipkgs$subpkg1$types_pb.SubpkgMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg1$types_pb$SubpkgMessage\\" }
});
export const SubpkgMessageInput = nexus.inputObjectType({
    name: \\"SubpkgMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const SubpkgEnum = nexus.enumType({
    name: \\"SubpkgEnum\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`multipkgs with native protobuf generates nexus DSLs: multipkgs/subpkg2/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg2/types.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1$types_pb from \\"./testapis/multipkgs/subpkg1/types_pb\\";
import * as _$testapis$multipkgs$subpkg2$types_pb from \\"./testapis/multipkgs/subpkg2/types_pb\\";
export type _$testapis$multipkgs$subpkg2$types_pb$MessageWithSubpkg = _$testapis$multipkgs$subpkg2$types_pb.MessageWithSubpkg;
export const MessageWithSubpkg = nexus.objectType({
    name: \\"MessageWithSubpkg\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nexus.nullable(\\"SubpkgMessage\\"),
            resolve(root) {
                const value = root.getMessage();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"SubpkgEnum\\"),
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$multipkgs$subpkg1$types_pb.SubpkgEnum.SUBPKG_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$multipkgs$subpkg2$types_pb.MessageWithSubpkg;
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg2$types_pb$MessageWithSubpkg\\" }
});
export const MessageWithSubpkgInput = nexus.inputObjectType({
    name: \\"MessageWithSubpkgInput\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nexus.nullable(\\"SubpkgMessageInput\\")
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"SubpkgEnum\\")
        });
    }
});
"
`;

exports[`multipkgs with protobufjs generates nexus DSLs: multipkgs/subpkg1/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg1/types.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1 from \\"./testapis/multipkgs/subpkg1\\";
export type _$testapis$multipkgs$subpkg1$testapis$multipkgs$subpkg1$SubpkgMessage = _$testapis$multipkgs$subpkg1.testapis.multipkgs.subpkg1.SubpkgMessage;
export const SubpkgMessage = nexus.objectType({
    name: \\"SubpkgMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$multipkgs$subpkg1.testapis.multipkgs.subpkg1.SubpkgMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg1$testapis$multipkgs$subpkg1$SubpkgMessage\\" }
});
export const SubpkgMessageInput = nexus.inputObjectType({
    name: \\"SubpkgMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const SubpkgEnum = nexus.enumType({
    name: \\"SubpkgEnum\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`multipkgs with protobufjs generates nexus DSLs: multipkgs/subpkg2/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg2/types.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1 from \\"./testapis/multipkgs/subpkg1\\";
import * as _$testapis$multipkgs$subpkg2 from \\"./testapis/multipkgs/subpkg2\\";
export type _$testapis$multipkgs$subpkg2$testapis$multipkgs$subpkg1$MessageWithSubpkg = _$testapis$multipkgs$subpkg2.testapis.multipkgs.subpkg1.MessageWithSubpkg;
export const MessageWithSubpkg = nexus.objectType({
    name: \\"MessageWithSubpkg\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nexus.nullable(\\"SubpkgMessage\\"),
            resolve(root) {
                const value = root.message;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"SubpkgEnum\\"),
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$multipkgs$subpkg1.testapis.multipkgs.subpkg1.SubpkgEnum.SUBPKG_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$multipkgs$subpkg2.testapis.multipkgs.subpkg1.MessageWithSubpkg;
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg2$testapis$multipkgs$subpkg1$MessageWithSubpkg\\" }
});
export const MessageWithSubpkgInput = nexus.inputObjectType({
    name: \\"MessageWithSubpkgInput\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nexus.nullable(\\"SubpkgMessageInput\\")
        });
        t.field(\\"enum\\", {
            type: nexus.nullable(\\"SubpkgEnum\\")
        });
    }
});
"
`;

exports[`nested protobuf types with native protobuf generates nexus DSLs: nested/nested_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/nested/nested.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$nested$nested_pb from \\"./testapis/nested/nested_pb\\";
export type _$testapis$nested$nested_pb$ParentMessage = _$testapis$nested$nested_pb.ParentMessage;
export type _$testapis$nested$nested_pb$ParentMessageNestedMessage = _$testapis$nested$nested_pb.ParentMessage.NestedMessage;
export const ParentMessage = nexus.objectType({
    name: \\"ParentMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
        t.field(\\"nested\\", {
            type: nexus.nullable(\\"ParentMessageNestedMessage\\"),
            resolve(root) {
                const value = root.getNested();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"nestedEnum\\", {
            type: nexus.nullable(\\"ParentMessageNestedEnum\\"),
            resolve(root) {
                const value = root.getNestedEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$nested$nested_pb.ParentMessage.NestedEnum.NESTED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$nested$nested_pb.ParentMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$nested_pb$ParentMessage\\" }
});
export const ParentMessageNestedMessage = nexus.objectType({
    name: \\"ParentMessageNestedMessage\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getNestedBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$nested$nested_pb.ParentMessage.NestedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$nested_pb$ParentMessageNestedMessage\\" }
});
export const ParentMessageInput = nexus.inputObjectType({
    name: \\"ParentMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"nested\\", {
            type: nexus.nullable(\\"ParentMessageNestedMessageInput\\")
        });
        t.field(\\"nestedEnum\\", {
            type: nexus.nullable(\\"ParentMessageNestedEnum\\")
        });
    }
});
export const ParentMessageNestedMessageInput = nexus.inputObjectType({
    name: \\"ParentMessageNestedMessageInput\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const ParentMessageNestedEnum = nexus.enumType({
    name: \\"ParentMessageNestedEnum\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`nested protobuf types with protobufjs generates nexus DSLs: nested/nested_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/nested/nested.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$nested from \\"./testapis/nested\\";
export type _$testapis$nested$testapis$nested$ParentMessage = _$testapis$nested.testapis.nested.ParentMessage;
export type _$testapis$nested$testapis$nested$ParentMessageNestedMessage = _$testapis$nested.testapis.nested.ParentMessage.NestedMessage;
export const ParentMessage = nexus.objectType({
    name: \\"ParentMessage\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"nested\\", {
            type: nexus.nullable(\\"ParentMessageNestedMessage\\"),
            resolve(root) {
                const value = root.nested;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"nestedEnum\\", {
            type: nexus.nullable(\\"ParentMessageNestedEnum\\"),
            resolve(root) {
                const value = root.nestedEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$nested.testapis.nested.ParentMessage.NestedEnum.NESTED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$nested.testapis.nested.ParentMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$testapis$nested$ParentMessage\\" }
});
export const ParentMessageNestedMessage = nexus.objectType({
    name: \\"ParentMessageNestedMessage\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.nestedBody;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$nested.testapis.nested.ParentMessage.NestedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$testapis$nested$ParentMessageNestedMessage\\" }
});
export const ParentMessageInput = nexus.inputObjectType({
    name: \\"ParentMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"nested\\", {
            type: nexus.nullable(\\"ParentMessageNestedMessageInput\\")
        });
        t.field(\\"nestedEnum\\", {
            type: nexus.nullable(\\"ParentMessageNestedEnum\\")
        });
    }
});
export const ParentMessageNestedMessageInput = nexus.inputObjectType({
    name: \\"ParentMessageNestedMessageInput\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const ParentMessageNestedEnum = nexus.enumType({
    name: \\"ParentMessageNestedEnum\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf custom options with native protobuf generates nexus DSLs: extensions/extensions_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/extensions.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$extensions$extensions_pb from \\"./testapis/extensions/extensions_pb\\";
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessage = _$testapis$extensions$extensions_pb.PrefixedMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage = _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage2 = _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage2;
export type _$testapis$extensions$extensions_pb$TestPrefixIgnoredMessageNotIgnored = _$testapis$extensions$extensions_pb.IgnoredMessage.NotIgnored;
export type _$testapis$extensions$extensions_pb$TestPrefixInterfaceMessage = _$testapis$extensions$extensions_pb.InterfaceMessage;
export const TestPrefixPrefixedMessage = nexus.objectType({
    name: \\"TestPrefixPrefixedMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Output only.\\",
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedEnum\\"),
            resolve(root) {
                const value = root.getPrefixedEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions$extensions_pb.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                if (value === _$testapis$extensions$extensions_pb.PrefixedEnum.PREFIXED_IGNORED) {
                    throw new Error(\\"PREFIXED_IGNORED is ignored in GraphQL schema\\");
                }
                return value;
            }
        });
        t.field(\\"notIgnoredMessage\\", {
            type: nexus.nullable(\\"TestPrefixIgnoredMessageNotIgnored\\"),
            resolve(root) {
                const value = root.getNotIgnoredMessage();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"squashedMessage\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageSquashedMessage\\"),
            resolve(root) {
                const value = root.getSquashedMessage();
                if (value == null) {
                    return null;
                }
                switch (value.getSquashedMessageCase()) {
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.SQUASHED_MESSAGE_NOT_SET: {
                        return null;
                    }
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.ONEOF_FIELD: {
                        return value.getOneofField()!;
                    }
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.ONEOF_FIELD_2: {
                        return value.getOneofField2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
        t.field(\\"thisFieldWasRenamed\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getThisFieldWillBeRenamed();
                return value;
            }
        });
        t.field(\\"partialIgnoreOneof\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessagePartialIgnoreOneof\\"),
            resolve(root) {
                switch (root.getPartialIgnoreOneofCase()) {
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.PartialIgnoreOneofCase.PARTIAL_IGNORE_ONEOF_NOT_SET: {
                        return null;
                    }
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.PartialIgnoreOneofCase.ONEOF_NOT_IGNORED_FIELD: {
                        return root.getOneofNotIgnoredField()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$extensions_pb.PrefixedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage = nexus.objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage2 = nexus.objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage2\\" }
});
export const TestPrefixIgnoredMessageNotIgnored = nexus.objectType({
    name: \\"TestPrefixIgnoredMessageNotIgnored\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions$extensions_pb.IgnoredMessage.NotIgnored;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixIgnoredMessageNotIgnored\\" }
});
export const TestPrefixPrefixedMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"prefixedEnum\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedEnum\\")
        });
        t.field(\\"notIgnoredMessage\\", {
            type: nexus.nullable(\\"TestPrefixIgnoredMessageNotIgnoredInput\\")
        });
        t.field(\\"squashedMessage\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageSquashedMessageInput\\")
        });
        t.field(\\"thisFieldWasRenamed\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"oneofNotIgnoredField\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\")
        });
    }
});
export const TestPrefixInterfaceMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixInterfaceMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessage2Input = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2Input\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageSquashedMessageInput\\",
    definition(t) {
        t.field(\\"oneofField\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\")
        });
        t.field(\\"oneofField2\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessage2Input\\")
        });
    }
});
export const TestPrefixIgnoredMessageNotIgnoredInput = nexus.inputObjectType({
    name: \\"TestPrefixIgnoredMessageNotIgnoredInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixInterfaceMessage = nexus.interfaceType({
    name: \\"TestPrefixInterfaceMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getId();
                return value.toString();
            }
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessage = nexus.unionType({
    name: \\"TestPrefixPrefixedMessageSquashedMessage\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\", \\"TestPrefixPrefixedMessageInnerMessage2\\");
    }
});
export const TestPrefixPrefixedMessagePartialIgnoreOneof = nexus.unionType({
    name: \\"TestPrefixPrefixedMessagePartialIgnoreOneof\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\");
    }
});
export const TestPrefixPrefixedEnum = nexus.enumType({
    name: \\"TestPrefixPrefixedEnum\\",
    members: [
        {
            name: \\"PREFIXED_FOO\\",
            value: 1
        },
        {
            name: \\"PREFIXED_BAR\\",
            value: 2
        }
    ]
});
export const TestPrefixInterfaceMessageType = nexus.enumType({
    name: \\"TestPrefixInterfaceMessageType\\",
    members: [
        {
            name: \\"INNER\\",
            value: 1
        },
        {
            name: \\"INNER2\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf custom options with protobufjs generates nexus DSLs: extensions/extensions_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/extensions.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$extensions from \\"./testapis/extensions\\";
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage = _$testapis$extensions.testapis.extensions.PrefixedMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage = _$testapis$extensions.testapis.extensions.PrefixedMessage.InnerMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2 = _$testapis$extensions.testapis.extensions.PrefixedMessage.InnerMessage2;
export type _$testapis$extensions$testapis$extensions$TestPrefixIgnoredMessageNotIgnored = _$testapis$extensions.testapis.extensions.IgnoredMessage.NotIgnored;
export type _$testapis$extensions$testapis$extensions$TestPrefixInterfaceMessage = _$testapis$extensions.testapis.extensions.InterfaceMessage;
export const TestPrefixPrefixedMessage = nexus.objectType({
    name: \\"TestPrefixPrefixedMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            description: \\"Output only.\\",
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedEnum\\"),
            resolve(root) {
                const value = root.prefixedEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions.testapis.extensions.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                if (value === _$testapis$extensions.testapis.extensions.PrefixedEnum.PREFIXED_IGNORED) {
                    throw new Error(\\"PREFIXED_IGNORED is ignored in GraphQL schema\\");
                }
                return value;
            }
        });
        t.field(\\"notIgnoredMessage\\", {
            type: nexus.nullable(\\"TestPrefixIgnoredMessageNotIgnored\\"),
            resolve(root) {
                const value = root.notIgnoredMessage;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"squashedMessage\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageSquashedMessage\\"),
            resolve(root) {
                const value = root.squashedMessage;
                if (value == null) {
                    return null;
                }
                if (value.oneofField) {
                    return value.oneofField;
                }
                if (value.oneofField_2) {
                    return value.oneofField_2;
                }
                return null;
            }
        });
        t.field(\\"thisFieldWasRenamed\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.thisFieldWillBeRenamed;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"partialIgnoreOneof\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessagePartialIgnoreOneof\\"),
            resolve(root) {
                if (root.oneofNotIgnoredField) {
                    return root.oneofNotIgnoredField;
                }
                return null;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions.testapis.extensions.PrefixedMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage = nexus.objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions.testapis.extensions.PrefixedMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage2 = nexus.objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions.testapis.extensions.PrefixedMessage.InnerMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2\\" }
});
export const TestPrefixIgnoredMessageNotIgnored = nexus.objectType({
    name: \\"TestPrefixIgnoredMessageNotIgnored\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$extensions.testapis.extensions.IgnoredMessage.NotIgnored;
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixIgnoredMessageNotIgnored\\" }
});
export const TestPrefixPrefixedMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"prefixedEnum\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedEnum\\")
        });
        t.field(\\"notIgnoredMessage\\", {
            type: nexus.nullable(\\"TestPrefixIgnoredMessageNotIgnoredInput\\")
        });
        t.field(\\"squashedMessage\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageSquashedMessageInput\\")
        });
        t.field(\\"thisFieldWasRenamed\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"oneofNotIgnoredField\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\")
        });
    }
});
export const TestPrefixInterfaceMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixInterfaceMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessageInput\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessage2Input = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2Input\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessageInput = nexus.inputObjectType({
    name: \\"TestPrefixPrefixedMessageSquashedMessageInput\\",
    definition(t) {
        t.field(\\"oneofField\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\")
        });
        t.field(\\"oneofField2\\", {
            type: nexus.nullable(\\"TestPrefixPrefixedMessageInnerMessage2Input\\")
        });
    }
});
export const TestPrefixIgnoredMessageNotIgnoredInput = nexus.inputObjectType({
    name: \\"TestPrefixIgnoredMessageNotIgnoredInput\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const TestPrefixInterfaceMessage = nexus.interfaceType({
    name: \\"TestPrefixInterfaceMessage\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessage = nexus.unionType({
    name: \\"TestPrefixPrefixedMessageSquashedMessage\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\", \\"TestPrefixPrefixedMessageInnerMessage2\\");
    }
});
export const TestPrefixPrefixedMessagePartialIgnoreOneof = nexus.unionType({
    name: \\"TestPrefixPrefixedMessagePartialIgnoreOneof\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\");
    }
});
export const TestPrefixPrefixedEnum = nexus.enumType({
    name: \\"TestPrefixPrefixedEnum\\",
    members: [
        {
            name: \\"PREFIXED_FOO\\",
            value: 1
        },
        {
            name: \\"PREFIXED_BAR\\",
            value: 2
        }
    ]
});
export const TestPrefixInterfaceMessageType = nexus.enumType({
    name: \\"TestPrefixInterfaceMessageType\\",
    members: [
        {
            name: \\"INNER\\",
            value: 1
        },
        {
            name: \\"INNER2\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf enums with native protobuf generates nexus DSLs: enums/enums_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/enums/enums.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$enums$enums_pb from \\"./testapis/enums/enums_pb\\";
export type _$testapis$enums$enums_pb$MessageWithEnums = _$testapis$enums$enums_pb.MessageWithEnums;
export const MessageWithEnums = nexus.objectType({
    name: \\"MessageWithEnums\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nexus.nonNull(\\"MyEnum\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredMyEnum();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                if (value === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                    throw new Error(\\"requiredMyEnum is required field. But got unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnum\\", {
            type: nexus.nullable(\\"MyEnum\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nexus.nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredMyEnumWithoutUnspecified();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nexus.nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnumWithoutUnspecified();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnums\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnum\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredMyEnumsList();
                return value.map(item => {
                    if (item === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                        throw new Error(\\"requiredMyEnums is required field. But got unspecified.\\");
                    }
                    return item;
                });
            }
        });
        t.field(\\"optionalMyEnums\\", {
            type: nexus.list(nexus.nullable(\\"MyEnum\\")),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnumsList();
                return value.map(item => {
                    if (item === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                        return null;
                    }
                    return item;
                });
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredMyEnumWithoutUnspecifiedsList();
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nullable(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnumWithoutUnspecifiedsList();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$enums$enums_pb.MessageWithEnums;
    },
    sourceType: { module: __filename, export: \\"_$testapis$enums$enums_pb$MessageWithEnums\\" }
});
export const MessageWithEnumsInput = nexus.inputObjectType({
    name: \\"MessageWithEnumsInput\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nexus.nonNull(\\"MyEnum\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnum\\", {
            type: nexus.nullable(\\"MyEnum\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nexus.nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nexus.nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnums\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnum\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnums\\", {
            type: nexus.list(nexus.nullable(\\"MyEnum\\")),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nullable(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Optional.\\"
        });
    }
});
export const MyEnum = nexus.enumType({
    name: \\"MyEnum\\",
    members: [
        {
            name: \\"MY_ENUM_FOO\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_BAR\\",
            description: \\"This is Bar.\\",
            value: 2
        },
        {
            name: \\"MY_ENUM_BAZ\\",
            value: 3
        }
    ]
});
export const MyEnumWithoutUnspecified = nexus.enumType({
    name: \\"MyEnumWithoutUnspecified\\",
    members: [
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_FOO\\",
            value: 0
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAR\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAZ\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf enums with protobufjs generates nexus DSLs: enums/enums_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/enums/enums.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$enums from \\"./testapis/enums\\";
export type _$testapis$enums$testapi$enums$MessageWithEnums = _$testapis$enums.testapi.enums.MessageWithEnums;
export const MessageWithEnums = nexus.objectType({
    name: \\"MessageWithEnums\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nexus.nonNull(\\"MyEnum\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredMyEnum;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                if (value === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    throw new Error(\\"requiredMyEnum is required field. But got unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnum\\", {
            type: nexus.nullable(\\"MyEnum\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nexus.nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredMyEnumWithoutUnspecified;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nexus.nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnumWithoutUnspecified;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnums\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnum\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredMyEnums;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.map(item => {
                    if (item === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                        throw new Error(\\"requiredMyEnums is required field. But got unspecified.\\");
                    }
                    return item;
                });
            }
        });
        t.field(\\"optionalMyEnums\\", {
            type: nexus.list(nexus.nullable(\\"MyEnum\\")),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnums;
                if (value == null) {
                    return null;
                }
                return value.map(item => {
                    if (item === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                        return null;
                    }
                    return item;
                });
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredMyEnumWithoutUnspecifieds;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nullable(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnumWithoutUnspecifieds;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$enums.testapi.enums.MessageWithEnums;
    },
    sourceType: { module: __filename, export: \\"_$testapis$enums$testapi$enums$MessageWithEnums\\" }
});
export const MessageWithEnumsInput = nexus.inputObjectType({
    name: \\"MessageWithEnumsInput\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nexus.nonNull(\\"MyEnum\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnum\\", {
            type: nexus.nullable(\\"MyEnum\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nexus.nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nexus.nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnums\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnum\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnums\\", {
            type: nexus.list(nexus.nullable(\\"MyEnum\\")),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nonNull(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecifieds\\", {
            type: nexus.list(nexus.nullable(\\"MyEnumWithoutUnspecified\\")),
            description: \\"Optional.\\"
        });
    }
});
export const MyEnum = nexus.enumType({
    name: \\"MyEnum\\",
    members: [
        {
            name: \\"MY_ENUM_FOO\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_BAR\\",
            description: \\"This is Bar.\\",
            value: 2
        },
        {
            name: \\"MY_ENUM_BAZ\\",
            value: 3
        }
    ]
});
export const MyEnumWithoutUnspecified = nexus.enumType({
    name: \\"MyEnumWithoutUnspecified\\",
    members: [
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_FOO\\",
            value: 0
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAR\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAZ\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf oneof with native protobuf generates nexus DSLs: oneof/oneof_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/oneof/oneof.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$oneof$oneof_pb from \\"./testapis/oneof/oneof_pb\\";
export type _$testapis$oneof$oneof_pb$OneofParent = _$testapis$oneof$oneof_pb.OneofParent;
export type _$testapis$oneof$oneof_pb$OneofMemberMessage1 = _$testapis$oneof$oneof_pb.OneofMemberMessage1;
export type _$testapis$oneof$oneof_pb$OneofMemberMessage2 = _$testapis$oneof$oneof_pb.OneofMemberMessage2;
export const OneofParent = nexus.objectType({
    name: \\"OneofParent\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getNormalField();
                return value;
            }
        });
        t.field(\\"requiredOneofMembers\\", {
            type: nexus.nonNull(\\"OneofParentRequiredOneofMembers\\"),
            description: \\"Required. disallow not_set.\\",
            resolve(root) {
                switch (root.getRequiredOneofMembersCase()) {
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_ONEOF_MEMBERS_NOT_SET: {
                        throw \\"unreachable\\";
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_MESSAGE_1: {
                        return root.getRequiredMessage1()!;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_MESSAGE_2: {
                        return root.getRequiredMessage2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
        t.field(\\"optionalOneofMembers\\", {
            type: nexus.nullable(\\"OneofParentOptionalOneofMembers\\"),
            resolve(root) {
                switch (root.getOptionalOneofMembersCase()) {
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTIONAL_ONEOF_MEMBERS_NOT_SET: {
                        return null;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTOINAL_MESSAGE_1: {
                        return root.getOptoinalMessage1()!;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTOINAL_MESSAGE_2: {
                        return root.getOptoinalMessage2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof$oneof_pb.OneofParent;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofParent\\" }
});
export const OneofMemberMessage1 = nexus.objectType({
    name: \\"OneofMemberMessage1\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getBody();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage1;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofMemberMessage1\\" }
});
export const OneofMemberMessage2 = nexus.objectType({
    name: \\"OneofMemberMessage2\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getImageUrl();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofMemberMessage2\\" }
});
export const OneofParentInput = nexus.inputObjectType({
    name: \\"OneofParentInput\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredMessage1\\", {
            type: nexus.nullable(\\"OneofMemberMessage1Input\\")
        });
        t.field(\\"requiredMessage2\\", {
            type: nexus.nullable(\\"OneofMemberMessage2Input\\")
        });
        t.field(\\"optoinalMessage1\\", {
            type: nexus.nullable(\\"OneofMemberMessage1Input\\")
        });
        t.field(\\"optoinalMessage2\\", {
            type: nexus.nullable(\\"OneofMemberMessage2Input\\")
        });
    }
});
export const OneofMemberMessage1Input = nexus.inputObjectType({
    name: \\"OneofMemberMessage1Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const OneofMemberMessage2Input = nexus.inputObjectType({
    name: \\"OneofMemberMessage2Input\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const OneofParentRequiredOneofMembers = nexus.unionType({
    name: \\"OneofParentRequiredOneofMembers\\",
    description: \\"Required. disallow not_set.\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    }
});
export const OneofParentOptionalOneofMembers = nexus.unionType({
    name: \\"OneofParentOptionalOneofMembers\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    }
});
"
`;

exports[`protobuf oneof with protobufjs generates nexus DSLs: oneof/oneof_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/oneof/oneof.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$oneof from \\"./testapis/oneof\\";
export type _$testapis$oneof$testapis$oneof$OneofParent = _$testapis$oneof.testapis.oneof.OneofParent;
export type _$testapis$oneof$testapis$oneof$OneofMemberMessage1 = _$testapis$oneof.testapis.oneof.OneofMemberMessage1;
export type _$testapis$oneof$testapis$oneof$OneofMemberMessage2 = _$testapis$oneof.testapis.oneof.OneofMemberMessage2;
export const OneofParent = nexus.objectType({
    name: \\"OneofParent\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.normalField;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredOneofMembers\\", {
            type: nexus.nonNull(\\"OneofParentRequiredOneofMembers\\"),
            description: \\"Required. disallow not_set.\\",
            resolve(root) {
                if (root.requiredMessage1) {
                    return root.requiredMessage1;
                }
                if (root.requiredMessage2) {
                    return root.requiredMessage2;
                }
                throw \\"unreachable\\";
            }
        });
        t.field(\\"optionalOneofMembers\\", {
            type: nexus.nullable(\\"OneofParentOptionalOneofMembers\\"),
            resolve(root) {
                if (root.optoinalMessage1) {
                    return root.optoinalMessage1;
                }
                if (root.optoinalMessage2) {
                    return root.optoinalMessage2;
                }
                return null;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof.testapis.oneof.OneofParent;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofParent\\" }
});
export const OneofMemberMessage1 = nexus.objectType({
    name: \\"OneofMemberMessage1\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof.testapis.oneof.OneofMemberMessage1;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofMemberMessage1\\" }
});
export const OneofMemberMessage2 = nexus.objectType({
    name: \\"OneofMemberMessage2\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.imageUrl;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$oneof.testapis.oneof.OneofMemberMessage2;
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofMemberMessage2\\" }
});
export const OneofParentInput = nexus.inputObjectType({
    name: \\"OneofParentInput\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredMessage1\\", {
            type: nexus.nullable(\\"OneofMemberMessage1Input\\")
        });
        t.field(\\"requiredMessage2\\", {
            type: nexus.nullable(\\"OneofMemberMessage2Input\\")
        });
        t.field(\\"optoinalMessage1\\", {
            type: nexus.nullable(\\"OneofMemberMessage1Input\\")
        });
        t.field(\\"optoinalMessage2\\", {
            type: nexus.nullable(\\"OneofMemberMessage2Input\\")
        });
    }
});
export const OneofMemberMessage1Input = nexus.inputObjectType({
    name: \\"OneofMemberMessage1Input\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const OneofMemberMessage2Input = nexus.inputObjectType({
    name: \\"OneofMemberMessage2Input\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
export const OneofParentRequiredOneofMembers = nexus.unionType({
    name: \\"OneofParentRequiredOneofMembers\\",
    description: \\"Required. disallow not_set.\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    }
});
export const OneofParentOptionalOneofMembers = nexus.unionType({
    name: \\"OneofParentOptionalOneofMembers\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    }
});
"
`;

exports[`simple proto file with native protobuf generates nexus DSLs: hello/hello_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/hello/hello.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$hello$hello_pb from \\"./testapis/hello/hello_pb\\";
export type _$testapis$hello$hello_pb$Hello = _$testapis$hello$hello_pb.Hello;
export type _$testapis$hello$hello_pb$Primitives = _$testapis$hello$hello_pb.Primitives;
export const Hello = nexus.objectType({
    name: \\"Hello\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nexus.nonNull(\\"Primitives\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredPrimitives();
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalPrimitives\\", {
            type: nexus.nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalPrimitives();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: nexus.list(nexus.nonNull(\\"Primitives\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.getRequiredPrimitivesListList();
                return value;
            }
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nexus.nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalPrimitivesList();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$hello$hello_pb.Hello;
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$hello_pb$Hello\\" }
});
export const Primitives = nexus.objectType({
    name: \\"Primitives\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nexus.nonNull(\\"Float\\"),
            resolve(root) {
                const value = root.getRequiredDoubleValue();
                return value;
            }
        });
        t.field(\\"requiredFloatValue\\", {
            type: nexus.nonNull(\\"Float\\"),
            resolve(root) {
                const value = root.getRequiredFloatValue();
                return value;
            }
        });
        t.field(\\"requiredInt32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.getRequiredInt32Value();
                return value;
            }
        });
        t.field(\\"requiredInt64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredInt64Value();
                return value.toString();
            }
        });
        t.field(\\"requiredUint32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.getRequiredUint32Value();
                return value;
            }
        });
        t.field(\\"requiredUint64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredUint64Value();
                return value.toString();
            }
        });
        t.field(\\"requiredSint32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.getRequiredSint32Value();
                return value;
            }
        });
        t.field(\\"requiredSint64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredSint64Value();
                return value.toString();
            }
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.getRequiredFixed32Value();
                return value;
            }
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredFixed64Value();
                return value.toString();
            }
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.getRequiredSfixed32Value();
                return value;
            }
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredSfixed64Value();
                return value.toString();
            }
        });
        t.field(\\"requiredBoolValue\\", {
            type: nexus.nonNull(\\"Boolean\\"),
            resolve(root) {
                const value = root.getRequiredBoolValue();
                return value;
            }
        });
        t.field(\\"requiredStringValue\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.getRequiredStringValue();
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$hello$hello_pb.Primitives;
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$hello_pb$Primitives\\" }
});
export const HelloInput = nexus.inputObjectType({
    name: \\"HelloInput\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nexus.nonNull(\\"PrimitivesInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitives\\", {
            type: nexus.nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: nexus.list(nexus.nonNull(\\"PrimitivesInput\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nexus.nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
    }
});
export const PrimitivesInput = nexus.inputObjectType({
    name: \\"PrimitivesInput\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nexus.nonNull(\\"Float\\")
        });
        t.field(\\"requiredFloatValue\\", {
            type: nexus.nonNull(\\"Float\\")
        });
        t.field(\\"requiredInt32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredInt64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredUint32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredUint64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredSint32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredSint64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredBoolValue\\", {
            type: nexus.nonNull(\\"Boolean\\")
        });
        t.field(\\"requiredStringValue\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
"
`;

exports[`simple proto file with protobufjs generates nexus DSLs: hello/hello_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/hello/hello.proto

import * as nexus from \\"nexus\\";
import * as _$testapis$hello from \\"./testapis/hello\\";
export type _$testapis$hello$testapis$hello$Hello = _$testapis$hello.testapis.hello.Hello;
export type _$testapis$hello$testapis$hello$Primitives = _$testapis$hello.testapis.hello.Primitives;
export const Hello = nexus.objectType({
    name: \\"Hello\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nexus.nonNull(\\"Primitives\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredPrimitives;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalPrimitives\\", {
            type: nexus.nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalPrimitives;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: nexus.list(nexus.nonNull(\\"Primitives\\")),
            description: \\"Required.\\",
            resolve(root) {
                const value = root.requiredPrimitivesList;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nexus.nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalPrimitivesList;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$hello.testapis.hello.Hello;
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$testapis$hello$Hello\\" }
});
export const Primitives = nexus.objectType({
    name: \\"Primitives\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nexus.nonNull(\\"Float\\"),
            resolve(root) {
                const value = root.requiredDoubleValue;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredFloatValue\\", {
            type: nexus.nonNull(\\"Float\\"),
            resolve(root) {
                const value = root.requiredFloatValue;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredInt32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.requiredInt32Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredInt64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredInt64Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"requiredUint32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.requiredUint32Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredUint64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredUint64Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"requiredSint32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.requiredSint32Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredSint64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredSint64Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.requiredFixed32Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredFixed64Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nexus.nonNull(\\"Int\\"),
            resolve(root) {
                const value = root.requiredSfixed32Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredSfixed64Value;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value.toString();
            }
        });
        t.field(\\"requiredBoolValue\\", {
            type: nexus.nonNull(\\"Boolean\\"),
            resolve(root) {
                const value = root.requiredBoolValue;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
        t.field(\\"requiredStringValue\\", {
            type: nexus.nonNull(\\"String\\"),
            resolve(root) {
                const value = root.requiredStringValue;
                if (value == null) {
                    throw new Error(\\"Cannot return null for non-nullable field\\");
                }
                return value;
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$hello.testapis.hello.Primitives;
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$testapis$hello$Primitives\\" }
});
export const HelloInput = nexus.inputObjectType({
    name: \\"HelloInput\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nexus.nonNull(\\"PrimitivesInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitives\\", {
            type: nexus.nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: nexus.list(nexus.nonNull(\\"PrimitivesInput\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nexus.nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
    }
});
export const PrimitivesInput = nexus.inputObjectType({
    name: \\"PrimitivesInput\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nexus.nonNull(\\"Float\\")
        });
        t.field(\\"requiredFloatValue\\", {
            type: nexus.nonNull(\\"Float\\")
        });
        t.field(\\"requiredInt32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredInt64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredUint32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredUint64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredSint32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredSint64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nexus.nonNull(\\"Int\\")
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nexus.nonNull(\\"String\\")
        });
        t.field(\\"requiredBoolValue\\", {
            type: nexus.nonNull(\\"Boolean\\")
        });
        t.field(\\"requiredStringValue\\", {
            type: nexus.nonNull(\\"String\\")
        });
    }
});
"
`;

exports[`well-known protobuf types with native protobuf generates nexus DSLs: wktypes/well_known_types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/wktypes/well_known_types.proto

import * as $$proto_nexus$google_protobuf from \\"@proto-nexus/google-protobuf\\";
import * as nexus from \\"nexus\\";
import * as _$testapis$wktypes$well_known_types_pb from \\"./testapis/wktypes/well_known_types_pb\\";
export type _$testapis$wktypes$well_known_types_pb$Message = _$testapis$wktypes$well_known_types_pb.Message;
export const Message = nexus.objectType({
    name: \\"Message\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nexus.nullable(\\"DateTime\\"),
            resolve(root) {
                const value = root.getTimestamp();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.timestampToDate(value);
            }
        });
        t.field(\\"int32Value\\", {
            type: nexus.nullable(\\"Int\\"),
            resolve(root) {
                const value = root.getInt32Value();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapInt32Value(value);
            }
        });
        t.field(\\"int64Value\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.getInt64Value();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapInt64Value(value)?.toString() ?? null;
            }
        });
        t.field(\\"uint32Value\\", {
            type: nexus.nullable(\\"Int\\"),
            resolve(root) {
                const value = root.getUint32Value();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapUInt32Value(value);
            }
        });
        t.field(\\"uint64Value\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.getUint64Value();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapUInt64Value(value)?.toString() ?? null;
            }
        });
        t.field(\\"floatValue\\", {
            type: nexus.nullable(\\"Float\\"),
            resolve(root) {
                const value = root.getFloatValue();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapFloatValue(value);
            }
        });
        t.field(\\"doubleValue\\", {
            type: nexus.nullable(\\"Float\\"),
            resolve(root) {
                const value = root.getDoubleValue();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapDoubleValue(value);
            }
        });
        t.field(\\"boolValue\\", {
            type: nexus.nullable(\\"Boolean\\"),
            resolve(root) {
                const value = root.getBoolValue();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapBoolValue(value);
            }
        });
        t.field(\\"stringValue\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.getStringValue();
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$google_protobuf.unwrapStringValue(value);
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$wktypes$well_known_types_pb.Message;
    },
    sourceType: { module: __filename, export: \\"_$testapis$wktypes$well_known_types_pb$Message\\" }
});
export const MessageInput = nexus.inputObjectType({
    name: \\"MessageInput\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nexus.nullable(\\"DateTime\\")
        });
        t.field(\\"int32Value\\", {
            type: nexus.nullable(\\"Int\\")
        });
        t.field(\\"int64Value\\", {
            type: nexus.nullable(\\"String\\")
        });
        t.field(\\"uint32Value\\", {
            type: nexus.nullable(\\"Int\\")
        });
        t.field(\\"uint64Value\\", {
            type: nexus.nullable(\\"String\\")
        });
        t.field(\\"floatValue\\", {
            type: nexus.nullable(\\"Float\\")
        });
        t.field(\\"doubleValue\\", {
            type: nexus.nullable(\\"Float\\")
        });
        t.field(\\"boolValue\\", {
            type: nexus.nullable(\\"Boolean\\")
        });
        t.field(\\"stringValue\\", {
            type: nexus.nullable(\\"String\\")
        });
    }
});
"
`;

exports[`well-known protobuf types with protobufjs generates nexus DSLs: wktypes/well_known_types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/wktypes/well_known_types.proto

import * as $$proto_nexus$protobufjs from \\"@proto-nexus/protobufjs\\";
import * as nexus from \\"nexus\\";
import * as _$testapis$wktypes from \\"./testapis/wktypes\\";
export type _$testapis$wktypes$testapis$wktypes$Message = _$testapis$wktypes.testapis.wktypes.Message;
export const Message = nexus.objectType({
    name: \\"Message\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nexus.nullable(\\"DateTime\\"),
            resolve(root) {
                const value = root.timestamp;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.timestampToDate(value);
            }
        });
        t.field(\\"int32Value\\", {
            type: nexus.nullable(\\"Int\\"),
            resolve(root) {
                const value = root.int32Value;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapInt32Value(value);
            }
        });
        t.field(\\"int64Value\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.int64Value;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapInt64Value(value)?.toString() ?? null;
            }
        });
        t.field(\\"uint32Value\\", {
            type: nexus.nullable(\\"Int\\"),
            resolve(root) {
                const value = root.uint32Value;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapUInt32Value(value);
            }
        });
        t.field(\\"uint64Value\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.uint64Value;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapUInt64Value(value)?.toString() ?? null;
            }
        });
        t.field(\\"floatValue\\", {
            type: nexus.nullable(\\"Float\\"),
            resolve(root) {
                const value = root.floatValue;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapFloatValue(value);
            }
        });
        t.field(\\"doubleValue\\", {
            type: nexus.nullable(\\"Float\\"),
            resolve(root) {
                const value = root.doubleValue;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapDoubleValue(value);
            }
        });
        t.field(\\"boolValue\\", {
            type: nexus.nullable(\\"Boolean\\"),
            resolve(root) {
                const value = root.boolValue;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapBoolValue(value);
            }
        });
        t.field(\\"stringValue\\", {
            type: nexus.nullable(\\"String\\"),
            resolve(root) {
                const value = root.stringValue;
                if (value == null) {
                    return null;
                }
                return $$proto_nexus$protobufjs.unwrapStringValue(value);
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof _$testapis$wktypes.testapis.wktypes.Message;
    },
    sourceType: { module: __filename, export: \\"_$testapis$wktypes$testapis$wktypes$Message\\" }
});
export const MessageInput = nexus.inputObjectType({
    name: \\"MessageInput\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nexus.nullable(\\"DateTime\\")
        });
        t.field(\\"int32Value\\", {
            type: nexus.nullable(\\"Int\\")
        });
        t.field(\\"int64Value\\", {
            type: nexus.nullable(\\"String\\")
        });
        t.field(\\"uint32Value\\", {
            type: nexus.nullable(\\"Int\\")
        });
        t.field(\\"uint64Value\\", {
            type: nexus.nullable(\\"String\\")
        });
        t.field(\\"floatValue\\", {
            type: nexus.nullable(\\"Float\\")
        });
        t.field(\\"doubleValue\\", {
            type: nexus.nullable(\\"Float\\")
        });
        t.field(\\"boolValue\\", {
            type: nexus.nullable(\\"Boolean\\")
        });
        t.field(\\"stringValue\\", {
            type: nexus.nullable(\\"String\\")
        });
    }
});
"
`;
