// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deprecation with native protobuf generates nexus DSLs: deprecation/deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/deprecation.proto

import { objectType, inputObjectType, enumType, unionType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$deprecation$deprecation_pb from \\"./testapis/deprecation/deprecation_pb\\";
export type _$testapis$deprecation$deprecation_pb$DeprecatedMessage = _$testapis$deprecation$deprecation_pb.DeprecatedMessage;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessage = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage;
export type _$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage = _$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1 = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1;
export type _$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2 = _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2;
export const NotDeprecatedMessageNotDeprecatedOneof = unionType({
    name: \\"NotDeprecatedMessageNotDeprecatedOneof\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1) {
            return \\"NotDeprecatedMessageInnerMessage1\\";
        }
        if (item instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2) {
            return \\"NotDeprecatedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    }
});
export const NotDeprecatedMessageDeprecatedOneof = unionType({
    name: \\"NotDeprecatedMessageDeprecatedOneof\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1) {
            return \\"NotDeprecatedMessageInnerMessage1\\";
        }
        if (item instanceof _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2) {
            return \\"NotDeprecatedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    }
});
export const DeprecatedMessage = objectType({
    name: \\"DeprecatedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"NotDeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$deprecation_pb.NotDeprecatedEnum.NOT_DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$DeprecatedMessage\\" }
});
export const NotDeprecatedMessage = objectType({
    name: \\"NotDeprecatedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$deprecation_pb.DeprecatedEnum.DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"not_deprecated_oneof\\", {
            type: nullable(\\"NotDeprecatedMessageNotDeprecatedOneof\\"),
            description: \\"\\",
            resolve(root) {
                switch (root.getNotDeprecatedOneofCase()) {
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.NOT_DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_1: {
                        return root.getMsg1()!;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_2: {
                        return root.getMsg2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
        t.field(\\"deprecated_oneof\\", {
            type: nullable(\\"NotDeprecatedMessageDeprecatedOneof\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.deprecated_oneof is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                switch (root.getDeprecatedOneofCase()) {
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_3: {
                        return root.getMsg3()!;
                    }
                    case _$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_4: {
                        return root.getMsg4()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessage\\" }
});
export const DeprecatedMessageInnerMessage = objectType({
    name: \\"DeprecatedMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage\\" }
});
export const NotDeprecatedMessageInnerMessage1 = objectType({
    name: \\"NotDeprecatedMessageInnerMessage1\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1\\" }
});
export const NotDeprecatedMessageInnerMessage2 = objectType({
    name: \\"NotDeprecatedMessageInnerMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2\\" }
});
export const DeprecatedMessageInput = inputObjectType({
    name: \\"DeprecatedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"NotDeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInput = inputObjectType({
    name: \\"NotDeprecatedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg1\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg2\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            description: \\"\\"
        });
        t.field(\\"msg3\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg4\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const DeprecatedMessageInnerMessageInput = inputObjectType({
    name: \\"DeprecatedMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage1Input = inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage1Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage2Input = inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const NotDeprecatedEnum = enumType({
    name: \\"NotDeprecatedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"NOT_DEPRECATED_FOO\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_BAR\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedEnum.DEPRECATED_BAR is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
export const DeprecatedEnum = enumType({
    name: \\"DeprecatedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"DEPRECATED_BAZ\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_QUX\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with native protobuf generates nexus DSLs: deprecation/file_deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/file_deprecation.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$deprecation$file_deprecation_pb from \\"./testapis/deprecation/file_deprecation_pb\\";
export type _$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessage = _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage;
export type _$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessageInnerMessage = _$testapis$deprecation$file_deprecation_pb.DeprecatedFileMessage.InnerMessage;
export const DeprecatedFileMessage = objectType({
    name: \\"DeprecatedFileMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedFileEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation$file_deprecation_pb.DeprecatedFileEnum.DEPRECATED_FILE_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessage\\" }
});
export const DeprecatedFileMessageInnerMessage = objectType({
    name: \\"DeprecatedFileMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$file_deprecation_pb$DeprecatedFileMessageInnerMessage\\" }
});
export const DeprecatedFileMessageInput = inputObjectType({
    name: \\"DeprecatedFileMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedFileEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileMessageInnerMessageInput = inputObjectType({
    name: \\"DeprecatedFileMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileEnum = enumType({
    name: \\"DeprecatedFileEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"DEPRECATED_FILE_FOO\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_FILE_BAR\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with protobufjs generates nexus DSLs: deprecation/deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/deprecation.proto

import { objectType, inputObjectType, enumType, unionType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$deprecation from \\"./testapis/deprecation\\";
export type _$testapis$deprecation$testapis$deprecation$DeprecatedMessage = _$testapis$deprecation.testapis.deprecation.IDeprecatedMessage;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage = _$testapis$deprecation.testapis.deprecation.INotDeprecatedMessage;
export type _$testapis$deprecation$testapis$deprecation$DeprecatedMessageInnerMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedMessage.IInnerMessage;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage1 = _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage1;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage2 = _$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage2;
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage_not_deprecated_oneof = (_$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage1 & {
    __protobufTypeName: \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\";
}) | (_$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage2 & {
    __protobufTypeName: \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\";
});
export type _$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage_deprecated_oneof = (_$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage1 & {
    __protobufTypeName: \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\";
}) | (_$testapis$deprecation.testapis.deprecation.NotDeprecatedMessage.IInnerMessage2 & {
    __protobufTypeName: \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\";
});
export const NotDeprecatedMessageNotDeprecatedOneof = unionType({
    name: \\"NotDeprecatedMessageNotDeprecatedOneof\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item.__protobufTypeName === \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\") {
            return \\"NotDeprecatedMessageInnerMessage1\\";
        }
        if (item.__protobufTypeName === \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\") {
            return \\"NotDeprecatedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage_not_deprecated_oneof\\" }
});
export const NotDeprecatedMessageDeprecatedOneof = unionType({
    name: \\"NotDeprecatedMessageDeprecatedOneof\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"NotDeprecatedMessageInnerMessage1\\", \\"NotDeprecatedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item.__protobufTypeName === \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\") {
            return \\"NotDeprecatedMessageInnerMessage1\\";
        }
        if (item.__protobufTypeName === \\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\") {
            return \\"NotDeprecatedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage_deprecated_oneof\\" }
});
export const DeprecatedMessage = objectType({
    name: \\"DeprecatedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"NotDeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.NotDeprecatedEnum.NOT_DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedMessage\\" }
});
export const NotDeprecatedMessage = objectType({
    name: \\"NotDeprecatedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.DeprecatedEnum.DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"not_deprecated_oneof\\", {
            type: nullable(\\"NotDeprecatedMessageNotDeprecatedOneof\\"),
            description: \\"\\",
            resolve(root) {
                if (root.msg1) {
                    return Object.assign(root.msg1, { __protobufTypeName: (\\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\" as const) });
                }
                if (root.msg2) {
                    return Object.assign(root.msg2, { __protobufTypeName: (\\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\" as const) });
                }
                return null;
            }
        });
        t.field(\\"deprecated_oneof\\", {
            type: nullable(\\"NotDeprecatedMessageDeprecatedOneof\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.deprecated_oneof is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                if (root.msg3) {
                    return Object.assign(root.msg3, { __protobufTypeName: (\\"testapis.deprecation.NotDeprecatedMessage.InnerMessage1\\" as const) });
                }
                if (root.msg4) {
                    return Object.assign(root.msg4, { __protobufTypeName: (\\"testapis.deprecation.NotDeprecatedMessage.InnerMessage2\\" as const) });
                }
                return null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessage\\" }
});
export const DeprecatedMessageInnerMessage = objectType({
    name: \\"DeprecatedMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedMessageInnerMessage\\" }
});
export const NotDeprecatedMessageInnerMessage1 = objectType({
    name: \\"NotDeprecatedMessageInnerMessage1\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage1\\" }
});
export const NotDeprecatedMessageInnerMessage2 = objectType({
    name: \\"NotDeprecatedMessageInnerMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$NotDeprecatedMessageInnerMessage2\\" }
});
export const DeprecatedMessageInput = inputObjectType({
    name: \\"DeprecatedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"NotDeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInput = inputObjectType({
    name: \\"NotDeprecatedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg1\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg2\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            description: \\"\\"
        });
        t.field(\\"msg3\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage1Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.\\"
        });
        t.field(\\"msg4\\", {
            type: nullable(\\"NotDeprecatedMessageInnerMessage2Input\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const DeprecatedMessageInnerMessageInput = inputObjectType({
    name: \\"DeprecatedMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage1Input = inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage1Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const NotDeprecatedMessageInnerMessage2Input = inputObjectType({
    name: \\"NotDeprecatedMessageInnerMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const NotDeprecatedEnum = enumType({
    name: \\"NotDeprecatedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"NOT_DEPRECATED_FOO\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_BAR\\",
            deprecation: \\"testapis.deprecation.NotDeprecatedEnum.DEPRECATED_BAR is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
export const DeprecatedEnum = enumType({
    name: \\"DeprecatedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"DEPRECATED_BAZ\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_QUX\\",
            deprecation: \\"testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.\\",
            value: 2
        }
    ]
});
"
`;

exports[`deprecation with protobufjs generates nexus DSLs: deprecation/file_deprecation_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/file_deprecation.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$deprecation from \\"./testapis/deprecation\\";
export type _$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage = _$testapis$deprecation.testapis.deprecation.IDeprecatedFileMessage;
export type _$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage = _$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.IInnerMessage;
export const DeprecatedFileMessage = objectType({
    name: \\"DeprecatedFileMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedFileEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$deprecation.testapis.deprecation.DeprecatedFileEnum.DEPRECATED_FILE_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage\\" }
});
export const DeprecatedFileMessageInnerMessage = objectType({
    name: \\"DeprecatedFileMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage\\" }
});
export const DeprecatedFileMessageInput = inputObjectType({
    name: \\"DeprecatedFileMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"DeprecatedFileEnum\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileMessageInnerMessageInput = inputObjectType({
    name: \\"DeprecatedFileMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\"
        });
    }
});
export const DeprecatedFileEnum = enumType({
    name: \\"DeprecatedFileEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"DEPRECATED_FILE_FOO\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 1
        },
        {
            name: \\"DEPRECATED_FILE_BAR\\",
            deprecation: \\"testapis/deprecation/file_deprecation.proto is mark as deprecated.\\",
            value: 2
        }
    ]
});
"
`;

exports[`field_behavior with native protobuf generates nexus DSLs: field_behavior/comments_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/field_behavior/comments.proto

import { objectType, inputObjectType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$field_behavior$comments_pb from \\"./testapis/field_behavior/comments_pb\\";
export type _$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessage = _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage;
export type _$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessagePost = _$testapis$field_behavior$comments_pb.FieldBehaviorComentsMessage.Post;
export const FieldBehaviorComentsMessage = objectType({
    name: \\"FieldBehaviorComentsMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required.\\",
            resolve(root) {
                return root.getRequiredField()!;
            }
        });
        t.field(\\"requiredOutputOnlyField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required. Output only.\\",
            resolve(root) {
                return root.getRequiredOutputOnlyField()!;
            }
        });
        t.field(\\"outputOnlyRequiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only. Required.\\",
            resolve(root) {
                return root.getOutputOnlyRequiredField()!;
            }
        });
        t.field(\\"outputOnlyField\\", {
            type: nullable(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only.\\",
            resolve(root) {
                return root.getOutputOnlyField() ?? null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessage\\" }
});
export const FieldBehaviorComentsMessagePost = objectType({
    name: \\"FieldBehaviorComentsMessagePost\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$comments_pb$FieldBehaviorComentsMessagePost\\" }
});
export const FieldBehaviorComentsMessageInput = inputObjectType({
    name: \\"FieldBehaviorComentsMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"requiredInputOnlyField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required. Input only.\\"
        });
        t.field(\\"inputOnlyRequiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only. Required.\\"
        });
        t.field(\\"inputOnlyField\\", {
            type: nullable(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only.\\"
        });
    }
});
export const FieldBehaviorComentsMessagePostInput = inputObjectType({
    name: \\"FieldBehaviorComentsMessagePostInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`field_behavior with protobufjs generates nexus DSLs: field_behavior/comments_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/field_behavior/comments.proto

import { objectType, inputObjectType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$field_behavior from \\"./testapis/field_behavior\\";
export type _$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessage = _$testapis$field_behavior.testapis.deprecation.IFieldBehaviorComentsMessage;
export type _$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessagePost = _$testapis$field_behavior.testapis.deprecation.FieldBehaviorComentsMessage.IPost;
export const FieldBehaviorComentsMessage = objectType({
    name: \\"FieldBehaviorComentsMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required.\\",
            resolve(root) {
                return root.requiredField!;
            }
        });
        t.field(\\"requiredOutputOnlyField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Required. Output only.\\",
            resolve(root) {
                return root.requiredOutputOnlyField!;
            }
        });
        t.field(\\"outputOnlyRequiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only. Required.\\",
            resolve(root) {
                return root.outputOnlyRequiredField!;
            }
        });
        t.field(\\"outputOnlyField\\", {
            type: nullable(\\"FieldBehaviorComentsMessagePost\\"),
            description: \\"Output only.\\",
            resolve(root) {
                return root.outputOnlyField ?? null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessage\\" }
});
export const FieldBehaviorComentsMessagePost = objectType({
    name: \\"FieldBehaviorComentsMessagePost\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$field_behavior$testapis$deprecation$FieldBehaviorComentsMessagePost\\" }
});
export const FieldBehaviorComentsMessageInput = inputObjectType({
    name: \\"FieldBehaviorComentsMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"requiredInputOnlyField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Required. Input only.\\"
        });
        t.field(\\"inputOnlyRequiredField\\", {
            type: nonNull(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only. Required.\\"
        });
        t.field(\\"inputOnlyField\\", {
            type: nullable(\\"FieldBehaviorComentsMessagePostInput\\"),
            description: \\"Input only.\\"
        });
    }
});
export const FieldBehaviorComentsMessagePostInput = inputObjectType({
    name: \\"FieldBehaviorComentsMessagePostInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`multipkgs with native protobuf generates nexus DSLs: multipkgs/subpkg1/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg1/types.proto

import { objectType, inputObjectType, enumType, nonNull } from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1$types_pb from \\"./testapis/multipkgs/subpkg1/types_pb\\";
export type _$testapis$multipkgs$subpkg1$types_pb$SubpkgMessage = _$testapis$multipkgs$subpkg1$types_pb.SubpkgMessage;
export const SubpkgMessage = objectType({
    name: \\"SubpkgMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg1$types_pb$SubpkgMessage\\" }
});
export const SubpkgMessageInput = inputObjectType({
    name: \\"SubpkgMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const SubpkgEnum = enumType({
    name: \\"SubpkgEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`multipkgs with native protobuf generates nexus DSLs: multipkgs/subpkg2/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg2/types.proto

import { objectType, inputObjectType, nullable } from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg2$types_pb from \\"./testapis/multipkgs/subpkg2/types_pb\\";
import * as _$testapis$multipkgs$subpkg1$types_pb from \\"./testapis/multipkgs/subpkg1/types_pb\\";
export type _$testapis$multipkgs$subpkg2$types_pb$MessageWithSubpkg = _$testapis$multipkgs$subpkg2$types_pb.MessageWithSubpkg;
export const MessageWithSubpkg = objectType({
    name: \\"MessageWithSubpkg\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nullable(\\"SubpkgMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.getMessage() ?? null;
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"SubpkgEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$multipkgs$subpkg1$types_pb.SubpkgEnum.SUBPKG_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg2$types_pb$MessageWithSubpkg\\" }
});
export const MessageWithSubpkgInput = inputObjectType({
    name: \\"MessageWithSubpkgInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nullable(\\"SubpkgMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"SubpkgEnum\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`multipkgs with protobufjs generates nexus DSLs: multipkgs/subpkg1/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg1/types.proto

import { objectType, inputObjectType, enumType, nonNull } from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg1 from \\"./testapis/multipkgs/subpkg1\\";
export type _$testapis$multipkgs$subpkg1$testapis$multipkgs$subpkg1$SubpkgMessage = _$testapis$multipkgs$subpkg1.testapis.multipkgs.subpkg1.ISubpkgMessage;
export const SubpkgMessage = objectType({
    name: \\"SubpkgMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg1$testapis$multipkgs$subpkg1$SubpkgMessage\\" }
});
export const SubpkgMessageInput = inputObjectType({
    name: \\"SubpkgMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const SubpkgEnum = enumType({
    name: \\"SubpkgEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`multipkgs with protobufjs generates nexus DSLs: multipkgs/subpkg2/types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/multipkgs/subpkg2/types.proto

import { objectType, inputObjectType, nullable } from \\"nexus\\";
import * as _$testapis$multipkgs$subpkg2 from \\"./testapis/multipkgs/subpkg2\\";
import * as _$testapis$multipkgs$subpkg1 from \\"./testapis/multipkgs/subpkg1\\";
export type _$testapis$multipkgs$subpkg2$testapis$multipkgs$subpkg1$MessageWithSubpkg = _$testapis$multipkgs$subpkg2.testapis.multipkgs.subpkg1.IMessageWithSubpkg;
export const MessageWithSubpkg = objectType({
    name: \\"MessageWithSubpkg\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nullable(\\"SubpkgMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.message ?? null;
            }
        });
        t.field(\\"enum\\", {
            type: nullable(\\"SubpkgEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$multipkgs$subpkg1.testapis.multipkgs.subpkg1.SubpkgEnum.SUBPKG_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$multipkgs$subpkg2$testapis$multipkgs$subpkg1$MessageWithSubpkg\\" }
});
export const MessageWithSubpkgInput = inputObjectType({
    name: \\"MessageWithSubpkgInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"message\\", {
            type: nullable(\\"SubpkgMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"enum\\", {
            type: nullable(\\"SubpkgEnum\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`nested protobuf types with native protobuf generates nexus DSLs: nested/nested_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/nested/nested.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$nested$nested_pb from \\"./testapis/nested/nested_pb\\";
export type _$testapis$nested$nested_pb$ParentMessage = _$testapis$nested$nested_pb.ParentMessage;
export type _$testapis$nested$nested_pb$ParentMessageNestedMessage = _$testapis$nested$nested_pb.ParentMessage.NestedMessage;
export const ParentMessage = objectType({
    name: \\"ParentMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"nested\\", {
            type: nullable(\\"ParentMessageNestedMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.getNested() ?? null;
            }
        });
        t.field(\\"nestedEnum\\", {
            type: nullable(\\"ParentMessageNestedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.getNestedEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$nested$nested_pb.ParentMessage.NestedEnum.NESTED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$nested_pb$ParentMessage\\" }
});
export const ParentMessageNestedMessage = objectType({
    name: \\"ParentMessageNestedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getNestedBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$nested_pb$ParentMessageNestedMessage\\" }
});
export const ParentMessageInput = inputObjectType({
    name: \\"ParentMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"nested\\", {
            type: nullable(\\"ParentMessageNestedMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"nestedEnum\\", {
            type: nullable(\\"ParentMessageNestedEnum\\"),
            description: \\"\\"
        });
    }
});
export const ParentMessageNestedMessageInput = inputObjectType({
    name: \\"ParentMessageNestedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const ParentMessageNestedEnum = enumType({
    name: \\"ParentMessageNestedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`nested protobuf types with protobufjs generates nexus DSLs: nested/nested_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/nested/nested.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$nested from \\"./testapis/nested\\";
export type _$testapis$nested$testapis$nested$ParentMessage = _$testapis$nested.testapis.nested.IParentMessage;
export type _$testapis$nested$testapis$nested$ParentMessageNestedMessage = _$testapis$nested.testapis.nested.ParentMessage.INestedMessage;
export const ParentMessage = objectType({
    name: \\"ParentMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"nested\\", {
            type: nullable(\\"ParentMessageNestedMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.nested ?? null;
            }
        });
        t.field(\\"nestedEnum\\", {
            type: nullable(\\"ParentMessageNestedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.nestedEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$nested.testapis.nested.ParentMessage.NestedEnum.NESTED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$testapis$nested$ParentMessage\\" }
});
export const ParentMessageNestedMessage = objectType({
    name: \\"ParentMessageNestedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.nestedBody!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$nested$testapis$nested$ParentMessageNestedMessage\\" }
});
export const ParentMessageInput = inputObjectType({
    name: \\"ParentMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"nested\\", {
            type: nullable(\\"ParentMessageNestedMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"nestedEnum\\", {
            type: nullable(\\"ParentMessageNestedEnum\\"),
            description: \\"\\"
        });
    }
});
export const ParentMessageNestedMessageInput = inputObjectType({
    name: \\"ParentMessageNestedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"nestedBody\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const ParentMessageNestedEnum = enumType({
    name: \\"ParentMessageNestedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"FOO\\",
            value: 1
        },
        {
            name: \\"BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf custom options with native protobuf generates nexus DSLs: extensions/extensions_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/extensions.proto

import { objectType, inputObjectType, enumType, unionType, list, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$extensions$extensions_pb from \\"./testapis/extensions/extensions_pb\\";
export type _$testapis$extensions$extensions_pb$TestPrefixBatchGetPrefixedMessagesRequest = _$testapis$extensions$extensions_pb.BatchGetPrefixedMessagesRequest;
export type _$testapis$extensions$extensions_pb$TestPrefixBatchGetPrefixedMessagesResponse = _$testapis$extensions$extensions_pb.BatchGetPrefixedMessagesResponse;
export type _$testapis$extensions$extensions_pb$TestPrefixCreatePrefixedMessageRequest = _$testapis$extensions$extensions_pb.CreatePrefixedMessageRequest;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessage = _$testapis$extensions$extensions_pb.PrefixedMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixIgnoredMessage = _$testapis$extensions$extensions_pb.IgnoredMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixInputOnlyMessage = _$testapis$extensions$extensions_pb.InputOnlyMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixOutputOnlyMessage = _$testapis$extensions$extensions_pb.OutputOnlyMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage = _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage2 = _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage2;
export type _$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageSquashedMessage = _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage;
export const TestPrefixPrefixedMessageSquashedMessage = unionType({
    name: \\"TestPrefixPrefixedMessageSquashedMessage\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\", \\"TestPrefixPrefixedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item instanceof _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage) {
            return \\"TestPrefixPrefixedMessageInnerMessage\\";
        }
        if (item instanceof _$testapis$extensions$extensions_pb.PrefixedMessage.InnerMessage2) {
            return \\"TestPrefixPrefixedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    }
});
export const TestPrefixPrefixedMessage = objectType({
    name: \\"TestPrefixPrefixedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nonNull(\\"String\\"),
            description: \\"Output only.\\",
            resolve(root) {
                return root.getId().toString();
            }
        });
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.getPrefixedEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions$extensions_pb.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"outputOnlyMessage\\", {
            type: nullable(\\"TestPrefixOutputOnlyMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.getOutputOnlyMessage() ?? null;
            }
        });
        t.field(\\"squashedMessage\\", {
            type: nullable(\\"TestPrefixPrefixedMessageSquashedMessage\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.getSquashedMessage();
                if (value == null) {
                    return null;
                }
                switch (value.getSquashedMessageCase()) {
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.SQUASHED_MESSAGE_NOT_SET: {
                        return null;
                    }
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.ONEOF_IGNORED_FIELD: {
                        return value.getOneofIgnoredField()!;
                    }
                    case _$testapis$extensions$extensions_pb.PrefixedMessage.SquashedMessage.SquashedMessageCase.ONEOF_IGNORED_FIELD_2: {
                        return value.getOneofIgnoredField2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessage\\" }
});
export const TestPrefixOutputOnlyMessage = objectType({
    name: \\"TestPrefixOutputOnlyMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.getPrefixedEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions$extensions_pb.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixOutputOnlyMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage = objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage2 = objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$extensions_pb$TestPrefixPrefixedMessageInnerMessage2\\" }
});
export const TestPrefixPrefixedMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\"
        });
        t.field(\\"inputOnlyMessage\\", {
            type: nullable(\\"TestPrefixInputOnlyMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"squashedMessage\\", {
            type: nullable(\\"TestPrefixPrefixedMessageSquashedMessageInput\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixInputOnlyMessageInput = inputObjectType({
    name: \\"TestPrefixInputOnlyMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessage2Input = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageSquashedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"oneofIgnoredField\\", {
            type: nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"oneofIgnoredField2\\", {
            type: nullable(\\"TestPrefixPrefixedMessageInnerMessage2Input\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedEnum = enumType({
    name: \\"TestPrefixPrefixedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"PREFIXED_FOO\\",
            value: 1
        },
        {
            name: \\"PREFIXED_BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf custom options with protobufjs generates nexus DSLs: extensions/extensions_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/extensions.proto

import { objectType, inputObjectType, enumType, unionType, list, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$extensions from \\"./testapis/extensions\\";
export type _$testapis$extensions$testapis$extensions$TestPrefixBatchGetPrefixedMessagesRequest = _$testapis$extensions.testapis.extensions.IBatchGetPrefixedMessagesRequest;
export type _$testapis$extensions$testapis$extensions$TestPrefixBatchGetPrefixedMessagesResponse = _$testapis$extensions.testapis.extensions.IBatchGetPrefixedMessagesResponse;
export type _$testapis$extensions$testapis$extensions$TestPrefixCreatePrefixedMessageRequest = _$testapis$extensions.testapis.extensions.ICreatePrefixedMessageRequest;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage = _$testapis$extensions.testapis.extensions.IPrefixedMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixIgnoredMessage = _$testapis$extensions.testapis.extensions.IIgnoredMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixInputOnlyMessage = _$testapis$extensions.testapis.extensions.IInputOnlyMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixOutputOnlyMessage = _$testapis$extensions.testapis.extensions.IOutputOnlyMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage = _$testapis$extensions.testapis.extensions.PrefixedMessage.IInnerMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2 = _$testapis$extensions.testapis.extensions.PrefixedMessage.IInnerMessage2;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageSquashedMessage = _$testapis$extensions.testapis.extensions.PrefixedMessage.ISquashedMessage;
export type _$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageSquashedMessage_squashed_message = (_$testapis$extensions.testapis.extensions.PrefixedMessage.IInnerMessage & {
    __protobufTypeName: \\"testapis.extensions.PrefixedMessage.InnerMessage\\";
}) | (_$testapis$extensions.testapis.extensions.PrefixedMessage.IInnerMessage2 & {
    __protobufTypeName: \\"testapis.extensions.PrefixedMessage.InnerMessage2\\";
});
export const TestPrefixPrefixedMessageSquashedMessage = unionType({
    name: \\"TestPrefixPrefixedMessageSquashedMessage\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"TestPrefixPrefixedMessageInnerMessage\\", \\"TestPrefixPrefixedMessageInnerMessage2\\");
    },
    resolveType(item) {
        if (item.__protobufTypeName === \\"testapis.extensions.PrefixedMessage.InnerMessage\\") {
            return \\"TestPrefixPrefixedMessageInnerMessage\\";
        }
        if (item.__protobufTypeName === \\"testapis.extensions.PrefixedMessage.InnerMessage2\\") {
            return \\"TestPrefixPrefixedMessageInnerMessage2\\";
        }
        throw \\"unreachable\\";
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageSquashedMessage_squashed_message\\" }
});
export const TestPrefixPrefixedMessage = objectType({
    name: \\"TestPrefixPrefixedMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"id\\", {
            type: nonNull(\\"String\\"),
            description: \\"Output only.\\",
            resolve(root) {
                return root.id!.toString();
            }
        });
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.prefixedEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions.testapis.extensions.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"outputOnlyMessage\\", {
            type: nullable(\\"TestPrefixOutputOnlyMessage\\"),
            description: \\"\\",
            resolve(root) {
                return root.outputOnlyMessage ?? null;
            }
        });
        t.field(\\"squashedMessage\\", {
            type: nullable(\\"TestPrefixPrefixedMessageSquashedMessage\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.squashedMessage;
                if (value == null) {
                    return null;
                }
                if (value.oneofIgnoredField) {
                    return Object.assign(value.oneofIgnoredField, { __protobufTypeName: (\\"testapis.extensions.PrefixedMessage.InnerMessage\\" as const) });
                }
                if (value.oneofIgnoredField_2) {
                    return Object.assign(value.oneofIgnoredField_2, { __protobufTypeName: (\\"testapis.extensions.PrefixedMessage.InnerMessage2\\" as const) });
                }
                return null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage\\" }
});
export const TestPrefixOutputOnlyMessage = objectType({
    name: \\"TestPrefixOutputOnlyMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\",
            resolve(root) {
                const value = root.prefixedEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$extensions.testapis.extensions.PrefixedEnum.PREFIXED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixOutputOnlyMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage = objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage\\" }
});
export const TestPrefixPrefixedMessageInnerMessage2 = objectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2\\" }
});
export const TestPrefixPrefixedMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\"
        });
        t.field(\\"inputOnlyMessage\\", {
            type: nullable(\\"TestPrefixInputOnlyMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"squashedMessage\\", {
            type: nullable(\\"TestPrefixPrefixedMessageSquashedMessageInput\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixInputOnlyMessageInput = inputObjectType({
    name: \\"TestPrefixInputOnlyMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"prefixedEnum\\", {
            type: nullable(\\"TestPrefixPrefixedEnum\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageInnerMessage2Input = inputObjectType({
    name: \\"TestPrefixPrefixedMessageInnerMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedMessageSquashedMessageInput = inputObjectType({
    name: \\"TestPrefixPrefixedMessageSquashedMessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"oneofIgnoredField\\", {
            type: nullable(\\"TestPrefixPrefixedMessageInnerMessageInput\\"),
            description: \\"\\"
        });
        t.field(\\"oneofIgnoredField2\\", {
            type: nullable(\\"TestPrefixPrefixedMessageInnerMessage2Input\\"),
            description: \\"\\"
        });
    }
});
export const TestPrefixPrefixedEnum = enumType({
    name: \\"TestPrefixPrefixedEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"PREFIXED_FOO\\",
            value: 1
        },
        {
            name: \\"PREFIXED_BAR\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf enums with native protobuf generates nexus DSLs: enums/enums_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/enums/enums.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$enums$enums_pb from \\"./testapis/enums/enums_pb\\";
export type _$testapis$enums$enums_pb$MessageWithEnums = _$testapis$enums$enums_pb.MessageWithEnums;
export const MessageWithEnums = objectType({
    name: \\"MessageWithEnums\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nonNull(\\"MyEnum\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = (root.getRequiredMyEnum()!);
                if (value == null) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.\\");
                }
                if (value === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnum\\", {
            type: nullable(\\"MyEnum\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnum();
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$enums$enums_pb.MyEnum.MY_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = (root.getRequiredMyEnumWithoutUnspecified()!);
                if (value == null) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnumWithoutUnspecified is required field. But got null or unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.getOptionalMyEnumWithoutUnspecified();
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$enums$enums_pb$MessageWithEnums\\" }
});
export const MessageWithEnumsInput = inputObjectType({
    name: \\"MessageWithEnumsInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nonNull(\\"MyEnum\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnum\\", {
            type: nullable(\\"MyEnum\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\"
        });
    }
});
export const MyEnum = enumType({
    name: \\"MyEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"MY_ENUM_FOO\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_BAR\\",
            description: \\"This is Bar.\\",
            value: 2
        },
        {
            name: \\"MY_ENUM_BAZ\\",
            value: 3
        }
    ]
});
export const MyEnumWithoutUnspecified = enumType({
    name: \\"MyEnumWithoutUnspecified\\",
    description: \\"\\",
    members: [
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_FOO\\",
            value: 0
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAR\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAZ\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf enums with protobufjs generates nexus DSLs: enums/enums_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/enums/enums.proto

import { objectType, inputObjectType, enumType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$enums from \\"./testapis/enums\\";
export type _$testapis$enums$testapi$enums$MessageWithEnums = _$testapis$enums.testapi.enums.IMessageWithEnums;
export const MessageWithEnums = objectType({
    name: \\"MessageWithEnums\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nonNull(\\"MyEnum\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = (root.requiredMyEnum!);
                if (value == null) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.\\");
                }
                if (value === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnum is required field. But got null or unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnum\\", {
            type: nullable(\\"MyEnum\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnum;
                if (value == null) {
                    return null;
                }
                if (value === _$testapis$enums.testapi.enums.MyEnum.MY_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            }
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\",
            resolve(root) {
                const value = (root.requiredMyEnumWithoutUnspecified!);
                if (value == null) {
                    throw new Error(\\"MessageWithEnums.requiredMyEnumWithoutUnspecified is required field. But got null or unspecified.\\");
                }
                return value;
            }
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\",
            resolve(root) {
                const value = root.optionalMyEnumWithoutUnspecified;
                if (value == null) {
                    return null;
                }
                return value;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$enums$testapi$enums$MessageWithEnums\\" }
});
export const MessageWithEnumsInput = inputObjectType({
    name: \\"MessageWithEnumsInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredMyEnum\\", {
            type: nonNull(\\"MyEnum\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnum\\", {
            type: nullable(\\"MyEnum\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredMyEnumWithoutUnspecified\\", {
            type: nonNull(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalMyEnumWithoutUnspecified\\", {
            type: nullable(\\"MyEnumWithoutUnspecified\\"),
            description: \\"Optional.\\"
        });
    }
});
export const MyEnum = enumType({
    name: \\"MyEnum\\",
    description: \\"\\",
    members: [
        {
            name: \\"MY_ENUM_FOO\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_BAR\\",
            description: \\"This is Bar.\\",
            value: 2
        },
        {
            name: \\"MY_ENUM_BAZ\\",
            value: 3
        }
    ]
});
export const MyEnumWithoutUnspecified = enumType({
    name: \\"MyEnumWithoutUnspecified\\",
    description: \\"\\",
    members: [
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_FOO\\",
            value: 0
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAR\\",
            value: 1
        },
        {
            name: \\"MY_ENUM_WITHOUT_UNSPECIFIED_BAZ\\",
            value: 2
        }
    ]
});
"
`;

exports[`protobuf oneof with native protobuf generates nexus DSLs: oneof/oneof_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/oneof/oneof.proto

import { objectType, inputObjectType, unionType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$oneof$oneof_pb from \\"./testapis/oneof/oneof_pb\\";
export type _$testapis$oneof$oneof_pb$OneofParent = _$testapis$oneof$oneof_pb.OneofParent;
export type _$testapis$oneof$oneof_pb$OneofMemberMessage1 = _$testapis$oneof$oneof_pb.OneofMemberMessage1;
export type _$testapis$oneof$oneof_pb$OneofMemberMessage2 = _$testapis$oneof$oneof_pb.OneofMemberMessage2;
export const OneofParentRequiredOneofMembers = unionType({
    name: \\"OneofParentRequiredOneofMembers\\",
    description: \\"Required. disallow not_set.\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    },
    resolveType(item) {
        if (item instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage1) {
            return \\"OneofMemberMessage1\\";
        }
        if (item instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage2) {
            return \\"OneofMemberMessage2\\";
        }
        throw \\"unreachable\\";
    }
});
export const OneofParentOptionalOneofMembers = unionType({
    name: \\"OneofParentOptionalOneofMembers\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    },
    resolveType(item) {
        if (item instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage1) {
            return \\"OneofMemberMessage1\\";
        }
        if (item instanceof _$testapis$oneof$oneof_pb.OneofMemberMessage2) {
            return \\"OneofMemberMessage2\\";
        }
        throw \\"unreachable\\";
    }
});
export const OneofParent = objectType({
    name: \\"OneofParent\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getNormalField();
            }
        });
        t.field(\\"required_oneof_members\\", {
            type: nonNull(\\"OneofParentRequiredOneofMembers\\"),
            description: \\"Required. disallow not_set.\\",
            resolve(root) {
                switch (root.getRequiredOneofMembersCase()) {
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_ONEOF_MEMBERS_NOT_SET: {
                        throw \\"unreachable\\";
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_MESSAGE_1: {
                        return root.getRequiredMessage1()!;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.RequiredOneofMembersCase.REQUIRED_MESSAGE_2: {
                        return root.getRequiredMessage2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
        t.field(\\"optional_oneof_members\\", {
            type: nullable(\\"OneofParentOptionalOneofMembers\\"),
            description: \\"\\",
            resolve(root) {
                switch (root.getOptionalOneofMembersCase()) {
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTIONAL_ONEOF_MEMBERS_NOT_SET: {
                        return null;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTOINAL_MESSAGE_1: {
                        return root.getOptoinalMessage1()!;
                    }
                    case _$testapis$oneof$oneof_pb.OneofParent.OptionalOneofMembersCase.OPTOINAL_MESSAGE_2: {
                        return root.getOptoinalMessage2()!;
                    }
                    default: {
                        throw \\"unreachable\\";
                    }
                }
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofParent\\" }
});
export const OneofMemberMessage1 = objectType({
    name: \\"OneofMemberMessage1\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getBody();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofMemberMessage1\\" }
});
export const OneofMemberMessage2 = objectType({
    name: \\"OneofMemberMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getImageUrl();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$oneof_pb$OneofMemberMessage2\\" }
});
export const OneofParentInput = inputObjectType({
    name: \\"OneofParentInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredMessage1\\", {
            type: nullable(\\"OneofMemberMessage1Input\\"),
            description: \\"\\"
        });
        t.field(\\"requiredMessage2\\", {
            type: nullable(\\"OneofMemberMessage2Input\\"),
            description: \\"\\"
        });
        t.field(\\"optoinalMessage1\\", {
            type: nullable(\\"OneofMemberMessage1Input\\"),
            description: \\"\\"
        });
        t.field(\\"optoinalMessage2\\", {
            type: nullable(\\"OneofMemberMessage2Input\\"),
            description: \\"\\"
        });
    }
});
export const OneofMemberMessage1Input = inputObjectType({
    name: \\"OneofMemberMessage1Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const OneofMemberMessage2Input = inputObjectType({
    name: \\"OneofMemberMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`protobuf oneof with protobufjs generates nexus DSLs: oneof/oneof_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/oneof/oneof.proto

import { objectType, inputObjectType, unionType, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$oneof from \\"./testapis/oneof\\";
export type _$testapis$oneof$testapis$oneof$OneofParent = _$testapis$oneof.testapis.oneof.IOneofParent;
export type _$testapis$oneof$testapis$oneof$OneofMemberMessage1 = _$testapis$oneof.testapis.oneof.IOneofMemberMessage1;
export type _$testapis$oneof$testapis$oneof$OneofMemberMessage2 = _$testapis$oneof.testapis.oneof.IOneofMemberMessage2;
export type _$testapis$oneof$testapis$oneof$OneofParent_required_oneof_members = (_$testapis$oneof.testapis.oneof.IOneofMemberMessage1 & {
    __protobufTypeName: \\"testapis.oneof.OneofMemberMessage1\\";
}) | (_$testapis$oneof.testapis.oneof.IOneofMemberMessage2 & {
    __protobufTypeName: \\"testapis.oneof.OneofMemberMessage2\\";
});
export type _$testapis$oneof$testapis$oneof$OneofParent_optional_oneof_members = (_$testapis$oneof.testapis.oneof.IOneofMemberMessage1 & {
    __protobufTypeName: \\"testapis.oneof.OneofMemberMessage1\\";
}) | (_$testapis$oneof.testapis.oneof.IOneofMemberMessage2 & {
    __protobufTypeName: \\"testapis.oneof.OneofMemberMessage2\\";
});
export const OneofParentRequiredOneofMembers = unionType({
    name: \\"OneofParentRequiredOneofMembers\\",
    description: \\"Required. disallow not_set.\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    },
    resolveType(item) {
        if (item.__protobufTypeName === \\"testapis.oneof.OneofMemberMessage1\\") {
            return \\"OneofMemberMessage1\\";
        }
        if (item.__protobufTypeName === \\"testapis.oneof.OneofMemberMessage2\\") {
            return \\"OneofMemberMessage2\\";
        }
        throw \\"unreachable\\";
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofParent_required_oneof_members\\" }
});
export const OneofParentOptionalOneofMembers = unionType({
    name: \\"OneofParentOptionalOneofMembers\\",
    description: \\"\\",
    definition(t) {
        t.members(\\"OneofMemberMessage1\\", \\"OneofMemberMessage2\\");
    },
    resolveType(item) {
        if (item.__protobufTypeName === \\"testapis.oneof.OneofMemberMessage1\\") {
            return \\"OneofMemberMessage1\\";
        }
        if (item.__protobufTypeName === \\"testapis.oneof.OneofMemberMessage2\\") {
            return \\"OneofMemberMessage2\\";
        }
        throw \\"unreachable\\";
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofParent_optional_oneof_members\\" }
});
export const OneofParent = objectType({
    name: \\"OneofParent\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.normalField!;
            }
        });
        t.field(\\"required_oneof_members\\", {
            type: nonNull(\\"OneofParentRequiredOneofMembers\\"),
            description: \\"Required. disallow not_set.\\",
            resolve(root) {
                if (root.requiredMessage1) {
                    return Object.assign(root.requiredMessage1, { __protobufTypeName: (\\"testapis.oneof.OneofMemberMessage1\\" as const) });
                }
                if (root.requiredMessage2) {
                    return Object.assign(root.requiredMessage2, { __protobufTypeName: (\\"testapis.oneof.OneofMemberMessage2\\" as const) });
                }
                throw \\"unreachable\\";
            }
        });
        t.field(\\"optional_oneof_members\\", {
            type: nullable(\\"OneofParentOptionalOneofMembers\\"),
            description: \\"\\",
            resolve(root) {
                if (root.optoinalMessage1) {
                    return Object.assign(root.optoinalMessage1, { __protobufTypeName: (\\"testapis.oneof.OneofMemberMessage1\\" as const) });
                }
                if (root.optoinalMessage2) {
                    return Object.assign(root.optoinalMessage2, { __protobufTypeName: (\\"testapis.oneof.OneofMemberMessage2\\" as const) });
                }
                return null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofParent\\" }
});
export const OneofMemberMessage1 = objectType({
    name: \\"OneofMemberMessage1\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.body!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofMemberMessage1\\" }
});
export const OneofMemberMessage2 = objectType({
    name: \\"OneofMemberMessage2\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.imageUrl!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$oneof$testapis$oneof$OneofMemberMessage2\\" }
});
export const OneofParentInput = inputObjectType({
    name: \\"OneofParentInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"normalField\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredMessage1\\", {
            type: nullable(\\"OneofMemberMessage1Input\\"),
            description: \\"\\"
        });
        t.field(\\"requiredMessage2\\", {
            type: nullable(\\"OneofMemberMessage2Input\\"),
            description: \\"\\"
        });
        t.field(\\"optoinalMessage1\\", {
            type: nullable(\\"OneofMemberMessage1Input\\"),
            description: \\"\\"
        });
        t.field(\\"optoinalMessage2\\", {
            type: nullable(\\"OneofMemberMessage2Input\\"),
            description: \\"\\"
        });
    }
});
export const OneofMemberMessage1Input = inputObjectType({
    name: \\"OneofMemberMessage1Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"body\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
export const OneofMemberMessage2Input = inputObjectType({
    name: \\"OneofMemberMessage2Input\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"imageUrl\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`simple proto file with native protobuf generates nexus DSLs: hello/hello_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/hello/hello.proto

import { objectType, inputObjectType, list, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$hello$hello_pb from \\"./testapis/hello/hello_pb\\";
export type _$testapis$hello$hello_pb$Hello = _$testapis$hello$hello_pb.Hello;
export type _$testapis$hello$hello_pb$Primitives = _$testapis$hello$hello_pb.Primitives;
export const Hello = objectType({
    name: \\"Hello\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nonNull(\\"Primitives\\"),
            description: \\"Required.\\",
            resolve(root) {
                return root.getRequiredPrimitives()!;
            }
        });
        t.field(\\"optionalPrimitives\\", {
            type: nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                return root.getOptionalPrimitives() ?? null;
            }
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: list(nonNull(\\"Primitives\\")),
            description: \\"Required.\\",
            resolve(root) {
                return root.getRequiredPrimitivesListList()!;
            }
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                return root.getOptionalPrimitivesList() ?? null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$hello_pb$Hello\\" }
});
export const Primitives = objectType({
    name: \\"Primitives\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredDoubleValue();
            }
        });
        t.field(\\"requiredFloatValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredFloatValue();
            }
        });
        t.field(\\"requiredInt32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredInt32Value();
            }
        });
        t.field(\\"requiredInt64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredInt64Value().toString();
            }
        });
        t.field(\\"requiredUint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredUint32Value();
            }
        });
        t.field(\\"requiredUint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredUint64Value().toString();
            }
        });
        t.field(\\"requiredSint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredSint32Value();
            }
        });
        t.field(\\"requiredSint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredSint64Value().toString();
            }
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredFixed32Value();
            }
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredFixed64Value().toString();
            }
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredSfixed32Value();
            }
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredSfixed64Value().toString();
            }
        });
        t.field(\\"requiredBoolValue\\", {
            type: nonNull(\\"Boolean\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredBoolValue();
            }
        });
        t.field(\\"requiredStringValue\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.getRequiredStringValue();
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$hello_pb$Primitives\\" }
});
export const HelloInput = inputObjectType({
    name: \\"HelloInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nonNull(\\"PrimitivesInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitives\\", {
            type: nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: list(nonNull(\\"PrimitivesInput\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
    }
});
export const PrimitivesInput = inputObjectType({
    name: \\"PrimitivesInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFloatValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"requiredInt32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredInt64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredUint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredUint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredBoolValue\\", {
            type: nonNull(\\"Boolean\\"),
            description: \\"\\"
        });
        t.field(\\"requiredStringValue\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`simple proto file with protobufjs generates nexus DSLs: hello/hello_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/hello/hello.proto

import { objectType, inputObjectType, list, nullable, nonNull } from \\"nexus\\";
import * as _$testapis$hello from \\"./testapis/hello\\";
export type _$testapis$hello$testapis$hello$Hello = _$testapis$hello.testapis.hello.IHello;
export type _$testapis$hello$testapis$hello$Primitives = _$testapis$hello.testapis.hello.IPrimitives;
export const Hello = objectType({
    name: \\"Hello\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nonNull(\\"Primitives\\"),
            description: \\"Required.\\",
            resolve(root) {
                return root.requiredPrimitives!;
            }
        });
        t.field(\\"optionalPrimitives\\", {
            type: nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                return root.optionalPrimitives ?? null;
            }
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: list(nonNull(\\"Primitives\\")),
            description: \\"Required.\\",
            resolve(root) {
                return root.requiredPrimitivesList!;
            }
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nullable(\\"Primitives\\"),
            description: \\"Optional.\\",
            resolve(root) {
                return root.optionalPrimitivesList ?? null;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$testapis$hello$Hello\\" }
});
export const Primitives = objectType({
    name: \\"Primitives\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredDoubleValue!;
            }
        });
        t.field(\\"requiredFloatValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredFloatValue!;
            }
        });
        t.field(\\"requiredInt32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredInt32Value!;
            }
        });
        t.field(\\"requiredInt64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredInt64Value!.toString();
            }
        });
        t.field(\\"requiredUint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredUint32Value!;
            }
        });
        t.field(\\"requiredUint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredUint64Value!.toString();
            }
        });
        t.field(\\"requiredSint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredSint32Value!;
            }
        });
        t.field(\\"requiredSint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredSint64Value!.toString();
            }
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredFixed32Value!;
            }
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredFixed64Value!.toString();
            }
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredSfixed32Value!;
            }
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredSfixed64Value!.toString();
            }
        });
        t.field(\\"requiredBoolValue\\", {
            type: nonNull(\\"Boolean\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredBoolValue!;
            }
        });
        t.field(\\"requiredStringValue\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return root.requiredStringValue!;
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$hello$testapis$hello$Primitives\\" }
});
export const HelloInput = inputObjectType({
    name: \\"HelloInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredPrimitives\\", {
            type: nonNull(\\"PrimitivesInput\\"),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitives\\", {
            type: nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
        t.field(\\"requiredPrimitivesList\\", {
            type: list(nonNull(\\"PrimitivesInput\\")),
            description: \\"Required.\\"
        });
        t.field(\\"optionalPrimitivesList\\", {
            type: nullable(\\"PrimitivesInput\\"),
            description: \\"Optional.\\"
        });
    }
});
export const PrimitivesInput = inputObjectType({
    name: \\"PrimitivesInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"requiredDoubleValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFloatValue\\", {
            type: nonNull(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"requiredInt32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredInt64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredUint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredUint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSint32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSint64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredFixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSfixed32Value\\", {
            type: nonNull(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"requiredSfixed64Value\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"requiredBoolValue\\", {
            type: nonNull(\\"Boolean\\"),
            description: \\"\\"
        });
        t.field(\\"requiredStringValue\\", {
            type: nonNull(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`well-known protobuf types with native protobuf generates nexus DSLs: wktypes/well_known_types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/wktypes/well_known_types.proto

import { objectType, inputObjectType, nullable } from \\"nexus\\";
import * as $$proto_nexus$google_protobuf from \\"@proto-nexus/google-protobuf\\";
import * as _$testapis$wktypes$well_known_types_pb from \\"./testapis/wktypes/well_known_types_pb\\";
export type _$testapis$wktypes$well_known_types_pb$Message = _$testapis$wktypes$well_known_types_pb.Message;
export const Message = objectType({
    name: \\"Message\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nullable(\\"DateTime\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.timestampToDate(root.getTimestamp());
            }
        });
        t.field(\\"int32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapInt32Value(root.getInt32Value());
            }
        });
        t.field(\\"int64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapInt64Value(root.getInt64Value())?.toString() ?? null;
            }
        });
        t.field(\\"uint32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapUInt32Value(root.getUint32Value());
            }
        });
        t.field(\\"uint64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapUInt64Value(root.getUint64Value())?.toString() ?? null;
            }
        });
        t.field(\\"floatValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapFloatValue(root.getFloatValue());
            }
        });
        t.field(\\"doubleValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapDoubleValue(root.getDoubleValue());
            }
        });
        t.field(\\"boolValue\\", {
            type: nullable(\\"Boolean\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapBoolValue(root.getBoolValue());
            }
        });
        t.field(\\"stringValue\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$google_protobuf.unwrapStringValue(root.getStringValue());
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$wktypes$well_known_types_pb$Message\\" }
});
export const MessageInput = inputObjectType({
    name: \\"MessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nullable(\\"DateTime\\"),
            description: \\"\\"
        });
        t.field(\\"int32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"int64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"uint32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"uint64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"floatValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"doubleValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"boolValue\\", {
            type: nullable(\\"Boolean\\"),
            description: \\"\\"
        });
        t.field(\\"stringValue\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;

exports[`well-known protobuf types with protobufjs generates nexus DSLs: wktypes/well_known_types_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/wktypes/well_known_types.proto

import { objectType, inputObjectType, nullable } from \\"nexus\\";
import * as $$proto_nexus$protobufjs from \\"@proto-nexus/protobufjs\\";
import * as _$testapis$wktypes from \\"./testapis/wktypes\\";
export type _$testapis$wktypes$testapis$wktypes$Message = _$testapis$wktypes.testapis.wktypes.IMessage;
export const Message = objectType({
    name: \\"Message\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nullable(\\"DateTime\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.timestampToDate(root.timestamp);
            }
        });
        t.field(\\"int32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapInt32Value(root.int32Value);
            }
        });
        t.field(\\"int64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapInt64Value(root.int64Value)?.toString() ?? null;
            }
        });
        t.field(\\"uint32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapUInt32Value(root.uint32Value);
            }
        });
        t.field(\\"uint64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapUInt64Value(root.uint64Value)?.toString() ?? null;
            }
        });
        t.field(\\"floatValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapFloatValue(root.floatValue);
            }
        });
        t.field(\\"doubleValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapDoubleValue(root.doubleValue);
            }
        });
        t.field(\\"boolValue\\", {
            type: nullable(\\"Boolean\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapBoolValue(root.boolValue);
            }
        });
        t.field(\\"stringValue\\", {
            type: nullable(\\"String\\"),
            description: \\"\\",
            resolve(root) {
                return $$proto_nexus$protobufjs.unwrapStringValue(root.stringValue);
            }
        });
    },
    sourceType: { module: __filename, export: \\"_$testapis$wktypes$testapis$wktypes$Message\\" }
});
export const MessageInput = inputObjectType({
    name: \\"MessageInput\\",
    description: \\"\\",
    definition(t) {
        t.field(\\"timestamp\\", {
            type: nullable(\\"DateTime\\"),
            description: \\"\\"
        });
        t.field(\\"int32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"int64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"uint32Value\\", {
            type: nullable(\\"Int\\"),
            description: \\"\\"
        });
        t.field(\\"uint64Value\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
        t.field(\\"floatValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"doubleValue\\", {
            type: nullable(\\"Float\\"),
            description: \\"\\"
        });
        t.field(\\"boolValue\\", {
            type: nullable(\\"Boolean\\"),
            description: \\"\\"
        });
        t.field(\\"stringValue\\", {
            type: nullable(\\"String\\"),
            description: \\"\\"
        });
    }
});
"
`;
