/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { $$testapis$node_native$lib$$testapis$primitives$primitives_pb$Message, $$testapis$node_native$lib$$testapis$primitives$primitives_pb$Primitives } from "./../../__generated__/nexus/google-protobuf/testapis/primitives/primitives_pb_nexus"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MessageInput: { // input type
    optionalPrimitives?: NexusGenInputs['PrimitivesInput'] | null; // PrimitivesInput
    optionalPrimitivesList?: NexusGenInputs['PrimitivesInput'][] | null; // [PrimitivesInput!]
    requiredPrimitives: NexusGenInputs['PrimitivesInput']; // PrimitivesInput!
    requiredPrimitivesList: NexusGenInputs['PrimitivesInput'][]; // [PrimitivesInput!]!
  }
  PrimitivesInput: { // input type
    requiredBoolValue: boolean; // Boolean!
    requiredBoolValues: boolean[]; // [Boolean!]!
    requiredDoubleValue: number; // Float!
    requiredDoubleValues: number[]; // [Float!]!
    requiredFixed32Value: number; // Int!
    requiredFixed32Values: number[]; // [Int!]!
    requiredFixed64Value: string; // String!
    requiredFixed64Values: string[]; // [String!]!
    requiredFloatValue: number; // Float!
    requiredFloatValues: number[]; // [Float!]!
    requiredInt32Value: number; // Int!
    requiredInt32Values: number[]; // [Int!]!
    requiredInt64Value: string; // String!
    requiredInt64Values: string[]; // [String!]!
    requiredSfixed32Value: number; // Int!
    requiredSfixed32Values: number[]; // [Int!]!
    requiredSfixed64Value: string; // String!
    requiredSfixed64Values: string[]; // [String!]!
    requiredSint32Value: number; // Int!
    requiredSint32Values: number[]; // [Int!]!
    requiredSint64Value: string; // String!
    requiredSint64Values: string[]; // [String!]!
    requiredStringValue: string; // String!
    requiredStringValues: string[]; // [String!]!
    requiredUint32Value: number; // Int!
    requiredUint32Values: number[]; // [Int!]!
    requiredUint64Value: string; // String!
    requiredUint64Values: string[]; // [String!]!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Message: $$testapis$node_native$lib$$testapis$primitives$primitives_pb$Message;
  Primitives: $$testapis$node_native$lib$$testapis$primitives$primitives_pb$Primitives;
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Message: { // field return type
    optionalPrimitives: NexusGenRootTypes['Primitives'] | null; // Primitives
    optionalPrimitivesList: NexusGenRootTypes['Primitives'][] | null; // [Primitives!]
    requiredPrimitives: NexusGenRootTypes['Primitives']; // Primitives!
    requiredPrimitivesList: NexusGenRootTypes['Primitives'][]; // [Primitives!]!
  }
  Primitives: { // field return type
    requiredBoolValue: boolean; // Boolean!
    requiredBoolValues: boolean[]; // [Boolean!]!
    requiredDoubleValue: number; // Float!
    requiredDoubleValues: number[]; // [Float!]!
    requiredFixed32Value: number; // Int!
    requiredFixed32Values: number[]; // [Int!]!
    requiredFixed64Value: string; // String!
    requiredFixed64Values: string[]; // [String!]!
    requiredFloatValue: number; // Float!
    requiredFloatValues: number[]; // [Float!]!
    requiredInt32Value: number; // Int!
    requiredInt32Values: number[]; // [Int!]!
    requiredInt64Value: string; // String!
    requiredInt64Values: string[]; // [String!]!
    requiredSfixed32Value: number; // Int!
    requiredSfixed32Values: number[]; // [Int!]!
    requiredSfixed64Value: string; // String!
    requiredSfixed64Values: string[]; // [String!]!
    requiredSint32Value: number; // Int!
    requiredSint32Values: number[]; // [Int!]!
    requiredSint64Value: string; // String!
    requiredSint64Values: string[]; // [String!]!
    requiredStringValue: string; // String!
    requiredStringValues: string[]; // [String!]!
    requiredUint32Value: number; // Int!
    requiredUint32Values: number[]; // [Int!]!
    requiredUint64Value: string; // String!
    requiredUint64Values: string[]; // [String!]!
  }
  Query: { // field return type
    test: NexusGenRootTypes['Message'] | null; // Message
  }
}

export interface NexusGenFieldTypeNames {
  Message: { // field return type name
    optionalPrimitives: 'Primitives'
    optionalPrimitivesList: 'Primitives'
    requiredPrimitives: 'Primitives'
    requiredPrimitivesList: 'Primitives'
  }
  Primitives: { // field return type name
    requiredBoolValue: 'Boolean'
    requiredBoolValues: 'Boolean'
    requiredDoubleValue: 'Float'
    requiredDoubleValues: 'Float'
    requiredFixed32Value: 'Int'
    requiredFixed32Values: 'Int'
    requiredFixed64Value: 'String'
    requiredFixed64Values: 'String'
    requiredFloatValue: 'Float'
    requiredFloatValues: 'Float'
    requiredInt32Value: 'Int'
    requiredInt32Values: 'Int'
    requiredInt64Value: 'String'
    requiredInt64Values: 'String'
    requiredSfixed32Value: 'Int'
    requiredSfixed32Values: 'Int'
    requiredSfixed64Value: 'String'
    requiredSfixed64Values: 'String'
    requiredSint32Value: 'Int'
    requiredSint32Values: 'Int'
    requiredSint64Value: 'String'
    requiredSint64Values: 'String'
    requiredStringValue: 'String'
    requiredStringValues: 'String'
    requiredUint32Value: 'Int'
    requiredUint32Values: 'Int'
    requiredUint64Value: 'String'
    requiredUint64Values: 'String'
  }
  Query: { // field return type name
    test: 'Message'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = "Message" | "Primitives";

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: true
    __typename: false
    resolveType: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}