/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage, $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixRenamedMessage, $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage, $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2, $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixIgnoredMessageNotIgnored } from "./../../__generated__/nexus/protobufjs/testapis/extensions/extensions_pb_nexus"
import type { $$testapis$node$lib$$testapis$extensions$field_nullability$testapis$extensions$field_nullability$Message } from "./../../__generated__/nexus/protobufjs/testapis/extensions/field_nullability/nullability_pb_nexus"
import type { $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$ParentMessage, $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$PartialableInputMessage, $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$NoPartialInputMessage } from "./../../__generated__/nexus/protobufjs/testapis/extensions/no_partial/no_partial_pb_nexus"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MessageInput: { // input type
    body: string; // String!
    status?: NexusGenEnums['MessageStatus'] | null; // MessageStatus
    userId?: string | null; // String
  }
  NoPartialInputMessageInput: { // input type
    body: string; // String!
    id: string; // String!
  }
  ParentMessageInput: { // input type
    noPartialInputMessage: NexusGenInputs['NoPartialInputMessageInput']; // NoPartialInputMessageInput!
    partialableInputMessage: NexusGenInputs['PartialableInputMessageInput']; // PartialableInputMessageInput!
  }
  PartialableInputMessageInput: { // input type
    body: string; // String!
    id: string; // String!
  }
  TestPrefixIgnoredMessageNotIgnoredInput: { // input type
    body: string; // String!
  }
  TestPrefixInterfaceMessageInput: { // input type
    id: string; // String!
  }
  TestPrefixPrefixedMessageInnerMessage2Input: { // input type
    body: string; // String!
    id: string; // String!
  }
  TestPrefixPrefixedMessageInnerMessageInput: { // input type
    body: string; // String!
    id: string; // String!
  }
  TestPrefixPrefixedMessageInput: { // input type
    body: string; // String!
    notIgnoredMessage?: NexusGenInputs['TestPrefixIgnoredMessageNotIgnoredInput'] | null; // TestPrefixIgnoredMessageNotIgnoredInput
    oneofNotIgnoredField?: NexusGenInputs['TestPrefixPrefixedMessageInnerMessageInput'] | null; // TestPrefixPrefixedMessageInnerMessageInput
    prefixedEnum?: NexusGenEnums['TestPrefixPrefixedEnum'] | null; // TestPrefixPrefixedEnum
    renamedMessage?: NexusGenInputs['TestPrefixRenamedMessageInput'] | null; // TestPrefixRenamedMessageInput
    skipResolver: string; // String!
    squashedMessage?: NexusGenInputs['TestPrefixPrefixedMessageSquashedMessageInput'] | null; // TestPrefixPrefixedMessageSquashedMessageInput
    squashedMessages?: NexusGenInputs['TestPrefixPrefixedMessageSquashedMessageInput'][] | null; // [TestPrefixPrefixedMessageSquashedMessageInput!]
    thisFieldWasRenamed: string; // String!
  }
  TestPrefixPrefixedMessageSquashedMessageInput: { // input type
    oneofField?: NexusGenInputs['TestPrefixPrefixedMessageInnerMessageInput'] | null; // TestPrefixPrefixedMessageInnerMessageInput
    oneofField2?: NexusGenInputs['TestPrefixPrefixedMessageInnerMessage2Input'] | null; // TestPrefixPrefixedMessageInnerMessage2Input
  }
  TestPrefixRenamedMessageInput: { // input type
    body: string; // String!
  }
}

export interface NexusGenEnums {
  MessageStatus: 1 | 2
  TestPrefixInterfaceMessageType: 1 | 2
  TestPrefixPrefixedEnum: 2 | 1
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Message: $$testapis$node$lib$$testapis$extensions$field_nullability$testapis$extensions$field_nullability$Message;
  NoPartialInputMessage: $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$NoPartialInputMessage;
  ParentMessage: $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$ParentMessage;
  PartialableInputMessage: $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$PartialableInputMessage;
  Query: {};
  TestPrefixIgnoredMessageNotIgnored: $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixIgnoredMessageNotIgnored;
  TestPrefixPrefixedMessage: $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessage;
  TestPrefixPrefixedMessageInnerMessage: $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage;
  TestPrefixPrefixedMessageInnerMessage2: $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixPrefixedMessageInnerMessage2;
  TestPrefixRenamedMessage: $$testapis$node$lib$$testapis$extensions$testapis$extensions$TestPrefixRenamedMessage;
}

export interface NexusGenInterfaces {
  TestPrefixInterfaceMessage: NexusGenRootTypes['TestPrefixPrefixedMessageInnerMessage'] | NexusGenRootTypes['TestPrefixPrefixedMessageInnerMessage2'];
}

export interface NexusGenUnions {
  TestPrefixPrefixedMessagePartialIgnoreOneof: NexusGenRootTypes['TestPrefixPrefixedMessageInnerMessage'];
  TestPrefixPrefixedMessageSquashedMessage: NexusGenRootTypes['TestPrefixPrefixedMessageInnerMessage'] | NexusGenRootTypes['TestPrefixPrefixedMessageInnerMessage2'];
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Message: { // field return type
    body: string; // String!
    status: NexusGenEnums['MessageStatus'] | null; // MessageStatus
    userId: string; // String!
  }
  NoPartialInputMessage: { // field return type
    body: string; // String!
    id: string; // String!
  }
  ParentMessage: { // field return type
    noPartialInputMessage: NexusGenRootTypes['NoPartialInputMessage']; // NoPartialInputMessage!
    partialableInputMessage: NexusGenRootTypes['PartialableInputMessage']; // PartialableInputMessage!
  }
  PartialableInputMessage: { // field return type
    body: string; // String!
    id: string; // String!
  }
  Query: { // field return type
    testInterface: NexusGenRootTypes['TestPrefixPrefixedMessage']; // TestPrefixPrefixedMessage!
    testSkipResolver: NexusGenRootTypes['TestPrefixPrefixedMessage']; // TestPrefixPrefixedMessage!
    testSquashedUnion: NexusGenRootTypes['TestPrefixPrefixedMessage']; // TestPrefixPrefixedMessage!
  }
  TestPrefixIgnoredMessageNotIgnored: { // field return type
    body: string; // String!
  }
  TestPrefixPrefixedMessage: { // field return type
    body: string; // String!
    id: string; // String!
    interfaceMessage: NexusGenRootTypes['TestPrefixInterfaceMessage']; // TestPrefixInterfaceMessage!
    notIgnoredMessage: NexusGenRootTypes['TestPrefixIgnoredMessageNotIgnored'] | null; // TestPrefixIgnoredMessageNotIgnored
    partialIgnoreOneof: NexusGenRootTypes['TestPrefixPrefixedMessagePartialIgnoreOneof'] | null; // TestPrefixPrefixedMessagePartialIgnoreOneof
    prefixedEnum: NexusGenEnums['TestPrefixPrefixedEnum'] | null; // TestPrefixPrefixedEnum
    renamedMessage: NexusGenRootTypes['TestPrefixRenamedMessage'] | null; // TestPrefixRenamedMessage
    skipResolver: string; // String!
    squashedMessage: NexusGenRootTypes['TestPrefixPrefixedMessageSquashedMessage'] | null; // TestPrefixPrefixedMessageSquashedMessage
    squashedMessages: NexusGenRootTypes['TestPrefixPrefixedMessageSquashedMessage'][] | null; // [TestPrefixPrefixedMessageSquashedMessage!]
    thisFieldWasRenamed: string; // String!
  }
  TestPrefixPrefixedMessageInnerMessage: { // field return type
    body: string; // String!
    id: string; // String!
    skipResolver: string; // String!
  }
  TestPrefixPrefixedMessageInnerMessage2: { // field return type
    body: string; // String!
    id: string; // String!
  }
  TestPrefixRenamedMessage: { // field return type
    body: string; // String!
  }
  TestPrefixInterfaceMessage: { // field return type
    id: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Message: { // field return type name
    body: 'String'
    status: 'MessageStatus'
    userId: 'String'
  }
  NoPartialInputMessage: { // field return type name
    body: 'String'
    id: 'String'
  }
  ParentMessage: { // field return type name
    noPartialInputMessage: 'NoPartialInputMessage'
    partialableInputMessage: 'PartialableInputMessage'
  }
  PartialableInputMessage: { // field return type name
    body: 'String'
    id: 'String'
  }
  Query: { // field return type name
    testInterface: 'TestPrefixPrefixedMessage'
    testSkipResolver: 'TestPrefixPrefixedMessage'
    testSquashedUnion: 'TestPrefixPrefixedMessage'
  }
  TestPrefixIgnoredMessageNotIgnored: { // field return type name
    body: 'String'
  }
  TestPrefixPrefixedMessage: { // field return type name
    body: 'String'
    id: 'String'
    interfaceMessage: 'TestPrefixInterfaceMessage'
    notIgnoredMessage: 'TestPrefixIgnoredMessageNotIgnored'
    partialIgnoreOneof: 'TestPrefixPrefixedMessagePartialIgnoreOneof'
    prefixedEnum: 'TestPrefixPrefixedEnum'
    renamedMessage: 'TestPrefixRenamedMessage'
    skipResolver: 'String'
    squashedMessage: 'TestPrefixPrefixedMessageSquashedMessage'
    squashedMessages: 'TestPrefixPrefixedMessageSquashedMessage'
    thisFieldWasRenamed: 'String'
  }
  TestPrefixPrefixedMessageInnerMessage: { // field return type name
    body: 'String'
    id: 'String'
    skipResolver: 'String'
  }
  TestPrefixPrefixedMessageInnerMessage2: { // field return type name
    body: 'String'
    id: 'String'
  }
  TestPrefixRenamedMessage: { // field return type name
    body: 'String'
  }
  TestPrefixInterfaceMessage: { // field return type name
    id: 'String'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
  TestPrefixPrefixedMessagePartialIgnoreOneof: "TestPrefixPrefixedMessageInnerMessage"
  TestPrefixPrefixedMessageSquashedMessage: "TestPrefixPrefixedMessageInnerMessage" | "TestPrefixPrefixedMessageInnerMessage2"
  TestPrefixInterfaceMessage: "TestPrefixPrefixedMessageInnerMessage" | "TestPrefixPrefixedMessageInnerMessage2"
}

export interface NexusGenTypeInterfaces {
  TestPrefixPrefixedMessageInnerMessage: "TestPrefixInterfaceMessage"
  TestPrefixPrefixedMessageInnerMessage2: "TestPrefixInterfaceMessage"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = "Message" | "NoPartialInputMessage" | "ParentMessage" | "PartialableInputMessage" | "TestPrefixIgnoredMessageNotIgnored" | "TestPrefixPrefixedMessage" | "TestPrefixPrefixedMessageInnerMessage" | "TestPrefixPrefixedMessageInnerMessage2" | "TestPrefixRenamedMessage";

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: true
    __typename: false
    resolveType: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}