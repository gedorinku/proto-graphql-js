// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/deprecation.proto

/* eslint-disable */

import * as $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb from "@testapis/node-native/lib//testapis/deprecation/deprecation_pb";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$DeprecatedMessage = $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage;
export type $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessage = $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage;
export type $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage = $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage;
export type $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1 = $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1;
export type $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2 = $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2;
export const DeprecatedMessage = nexus.objectType({
    name: "DeprecatedMessage",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            resolve(root) {
                const value = root.getBody();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("NotDeprecatedEnum"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedEnum.NOT_DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$DeprecatedMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.DeprecatedMessage",
                name: "DeprecatedMessage",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const NotDeprecatedMessage = nexus.objectType({
    name: "NotDeprecatedMessage",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.",
            resolve(root) {
                const value = root.getBody();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("DeprecatedEnum"),
            deprecation: "testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.",
            resolve(root) {
                const value = root.getEnum();
                if (value == null) {
                    return null;
                }
                if (value === $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedEnum.DEPRECATED_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("notDeprecatedOneof", {
            type: nexus.nullable("NotDeprecatedMessageNotDeprecatedOneof"),
            resolve(root) {
                switch (root.getNotDeprecatedOneofCase()) {
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.NOT_DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_1: {
                        return root.getMsg1()!;
                    }
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.NotDeprecatedOneofCase.MSG_2: {
                        return root.getMsg2()!;
                    }
                    default: {
                        throw "unreachable";
                    }
                }
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "not_deprecated_oneof"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("deprecatedOneof", {
            type: nexus.nullable("NotDeprecatedMessageDeprecatedOneof"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.deprecated_oneof is mark as deprecated in a *.proto file.",
            resolve(root) {
                switch (root.getDeprecatedOneofCase()) {
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.DEPRECATED_ONEOF_NOT_SET: {
                        return null;
                    }
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_3: {
                        return root.getMsg3()!;
                    }
                    case $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.DeprecatedOneofCase.MSG_4: {
                        return root.getMsg4()!;
                    }
                    default: {
                        throw "unreachable";
                    }
                }
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "deprecated_oneof"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.NotDeprecatedMessage",
                name: "NotDeprecatedMessage",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DeprecatedMessageInnerMessage = nexus.objectType({
    name: "DeprecatedMessageInnerMessage",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            resolve(root) {
                const value = root.getBody();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$DeprecatedMessageInnerMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.DeprecatedMessage.InnerMessage",
                name: "InnerMessage",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const NotDeprecatedMessageInnerMessage1 = nexus.objectType({
    name: "NotDeprecatedMessageInnerMessage1",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            resolve(root) {
                const value = root.getBody();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage1" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.NotDeprecatedMessage.InnerMessage1",
                name: "InnerMessage1",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const NotDeprecatedMessageInnerMessage2 = nexus.objectType({
    name: "NotDeprecatedMessageInnerMessage2",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            resolve(root) {
                const value = root.getBody();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$deprecation$deprecation_pb$NotDeprecatedMessageInnerMessage2" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.NotDeprecatedMessage.InnerMessage2",
                name: "InnerMessage2",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DeprecatedMessageInput = Object.assign(nexus.inputObjectType({
    name: "DeprecatedMessageInput",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("NotDeprecatedEnum"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.DeprecatedMessage",
            name: "DeprecatedMessage",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DeprecatedMessageInput"]): $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage => {
        const output = new $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage();
        output.setBody(input.body);
        if (input.enum != null) {
            output.setEnum(input.enum);
        }
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            enum: {
                type: nexus.nullable("NotDeprecatedEnum"),
                deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "enum"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const NotDeprecatedMessageInput = Object.assign(nexus.inputObjectType({
    name: "NotDeprecatedMessageInput",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("DeprecatedEnum"),
            deprecation: "testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("msg1", {
            type: nexus.nullable("NotDeprecatedMessageInnerMessage1Input"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "msg1"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("msg2", {
            type: nexus.nullable("NotDeprecatedMessageInnerMessage2Input"),
            extensions: {
                ...({
                    protobufField: {
                        name: "msg2"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("msg3", {
            type: nexus.nullable("NotDeprecatedMessageInnerMessage1Input"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "msg3"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("msg4", {
            type: nexus.nullable("NotDeprecatedMessageInnerMessage2Input"),
            deprecation: "testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "msg4"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.NotDeprecatedMessage",
            name: "NotDeprecatedMessage",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["NotDeprecatedMessageInput"]): $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage => {
        const output = new $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage();
        output.setBody(input.body);
        if (input.enum != null) {
            output.setEnum(input.enum);
        }
        if (input.msg1 != null) {
            output.setMsg1(NotDeprecatedMessageInnerMessage1Input.toProto(input.msg1));
        }
        if (input.msg2 != null) {
            output.setMsg2(NotDeprecatedMessageInnerMessage2Input.toProto(input.msg2));
        }
        if (input.msg3 != null) {
            output.setMsg3(NotDeprecatedMessageInnerMessage1Input.toProto(input.msg3));
        }
        if (input.msg4 != null) {
            output.setMsg4(NotDeprecatedMessageInnerMessage2Input.toProto(input.msg4));
        }
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                deprecation: "testapis.deprecation.NotDeprecatedMessage.body is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            enum: {
                type: nexus.nullable("DeprecatedEnum"),
                deprecation: "testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "enum"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            msg1: {
                type: nexus.nullable("NotDeprecatedMessageInnerMessage1Input"),
                deprecation: "testapis.deprecation.NotDeprecatedMessage.msg1 is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "msg1"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            msg2: {
                type: nexus.nullable("NotDeprecatedMessageInnerMessage2Input"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "msg2"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            msg3: {
                type: nexus.nullable("NotDeprecatedMessageInnerMessage1Input"),
                deprecation: "testapis.deprecation.NotDeprecatedMessage.msg3 is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "msg3"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            msg4: {
                type: nexus.nullable("NotDeprecatedMessageInnerMessage2Input"),
                deprecation: "testapis.deprecation.NotDeprecatedMessage.msg4 is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "msg4"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const DeprecatedMessageInnerMessageInput = Object.assign(nexus.inputObjectType({
    name: "DeprecatedMessageInnerMessageInput",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.DeprecatedMessage.InnerMessage",
            name: "InnerMessage",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DeprecatedMessageInnerMessageInput"]): $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage => {
        const output = new $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.DeprecatedMessage.InnerMessage();
        output.setBody(input.body);
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                deprecation: "testapis.deprecation.DeprecatedMessage is mark as deprecated in a *.proto file.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const NotDeprecatedMessageInnerMessage1Input = Object.assign(nexus.inputObjectType({
    name: "NotDeprecatedMessageInnerMessage1Input",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.NotDeprecatedMessage.InnerMessage1",
            name: "InnerMessage1",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["NotDeprecatedMessageInnerMessage1Input"]): $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1 => {
        const output = new $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage1();
        output.setBody(input.body);
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const NotDeprecatedMessageInnerMessage2Input = Object.assign(nexus.inputObjectType({
    name: "NotDeprecatedMessageInnerMessage2Input",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.NotDeprecatedMessage.InnerMessage2",
            name: "InnerMessage2",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["NotDeprecatedMessageInnerMessage2Input"]): $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2 => {
        const output = new $$testapis$node_native$lib$$testapis$deprecation$deprecation_pb.NotDeprecatedMessage.InnerMessage2();
        output.setBody(input.body);
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const NotDeprecatedMessageNotDeprecatedOneof = nexus.unionType({
    name: "NotDeprecatedMessageNotDeprecatedOneof",
    definition(t) {
        t.members(NotDeprecatedMessageInnerMessage1, NotDeprecatedMessageInnerMessage2);
    },
    extensions: {
        ...({
            protobufOneof: {
                fullName: "testapis.deprecation.NotDeprecatedMessage.not_deprecated_oneof",
                name: "not_deprecated_oneof",
                messageName: "NotDeprecatedMessage",
                package: "testapis.deprecation",
                fields: [
                    {
                        name: "msg1",
                        type: "testapis.deprecation.NotDeprecatedMessage.InnerMessage1"
                    },
                    {
                        name: "msg2",
                        type: "testapis.deprecation.NotDeprecatedMessage.InnerMessage2"
                    }
                ]
            }
        } as proto_nexus.ProtobufOneofExtensions)
    }
});
export const NotDeprecatedMessageDeprecatedOneof = nexus.unionType({
    name: "NotDeprecatedMessageDeprecatedOneof",
    definition(t) {
        t.members(NotDeprecatedMessageInnerMessage1, NotDeprecatedMessageInnerMessage2);
    },
    extensions: {
        ...({
            protobufOneof: {
                fullName: "testapis.deprecation.NotDeprecatedMessage.deprecated_oneof",
                name: "deprecated_oneof",
                messageName: "NotDeprecatedMessage",
                package: "testapis.deprecation",
                fields: [
                    {
                        name: "msg3",
                        type: "testapis.deprecation.NotDeprecatedMessage.InnerMessage1"
                    },
                    {
                        name: "msg4",
                        type: "testapis.deprecation.NotDeprecatedMessage.InnerMessage2"
                    }
                ]
            }
        } as proto_nexus.ProtobufOneofExtensions)
    }
});
export const NotDeprecatedEnum = nexus.enumType({
    name: "NotDeprecatedEnum",
    members: [
        {
            name: "NOT_DEPRECATED_FOO",
            value: 1,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "NOT_DEPRECATED_FOO"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        },
        {
            name: "DEPRECATED_BAR",
            deprecation: "testapis.deprecation.NotDeprecatedEnum.DEPRECATED_BAR is mark as deprecated in a *.proto file.",
            value: 2,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DEPRECATED_BAR"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        }
    ],
    extensions: {
        ...({
            protobufEnum: {
                name: "NotDeprecatedEnum",
                fullName: "testapis.deprecation.NotDeprecatedEnum",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufEnumExtensions)
    }
});
export const DeprecatedEnum = nexus.enumType({
    name: "DeprecatedEnum",
    members: [
        {
            name: "DEPRECATED_BAZ",
            deprecation: "testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.",
            value: 1,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DEPRECATED_BAZ"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        },
        {
            name: "DEPRECATED_QUX",
            deprecation: "testapis.deprecation.DeprecatedEnum is mark as deprecated in a *.proto file.",
            value: 2,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DEPRECATED_QUX"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        }
    ],
    extensions: {
        ...({
            protobufEnum: {
                name: "DeprecatedEnum",
                fullName: "testapis.deprecation.DeprecatedEnum",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufEnumExtensions)
    }
});
