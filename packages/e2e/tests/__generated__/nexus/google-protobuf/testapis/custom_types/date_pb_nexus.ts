// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/custom_types/date.proto

/* eslint-disable */

import * as $$testapis$node_native$lib$$testapis$custom_types$date_pb from "@testapis/node-native/lib//testapis/custom_types/date_pb";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node_native$lib$$testapis$custom_types$date_pb$Date = $$testapis$node_native$lib$$testapis$custom_types$date_pb.Date;
export const Date = nexus.objectType({
    name: "Date",
    definition(t) {
        t.field("year", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.getYear();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "year"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("month", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.getMonth();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "month"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("day", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.getDay();
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "day"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node_native$lib$$testapis$custom_types$date_pb.Date;
    },
    sourceType: { module: __filename, export: "$$testapis$node_native$lib$$testapis$custom_types$date_pb$Date" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.custom_types.Date",
                name: "Date",
                package: "testapis.custom_types"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DateInput = Object.assign(nexus.inputObjectType({
    name: "DateInput",
    definition(t) {
        t.field("year", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "year"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("month", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "month"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("day", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "day"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.custom_types.Date",
            name: "Date",
            package: "testapis.custom_types"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DateInput"]): $$testapis$node_native$lib$$testapis$custom_types$date_pb.Date => {
        const output = new $$testapis$node_native$lib$$testapis$custom_types$date_pb.Date();
        output.setYear(input.year);
        output.setMonth(input.month);
        output.setDay(input.day);
        return output;
    },
    _protoNexus: {
        fields: {
            year: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "year"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            month: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "month"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            day: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "day"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
