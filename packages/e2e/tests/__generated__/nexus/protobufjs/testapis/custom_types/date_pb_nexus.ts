// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/custom_types/date.proto

/* eslint-disable */

import * as $$testapis$node$lib$$testapis$custom_types from "@testapis/node/lib//testapis/custom_types";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node$lib$$testapis$custom_types$testapis$custom_types$Date = $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Date;
export const Date = nexus.objectType({
    name: "Date",
    definition(t) {
        t.field("year", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.year;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "year"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("month", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.month;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "month"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("day", {
            type: nexus.nonNull("Int"),
            resolve(root) {
                const value = root.day;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "day"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Date;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$custom_types$testapis$custom_types$Date" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.custom_types.Date",
                name: "Date",
                package: "testapis.custom_types"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DateInput = Object.assign(nexus.inputObjectType({
    name: "DateInput",
    definition(t) {
        t.field("year", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "year"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("month", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "month"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("day", {
            type: nexus.nonNull("Int"),
            extensions: {
                ...({
                    protobufField: {
                        name: "day"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.custom_types.Date",
            name: "Date",
            package: "testapis.custom_types"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DateInput"]): $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Date => {
        const output = new $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Date();
        output.year = input.year;
        output.month = input.month;
        output.day = input.day;
        return output;
    },
    _protoNexus: {
        fields: {
            year: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "year"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            month: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "month"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            day: {
                type: nexus.nonNull("Int"),
                extensions: {
                    ...({
                        protobufField: {
                            name: "day"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
