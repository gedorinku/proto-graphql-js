// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/custom_types/post.proto

/* eslint-disable */

import * as $$testapis$node$lib$$testapis$custom_types from "@testapis/node/lib//testapis/custom_types";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
import * as _$date_pb_nexus from "./date_pb_nexus";
export type $$testapis$node$lib$$testapis$custom_types$testapis$custom_types$Post = $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Post;
export const Post = nexus.objectType({
    name: "Post",
    definition(t) {
        t.field("title", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.title;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "title"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("publishedDate", {
            type: nexus.nullable("Date"),
            description: "Optional.",
            resolve(root) {
                const value = root.publishedDate;
                if (value == null) {
                    return null;
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "published_date"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Post;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$custom_types$testapis$custom_types$Post" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.custom_types.Post",
                name: "Post",
                package: "testapis.custom_types"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const PostInput = Object.assign(nexus.inputObjectType({
    name: "PostInput",
    definition(t) {
        t.field("title", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "title"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("publishedDate", {
            type: nexus.nullable("DateInput"),
            description: "Optional.",
            extensions: {
                ...({
                    protobufField: {
                        name: "published_date"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.custom_types.Post",
            name: "Post",
            package: "testapis.custom_types"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["PostInput"]): $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Post => {
        const output = new $$testapis$node$lib$$testapis$custom_types.testapis.custom_types.Post();
        output.title = input.title;
        if (input.publishedDate != null) {
            output.publishedDate = _$date_pb_nexus.DateInput.toProto(input.publishedDate);
        }
        return output;
    },
    _protoNexus: {
        fields: {
            title: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "title"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            publishedDate: {
                type: nexus.nullable("DateInput"),
                description: "Optional.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "published_date"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
