// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/deprecation/file_deprecation.proto

/* eslint-disable */

import * as $$testapis$node$lib$$testapis$deprecation from "@testapis/node/lib//testapis/deprecation";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node$lib$$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage = $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage;
export type $$testapis$node$lib$$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage = $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage;
export const DeprecatedFileMessage = nexus.objectType({
    name: "DeprecatedFileMessage",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("DeprecatedFileEnum"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            resolve(root) {
                const value = root.enum;
                if (value == null) {
                    return null;
                }
                if (value === $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileEnum.DEPRECATED_FILE_ENUM_UNSPECIFIED) {
                    return null;
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$deprecation$testapis$deprecation$DeprecatedFileMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.DeprecatedFileMessage",
                name: "DeprecatedFileMessage",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DeprecatedFileMessageInnerMessage = nexus.objectType({
    name: "DeprecatedFileMessageInnerMessage",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$deprecation$testapis$deprecation$DeprecatedFileMessageInnerMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.deprecation.DeprecatedFileMessage.InnerMessage",
                name: "InnerMessage",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const DeprecatedFileMessageInput = Object.assign(nexus.inputObjectType({
    name: "DeprecatedFileMessageInput",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("enum", {
            type: nexus.nullable("DeprecatedFileEnum"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            extensions: {
                ...({
                    protobufField: {
                        name: "enum"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.DeprecatedFileMessage",
            name: "DeprecatedFileMessage",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DeprecatedFileMessageInput"]): $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage => {
        const output = new $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage();
        output.body = input.body;
        if (input.enum != null) {
            output.enum = input.enum;
        }
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            enum: {
                type: nexus.nullable("DeprecatedFileEnum"),
                deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "enum"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const DeprecatedFileMessageInnerMessageInput = Object.assign(nexus.inputObjectType({
    name: "DeprecatedFileMessageInnerMessageInput",
    definition(t) {
        t.field("body", {
            type: nexus.nonNull("String"),
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.deprecation.DeprecatedFileMessage.InnerMessage",
            name: "InnerMessage",
            package: "testapis.deprecation"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["DeprecatedFileMessageInnerMessageInput"]): $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage => {
        const output = new $$testapis$node$lib$$testapis$deprecation.testapis.deprecation.DeprecatedFileMessage.InnerMessage();
        output.body = input.body;
        return output;
    },
    _protoNexus: {
        fields: {
            body: {
                type: nexus.nonNull("String"),
                deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const DeprecatedFileEnum = nexus.enumType({
    name: "DeprecatedFileEnum",
    members: [
        {
            name: "DEPRECATED_FILE_FOO",
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            value: 1,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DEPRECATED_FILE_FOO"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        },
        {
            name: "DEPRECATED_FILE_BAR",
            deprecation: "testapis/deprecation/file_deprecation.proto is mark as deprecated.",
            value: 2,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DEPRECATED_FILE_BAR"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        }
    ],
    extensions: {
        ...({
            protobufEnum: {
                name: "DeprecatedFileEnum",
                fullName: "testapis.deprecation.DeprecatedFileEnum",
                package: "testapis.deprecation"
            }
        } as proto_nexus.ProtobufEnumExtensions)
    }
});
