// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/no_partial/no_partial.proto

/* eslint-disable */

import * as $$testapis$node$lib$$testapis$extensions$no_partial from "@testapis/node/lib//testapis/extensions/no_partial";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$ParentMessage = $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.ParentMessage;
export type $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$PartialableInputMessage = $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.PartialableInputMessage;
export type $$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$NoPartialInputMessage = $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.NoPartialInputMessage;
export const ParentMessage = nexus.objectType({
    name: "ParentMessage",
    definition(t) {
        t.field("partialableInputMessage", {
            type: nexus.nonNull("PartialableInputMessage"),
            description: "Required.",
            resolve(root) {
                const value = root.partialableInputMessage;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "partialable_input_message"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("noPartialInputMessage", {
            type: nexus.nonNull("NoPartialInputMessage"),
            description: "Required.",
            resolve(root) {
                const value = root.noPartialInputMessage;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "no_partial_input_message"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.ParentMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$ParentMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.extensions.no_partial.ParentMessage",
                name: "ParentMessage",
                package: "testapis.extensions.no_partial"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const PartialableInputMessage = nexus.objectType({
    name: "PartialableInputMessage",
    definition(t) {
        t.field("id", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value.toString();
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.PartialableInputMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$PartialableInputMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.extensions.no_partial.PartialableInputMessage",
                name: "PartialableInputMessage",
                package: "testapis.extensions.no_partial"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const NoPartialInputMessage = nexus.objectType({
    name: "NoPartialInputMessage",
    definition(t) {
        t.field("id", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.id;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value.toString();
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.NoPartialInputMessage;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$extensions$no_partial$testapis$extensions$no_partial$NoPartialInputMessage" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.extensions.no_partial.NoPartialInputMessage",
                name: "NoPartialInputMessage",
                package: "testapis.extensions.no_partial"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const ParentMessageInput = Object.assign(nexus.inputObjectType({
    name: "ParentMessageInput",
    definition(t) {
        t.field("partialableInputMessage", {
            type: nexus.nonNull("PartialableInputMessageInput"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "partialable_input_message"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("noPartialInputMessage", {
            type: nexus.nonNull("NoPartialInputMessageInput"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "no_partial_input_message"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.extensions.no_partial.ParentMessage",
            name: "ParentMessage",
            package: "testapis.extensions.no_partial"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["ParentMessageInput"]): $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.ParentMessage => {
        const output = new $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.ParentMessage();
        output.partialableInputMessage = PartialableInputMessageInput.toProto(input.partialableInputMessage);
        output.noPartialInputMessage = NoPartialInputMessageInput.toProto(input.noPartialInputMessage);
        return output;
    },
    _protoNexus: {
        fields: {
            partialableInputMessage: {
                type: nexus.nonNull("PartialableInputMessageInput"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "partialable_input_message"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            noPartialInputMessage: {
                type: nexus.nonNull("NoPartialInputMessageInput"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "no_partial_input_message"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const PartialableInputMessageInput = Object.assign(nexus.inputObjectType({
    name: "PartialableInputMessageInput",
    definition(t) {
        t.field("id", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.extensions.no_partial.PartialableInputMessage",
            name: "PartialableInputMessage",
            package: "testapis.extensions.no_partial"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["PartialableInputMessageInput"]): $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.PartialableInputMessage => {
        const output = new $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.PartialableInputMessage();
        output.id = proto_nexus.stringToNumber(input.id);
        output.body = input.body;
        return output;
    },
    _protoNexus: {
        fields: {
            id: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "id"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            body: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const NoPartialInputMessageInput = Object.assign(nexus.inputObjectType({
    name: "NoPartialInputMessageInput",
    definition(t) {
        t.field("id", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.extensions.no_partial.NoPartialInputMessage",
            name: "NoPartialInputMessage",
            package: "testapis.extensions.no_partial"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["NoPartialInputMessageInput"]): $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.NoPartialInputMessage => {
        const output = new $$testapis$node$lib$$testapis$extensions$no_partial.testapis.extensions.no_partial.NoPartialInputMessage();
        output.id = proto_nexus.stringToNumber(input.id);
        output.body = input.body;
        return output;
    },
    _protoNexus: {
        fields: {
            id: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "id"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            body: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
