// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: testapis/extensions/field_nullability/nullability.proto

/* eslint-disable */

import * as $$testapis$node$lib$$testapis$extensions$field_nullability from "@testapis/node/lib//testapis/extensions/field_nullability";
import * as nexus from "nexus";
import * as proto_nexus from "proto-nexus";
export type $$testapis$node$lib$$testapis$extensions$field_nullability$testapis$extensions$field_nullability$Message = $$testapis$node$lib$$testapis$extensions$field_nullability.testapis.extensions.field_nullability.Message;
export const Message = nexus.objectType({
    name: "Message",
    definition(t) {
        t.field("userId", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.userId;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value.toString();
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "user_id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            resolve(root) {
                const value = root.body;
                if (value == null) {
                    throw new Error("Cannot return null for non-nullable field");
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("status", {
            type: nexus.nullable("MessageStatus"),
            description: "Required.",
            resolve(root) {
                const value = root.status;
                if (value == null) {
                    return null;
                }
                if (value === $$testapis$node$lib$$testapis$extensions$field_nullability.testapis.extensions.field_nullability.Message.Status.STATUS_UNSPECIFIED) {
                    return null;
                }
                return value;
            },
            extensions: {
                ...({
                    protobufField: {
                        name: "status"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    isTypeOf(data: unknown) {
        return data instanceof $$testapis$node$lib$$testapis$extensions$field_nullability.testapis.extensions.field_nullability.Message;
    },
    sourceType: { module: __filename, export: "$$testapis$node$lib$$testapis$extensions$field_nullability$testapis$extensions$field_nullability$Message" },
    extensions: {
        ...({
            protobufMessage: {
                fullName: "testapis.extensions.field_nullability.Message",
                name: "Message",
                package: "testapis.extensions.field_nullability"
            }
        } as proto_nexus.ProtobufMessageExtensions)
    }
});
export const MessageInput = Object.assign(nexus.inputObjectType({
    name: "MessageInput",
    definition(t) {
        t.field("userId", {
            type: nexus.nullable("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "user_id"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("body", {
            type: nexus.nonNull("String"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "body"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
        t.field("status", {
            type: nexus.nullable("MessageStatus"),
            description: "Required.",
            extensions: {
                ...({
                    protobufField: {
                        name: "status"
                    }
                } as proto_nexus.ProtobufFieldExtensions)
            }
        });
    },
    extensions: {
        protobufMessage: {
            fullName: "testapis.extensions.field_nullability.Message",
            name: "Message",
            package: "testapis.extensions.field_nullability"
        }
    }
}), {
    toProto: (input: NexusGen["inputTypes"]["MessageInput"]): $$testapis$node$lib$$testapis$extensions$field_nullability.testapis.extensions.field_nullability.Message => {
        const output = new $$testapis$node$lib$$testapis$extensions$field_nullability.testapis.extensions.field_nullability.Message();
        if (input.userId != null) {
            output.userId = proto_nexus.stringToNumber(input.userId);
        }
        output.body = input.body;
        if (input.status != null) {
            output.status = input.status;
        }
        return output;
    },
    _protoNexus: {
        fields: {
            userId: {
                type: nexus.nullable("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "user_id"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            body: {
                type: nexus.nonNull("String"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "body"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            },
            status: {
                type: nexus.nullable("MessageStatus"),
                description: "Required.",
                extensions: {
                    ...({
                        protobufField: {
                            name: "status"
                        }
                    } as proto_nexus.ProtobufFieldExtensions)
                }
            }
        }
    }
});
export const MessageStatus = nexus.enumType({
    name: "MessageStatus",
    members: [
        {
            name: "DRAFT",
            value: 1,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "DRAFT"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        },
        {
            name: "PUBLISHED",
            value: 2,
            extensions: {
                ...({
                    protobufEnumValue: {
                        name: "PUBLISHED"
                    }
                } as proto_nexus.ProtobufEnumValueExtensions)
            }
        }
    ],
    extensions: {
        ...({
            protobufEnum: {
                name: "Status",
                fullName: "testapis.extensions.field_nullability.Message.Status",
                package: "testapis.extensions.field_nullability"
            }
        } as proto_nexus.ProtobufEnumExtensions)
    }
});
