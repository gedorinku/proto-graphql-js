/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofParent, $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofMemberMessage1, $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofMemberMessage2 } from "./../../__generated__/nexus/google-protobuf/testapis/oneof/oneof_pb_nexus"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  OneofMemberMessage1Input: { // input type
    body: string; // String!
  }
  OneofMemberMessage2Input: { // input type
    imageUrl: string; // String!
  }
  OneofParentInput: { // input type
    normalField: string; // String!
    optoinalMessage1?: NexusGenInputs['OneofMemberMessage1Input'] | null; // OneofMemberMessage1Input
    optoinalMessage2?: NexusGenInputs['OneofMemberMessage2Input'] | null; // OneofMemberMessage2Input
    requiredMessage1?: NexusGenInputs['OneofMemberMessage1Input'] | null; // OneofMemberMessage1Input
    requiredMessage2?: NexusGenInputs['OneofMemberMessage2Input'] | null; // OneofMemberMessage2Input
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  OneofMemberMessage1: $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofMemberMessage1;
  OneofMemberMessage2: $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofMemberMessage2;
  OneofParent: $$testapis$node_native$lib$$testapis$oneof$oneof_pb$OneofParent;
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  OneofParentOptionalOneofMembers: NexusGenRootTypes['OneofMemberMessage1'] | NexusGenRootTypes['OneofMemberMessage2'];
  OneofParentRequiredOneofMembers: NexusGenRootTypes['OneofMemberMessage1'] | NexusGenRootTypes['OneofMemberMessage2'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  OneofMemberMessage1: { // field return type
    body: string; // String!
  }
  OneofMemberMessage2: { // field return type
    imageUrl: string; // String!
  }
  OneofParent: { // field return type
    normalField: string; // String!
    optionalOneofMembers: NexusGenRootTypes['OneofParentOptionalOneofMembers'] | null; // OneofParentOptionalOneofMembers
    requiredOneofMembers: NexusGenRootTypes['OneofParentRequiredOneofMembers']; // OneofParentRequiredOneofMembers!
  }
  Query: { // field return type
    test1: NexusGenRootTypes['OneofParent'] | null; // OneofParent
  }
}

export interface NexusGenFieldTypeNames {
  OneofMemberMessage1: { // field return type name
    body: 'String'
  }
  OneofMemberMessage2: { // field return type name
    imageUrl: 'String'
  }
  OneofParent: { // field return type name
    normalField: 'String'
    optionalOneofMembers: 'OneofParentOptionalOneofMembers'
    requiredOneofMembers: 'OneofParentRequiredOneofMembers'
  }
  Query: { // field return type name
    test1: 'OneofParent'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
  OneofParentOptionalOneofMembers: "OneofMemberMessage1" | "OneofMemberMessage2"
  OneofParentRequiredOneofMembers: "OneofMemberMessage1" | "OneofMemberMessage2"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = "OneofMemberMessage1" | "OneofMemberMessage2" | "OneofParent";

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: true
    __typename: false
    resolveType: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}