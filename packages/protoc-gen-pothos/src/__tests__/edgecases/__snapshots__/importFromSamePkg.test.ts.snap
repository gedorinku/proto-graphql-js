// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`import type form the same package with ts-proto generates pothos DSLs: edgecases/import_from_same_pkg/child.pb.pothos.ts 1`] = `
"// Code generated by protoc-gen-pothos. DO NOT EDIT.
// source: testapis/edgecases/import_from_same_pkg/child.proto

/* eslint-disable */

import { InputObjectRef } from "@pothos/core";
import { builder } from "../../../builder";
import { ChildMessage } from "./testapis/edgecases/import_from_same_pkg/child";

export const ChildMessage$Ref = builder.objectRef<ChildMessage>("ChildMessage");
builder.objectType(ChildMessage$Ref, {
  name: "ChildMessage",
  fields: (t) => ({
    body: t.expose("body", {
      type: "String",
      nullable: false,
      extensions: { protobufField: { name: "body", typeFullName: "string" } },
    }),
  }),
  isTypeOf: (source) => {
    return (source as ChildMessage | { $type: string & {}; }).$type ===
      "testapis.edgecases.import_from_same_pkg.ChildMessage";
  },
  extensions: {
    protobufMessage: {
      fullName: "testapis.edgecases.import_from_same_pkg.ChildMessage",
      name: "ChildMessage",
      package: "testapis.edgecases.import_from_same_pkg",
    },
  },
});

export type ChildMessageInput$Shape = { body: ChildMessage["body"]; };

export const ChildMessageInput$Ref: InputObjectRef<ChildMessageInput$Shape> =
  builder.inputRef<ChildMessageInput$Shape>("ChildMessageInput").implement({
    fields: (t) => ({
      body: t.field({
        type: "String",
        required: true,
        extensions: { protobufField: { name: "body", typeFullName: "string" } },
      }),
    }),
    extensions: {
      protobufMessage: {
        fullName: "testapis.edgecases.import_from_same_pkg.ChildMessage",
        name: "ChildMessage",
        package: "testapis.edgecases.import_from_same_pkg",
      },
    },
  });
"
`;

exports[`import type form the same package with ts-proto generates pothos DSLs: edgecases/import_from_same_pkg/parent.pb.pothos.ts 1`] = `
"// Code generated by protoc-gen-pothos. DO NOT EDIT.
// source: testapis/edgecases/import_from_same_pkg/parent.proto

/* eslint-disable */

import { InputObjectRef } from "@pothos/core";
import { builder } from "../../../builder";
import {
  ChildMessage$Ref,
  ChildMessageInput$Ref,
  ChildMessageInput$Shape,
} from "./child.pb.pothos";
import { ParentMessage } from "./testapis/edgecases/import_from_same_pkg/parent";

export const ParentMessage$Ref = builder.objectRef<ParentMessage>(
  "ParentMessage",
);
builder.objectType(ParentMessage$Ref, {
  name: "ParentMessage",
  fields: (t) => ({
    child: t.expose("child", {
      type: ChildMessage$Ref,
      nullable: true,
      extensions: {
        protobufField: {
          name: "child",
          typeFullName: "testapis.edgecases.import_from_same_pkg.ChildMessage",
        },
      },
    }),
  }),
  isTypeOf: (source) => {
    return (source as ParentMessage | { $type: string & {}; }).$type ===
      "testapis.edgecases.import_from_same_pkg.ParentMessage";
  },
  extensions: {
    protobufMessage: {
      fullName: "testapis.edgecases.import_from_same_pkg.ParentMessage",
      name: "ParentMessage",
      package: "testapis.edgecases.import_from_same_pkg",
    },
  },
});

export type ParentMessageInput$Shape = {
  child?: ChildMessageInput$Shape | null;
};

export const ParentMessageInput$Ref: InputObjectRef<ParentMessageInput$Shape> =
  builder.inputRef<ParentMessageInput$Shape>("ParentMessageInput").implement({
    fields: (t) => ({
      child: t.field({
        type: ChildMessageInput$Ref,
        required: false,
        extensions: {
          protobufField: {
            name: "child",
            typeFullName:
              "testapis.edgecases.import_from_same_pkg.ChildMessage",
          },
        },
      }),
    }),
    extensions: {
      protobufMessage: {
        fullName: "testapis.edgecases.import_from_same_pkg.ParentMessage",
        name: "ParentMessage",
        package: "testapis.edgecases.import_from_same_pkg",
      },
    },
  });
"
`;
