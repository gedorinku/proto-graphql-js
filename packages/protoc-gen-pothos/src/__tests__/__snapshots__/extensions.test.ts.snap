// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`field_nullability generates pothos DSLs with partial inputs: extensions/field_nullability/nullability_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-pothos. DO NOT EDIT.
// source: testapis/extensions/field_nullability/nullability.proto

import * as proto_nexus from \\"proto-nexus\\";
import * as _$testapis$extensions$field_nullability$nullability_pb from \\"./testapis/extensions/field_nullability/nullability_pb\\";
export const Message = builder.objectRef<_$testapis$extensions$field_nullability$nullability_pb.Message>(\\"Message\\");
builder.objectType(Message, {
    name: \\"Message\\",
    fields: t => ({
        userId: t.expose(\\"userId\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        status: t.expose(\\"status\\", {
            type: \\"MessageStatus\\",
            nullable: true,
            description: \\"Required.\\"
        })
    }),
    isTypeOf: source => {
        return (source as _$testapis$extensions$field_nullability$nullability_pb.Message | {
            $type: string & {};
        }).$type === \\"testapis.extensions.field_nullability.Message\\";
    }
});
export const MessageInput = builder.inputRef<Omit<_$testapis$extensions$field_nullability$nullability_pb.Message, \\"$type\\">>(\\"MessageInput\\");
MessageInput.implement({
    fields: t => ({
        userId: t.expose(\\"userId\\", {
            type: \\"String\\",
            nullable: true,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        status: t.expose(\\"status\\", {
            type: \\"MessageStatus\\",
            nullable: true,
            description: \\"Required.\\"
        })
    })
});
export const MessagePartialInput = builder.inputRef<Omit<_$testapis$extensions$field_nullability$nullability_pb.Message, \\"$type\\">>(\\"MessagePartialInput\\");
MessagePartialInput.implement({
    fields: t => ({
        userId: t.expose(\\"userId\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: true,
            description: \\"Required.\\"
        }),
        status: t.expose(\\"status\\", {
            type: \\"MessageStatus\\",
            nullable: true,
            description: \\"Required.\\"
        })
    })
});
export const MessageStatus = builder.enumType(\\"MessageStatus\\", {
    values: {
        DRAFT: {
            value: 1
        },
        PUBLISHED: {
            value: 2
        }
    }
});
"
`;

exports[`no_partial generates pothos DSLs with partial inputs: extensions/no_partial/no_partial_pb_nexus.ts 1`] = `
"// Code generated by protoc-gen-pothos. DO NOT EDIT.
// source: testapis/extensions/no_partial/no_partial.proto

import * as proto_nexus from \\"proto-nexus\\";
import * as _$testapis$extensions$no_partial$no_partial_pb from \\"./testapis/extensions/no_partial/no_partial_pb\\";
export const ParentMessage = builder.objectRef<_$testapis$extensions$no_partial$no_partial_pb.ParentMessage>(\\"ParentMessage\\");
builder.objectType(ParentMessage, {
    name: \\"ParentMessage\\",
    fields: t => ({
        partialableInputMessage: t.expose(\\"partialableInputMessage\\", {
            type: \\"PartialableInputMessage\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        noPartialInputMessage: t.expose(\\"noPartialInputMessage\\", {
            type: \\"NoPartialInputMessage\\",
            nullable: false,
            description: \\"Required.\\"
        })
    }),
    isTypeOf: source => {
        return (source as _$testapis$extensions$no_partial$no_partial_pb.ParentMessage | {
            $type: string & {};
        }).$type === \\"testapis.extensions.no_partial.ParentMessage\\";
    }
});
export const PartialableInputMessage = builder.objectRef<_$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage>(\\"PartialableInputMessage\\");
builder.objectType(PartialableInputMessage, {
    name: \\"PartialableInputMessage\\",
    fields: t => ({
        id: t.expose(\\"id\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        })
    }),
    isTypeOf: source => {
        return (source as _$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage | {
            $type: string & {};
        }).$type === \\"testapis.extensions.no_partial.PartialableInputMessage\\";
    }
});
export const NoPartialInputMessage = builder.objectRef<_$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage>(\\"NoPartialInputMessage\\");
builder.objectType(NoPartialInputMessage, {
    name: \\"NoPartialInputMessage\\",
    fields: t => ({
        id: t.expose(\\"id\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        })
    }),
    isTypeOf: source => {
        return (source as _$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage | {
            $type: string & {};
        }).$type === \\"testapis.extensions.no_partial.NoPartialInputMessage\\";
    }
});
export const ParentMessageInput = builder.inputRef<Omit<_$testapis$extensions$no_partial$no_partial_pb.ParentMessage, \\"$type\\">>(\\"ParentMessageInput\\");
ParentMessageInput.implement({
    fields: t => ({
        partialableInputMessage: t.expose(\\"partialableInputMessage\\", {
            type: \\"PartialableInputMessageInput\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        noPartialInputMessage: t.expose(\\"noPartialInputMessage\\", {
            type: \\"NoPartialInputMessageInput\\",
            nullable: false,
            description: \\"Required.\\"
        })
    })
});
export const ParentMessagePartialInput = builder.inputRef<Omit<_$testapis$extensions$no_partial$no_partial_pb.ParentMessage, \\"$type\\">>(\\"ParentMessagePartialInput\\");
ParentMessagePartialInput.implement({
    fields: t => ({
        partialableInputMessage: t.expose(\\"partialableInputMessage\\", {
            type: \\"PartialableInputMessagePartialInput\\",
            nullable: true,
            description: \\"Required.\\"
        }),
        noPartialInputMessage: t.expose(\\"noPartialInputMessage\\", {
            type: \\"NoPartialInputMessageInput\\",
            nullable: true,
            description: \\"Required.\\"
        })
    })
});
export const PartialableInputMessageInput = builder.inputRef<Omit<_$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage, \\"$type\\">>(\\"PartialableInputMessageInput\\");
PartialableInputMessageInput.implement({
    fields: t => ({
        id: t.expose(\\"id\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        })
    })
});
export const PartialableInputMessagePartialInput = builder.inputRef<Omit<_$testapis$extensions$no_partial$no_partial_pb.PartialableInputMessage, \\"$type\\">>(\\"PartialableInputMessagePartialInput\\");
PartialableInputMessagePartialInput.implement({
    fields: t => ({
        id: t.expose(\\"id\\", {
            type: \\"String\\",
            nullable: true,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: true,
            description: \\"Required.\\"
        })
    })
});
export const NoPartialInputMessageInput = builder.inputRef<Omit<_$testapis$extensions$no_partial$no_partial_pb.NoPartialInputMessage, \\"$type\\">>(\\"NoPartialInputMessageInput\\");
NoPartialInputMessageInput.implement({
    fields: t => ({
        id: t.expose(\\"id\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        }),
        body: t.expose(\\"body\\", {
            type: \\"String\\",
            nullable: false,
            description: \\"Required.\\"
        })
    })
});
"
`;
