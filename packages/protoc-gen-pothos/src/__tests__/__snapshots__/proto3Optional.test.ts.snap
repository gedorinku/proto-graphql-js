// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`proto3 optional with ts-proto generates pothos DSLs: proto3_optional/proto3_optional.pb.pothos.ts 1`] = `
"// Code generated by protoc-gen-pothos. DO NOT EDIT.
// source: testapis/proto3_optional/proto3_optional.proto

/* eslint-disable */

import { InputObjectRef } from "@pothos/core";
import { builder } from "../../builder";
import { Messgae } from "./testapis/proto3_optional/proto3_optional";

export const Messgae$Ref = builder.objectRef<Messgae>("Messgae");
builder.objectType(Messgae$Ref, {
  name: "Messgae",
  fields: (t) => ({
    requiredStringValue: t.expose("requiredStringValue", {
      type: "String",
      nullable: false,
      extensions: {
        protobufField: {
          name: "required_string_value",
          typeFullName: "string",
        },
      },
    }),
    optionalStringValue: t.expose("optionalStringValue", {
      type: "String",
      nullable: true,
      extensions: {
        protobufField: {
          name: "optional_string_value",
          typeFullName: "string",
        },
      },
    }),
  }),
  isTypeOf: (source) => {
    return (source as Messgae | { $type: string & {}; }).$type ===
      "testapis.proto3_optional.Messgae";
  },
  extensions: {
    protobufMessage: {
      fullName: "testapis.proto3_optional.Messgae",
      name: "Messgae",
      package: "testapis.proto3_optional",
    },
  },
});

export type MessgaeInput$Shape = {
  requiredStringValue: Messgae["requiredStringValue"];
  optionalStringValue?: Messgae["optionalStringValue"] | null;
};

export const MessgaeInput$Ref: InputObjectRef<MessgaeInput$Shape> = builder
  .inputRef<MessgaeInput$Shape>("MessgaeInput").implement({
    fields: (t) => ({
      requiredStringValue: t.field({
        type: "String",
        required: true,
        extensions: {
          protobufField: {
            name: "required_string_value",
            typeFullName: "string",
          },
        },
      }),
      optionalStringValue: t.field({
        type: "String",
        required: false,
        extensions: {
          protobufField: {
            name: "optional_string_value",
            typeFullName: "string",
          },
        },
      }),
    }),
    extensions: {
      protobufMessage: {
        fullName: "testapis.proto3_optional.Messgae",
        name: "Messgae",
        package: "testapis.proto3_optional",
      },
    },
  });
"
`;
