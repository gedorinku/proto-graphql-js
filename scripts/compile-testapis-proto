#!/usr/bin/env bash

set -eu
set -o pipefail

cd $(dirname $0)/..

PLUGIN_ROOT=./packages/protoc-gen-nexus
PROTO_ROOT=./devPackages/testapis-proto/src
OUT_ROOT=./e2e/testapis
LIBRARY_PATH=./proto-graphql/proto

clean() {
  rm -rf $OUT_ROOT/google-protobuf/lib
  rm -rf $OUT_ROOT/protobufjs/lib
  rm -rf $OUT_ROOT/ts-proto/{src,lib}
  rm -rf $OUT_ROOT/ts-proto-with-forcelong-long/{src,lib}
  rm -rf $OUT_ROOT/ts-proto-with-forcelong-number/{src,lib}
}

init() {
  mkdir -p $OUT_ROOT/google-protobuf/lib
  mkdir -p $OUT_ROOT/protobufjs/lib
  mkdir -p $OUT_ROOT/ts-proto/{src,lib}
  mkdir -p $OUT_ROOT/ts-proto-with-forcelong-long/{src,lib}
  mkdir -p $OUT_ROOT/ts-proto-with-forcelong-number/{src,lib}
}

protocw() {
  ./scripts/protocw \
    -I $LIBRARY_PATH \
    -I $PROTO_ROOT \
  "$@"
}

listPackages() {
  find $PROTO_ROOT/testapis -name '*.proto' | xargs dirname | sort | uniq
}

execProtoc() {
  protocw \
    --plugin=protoc-gen-ts=`yarn bin protoc-gen-ts` \
    --js_out="$OUT_ROOT/google-protobuf/lib" --js_opt=import_style=commonjs,binary \
    --ts_out="$OUT_ROOT/google-protobuf/lib" \
    ${LIBRARY_PATH}/graphql/*.proto

  for protoDir in $(listPackages); do
    protocw --include_source_info --include_imports --descriptor_set_out=${protoDir}/descriptor_set.pb ${protoDir}/*.proto

    protocw \
      --plugin=protoc-gen-ts=`yarn bin protoc-gen-ts` \
      --js_out="$OUT_ROOT/google-protobuf/lib" --js_opt=import_style=commonjs,binary \
      --ts_out="$OUT_ROOT/google-protobuf/lib" \
      ${protoDir}/*.proto

    pbjsOutDir="${protoDir/$PROTO_ROOT\//$OUT_ROOT/protobufjs/lib/}"
    mkdir -p $pbjsOutDir
    yarn pbjs \
      --target static-module \
      --wrap commonjs \
      --force-message \
      --path $PROTO_ROOT \
      --out "$pbjsOutDir/index.js" \
      ${protoDir}/*.proto
    yarn pbts --out "$pbjsOutDir/index.d.ts" "$pbjsOutDir/index.js"

    protocw \
      --plugin=protoc-gen-ts_proto=`yarn bin protoc-gen-ts_proto` \
      --ts_proto_out="$OUT_ROOT/ts-proto/src" --ts_proto_opt=enumsAsLiterals=true,forceLong=string,unrecognizedEnum=false,outputTypeRegistry=true,esModuleInterop=true \
      ${protoDir}/*.proto

    protocw \
      --plugin=protoc-gen-ts_proto=`yarn bin protoc-gen-ts_proto` \
      --ts_proto_out="$OUT_ROOT/ts-proto-with-forcelong-long/src" --ts_proto_opt=enumsAsLiterals=true,forceLong=long,unrecognizedEnum=false,outputTypeRegistry=true,esModuleInterop=true \
      ${protoDir}/*.proto

    protocw \
      --plugin=protoc-gen-ts_proto=`yarn bin protoc-gen-ts_proto` \
      --ts_proto_out="$OUT_ROOT/ts-proto-with-forcelong-number/src" --ts_proto_opt=enumsAsLiterals=true,forceLong=number,unrecognizedEnum=false,outputTypeRegistry=true,esModuleInterop=true \
      ${protoDir}/*.proto
  done
}

_main() {
  clean
  init
  execProtoc
  yarn workspace @proto-graphql/e2e-testapis-ts-proto build:test
  yarn workspace @proto-graphql/e2e-testapis-ts-proto-with-forcelong-long build:test
  yarn workspace @proto-graphql/e2e-testapis-ts-proto-with-forcelong-number build:test
}

_main
